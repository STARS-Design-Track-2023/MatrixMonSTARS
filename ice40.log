
 /----------------------------------------------------------------------------\
 |                                                                            |
 |  yosys -- Yosys Open SYnthesis Suite                                       |
 |                                                                            |
 |  Copyright (C) 2012 - 2020  Claire Xenia Wolf <claire@yosyshq.com>         |
 |                                                                            |
 |  Permission to use, copy, modify, and/or distribute this software for any  |
 |  purpose with or without fee is hereby granted, provided that the above    |
 |  copyright notice and this permission notice appear in all copies.         |
 |                                                                            |
 |  THE SOFTWARE IS PROVIDED "AS IS" AND THE AUTHOR DISCLAIMS ALL WARRANTIES  |
 |  WITH REGARD TO THIS SOFTWARE INCLUDING ALL IMPLIED WARRANTIES OF          |
 |  MERCHANTABILITY AND FITNESS. IN NO EVENT SHALL THE AUTHOR BE LIABLE FOR   |
 |  ANY SPECIAL, DIRECT, INDIRECT, OR CONSEQUENTIAL DAMAGES OR ANY DAMAGES    |
 |  WHATSOEVER RESULTING FROM LOSS OF USE, DATA OR PROFITS, WHETHER IN AN     |
 |  ACTION OF CONTRACT, NEGLIGENCE OR OTHER TORTIOUS ACTION, ARISING OUT OF   |
 |  OR IN CONNECTION WITH THE USE OR PERFORMANCE OF THIS SOFTWARE.            |
 |                                                                            |
 \----------------------------------------------------------------------------/

 Yosys 0.27 (git sha1 5f88c218b, gcc 11.3.0-1ubuntu1~22.04 -fPIC -O3)


-- Running command `read_verilog -sv -noblackbox ice40/ice40hx8k.sv source/top.sv source/key_encoder_binary.sv ice40/uart/uart.v ice40/uart/uart_tx.v ice40/uart/uart_rx.v; synth_ice40 -top ice40hx8k -json ./ice40/build/ice40.json' --

1. Executing Verilog-2005 frontend: ice40/ice40hx8k.sv
Parsing SystemVerilog input from `ice40/ice40hx8k.sv' to AST representation.
Generating RTLIL representation for module `\ice40hx8k'.
Generating RTLIL representation for module `\reset_on_start'.
Successfully finished Verilog frontend.

2. Executing Verilog-2005 frontend: source/top.sv
Parsing SystemVerilog input from `source/top.sv' to AST representation.
Generating RTLIL representation for module `\top'.
Successfully finished Verilog frontend.

3. Executing Verilog-2005 frontend: source/key_encoder_binary.sv
Parsing SystemVerilog input from `source/key_encoder_binary.sv' to AST representation.
Generating RTLIL representation for module `\key_encoder_binary'.
Successfully finished Verilog frontend.

4. Executing Verilog-2005 frontend: ice40/uart/uart.v
Parsing SystemVerilog input from `ice40/uart/uart.v' to AST representation.
Generating RTLIL representation for module `\uart'.
Successfully finished Verilog frontend.

5. Executing Verilog-2005 frontend: ice40/uart/uart_tx.v
Parsing SystemVerilog input from `ice40/uart/uart_tx.v' to AST representation.
Generating RTLIL representation for module `\uart_tx'.
Successfully finished Verilog frontend.

6. Executing Verilog-2005 frontend: ice40/uart/uart_rx.v
Parsing SystemVerilog input from `ice40/uart/uart_rx.v' to AST representation.
Generating RTLIL representation for module `\uart_rx'.
Successfully finished Verilog frontend.

7. Executing SYNTH_ICE40 pass.

7.1. Executing Verilog-2005 frontend: /home/shay/a/ece270/bin/../share/yosys/ice40/cells_sim.v
Parsing Verilog input from `/home/shay/a/ece270/bin/../share/yosys/ice40/cells_sim.v' to AST representation.
Generating RTLIL representation for module `\SB_IO'.
Generating RTLIL representation for module `\SB_GB_IO'.
Generating RTLIL representation for module `\SB_GB'.
Generating RTLIL representation for module `\SB_LUT4'.
Generating RTLIL representation for module `\SB_CARRY'.
Generating RTLIL representation for module `\SB_DFF'.
Generating RTLIL representation for module `\SB_DFFE'.
Generating RTLIL representation for module `\SB_DFFSR'.
Generating RTLIL representation for module `\SB_DFFR'.
Generating RTLIL representation for module `\SB_DFFSS'.
Generating RTLIL representation for module `\SB_DFFS'.
Generating RTLIL representation for module `\SB_DFFESR'.
Generating RTLIL representation for module `\SB_DFFER'.
Generating RTLIL representation for module `\SB_DFFESS'.
Generating RTLIL representation for module `\SB_DFFES'.
Generating RTLIL representation for module `\SB_DFFN'.
Generating RTLIL representation for module `\SB_DFFNE'.
Generating RTLIL representation for module `\SB_DFFNSR'.
Generating RTLIL representation for module `\SB_DFFNR'.
Generating RTLIL representation for module `\SB_DFFNSS'.
Generating RTLIL representation for module `\SB_DFFNS'.
Generating RTLIL representation for module `\SB_DFFNESR'.
Generating RTLIL representation for module `\SB_DFFNER'.
Generating RTLIL representation for module `\SB_DFFNESS'.
Generating RTLIL representation for module `\SB_DFFNES'.
Generating RTLIL representation for module `\SB_RAM40_4K'.
Generating RTLIL representation for module `\SB_RAM40_4KNR'.
Generating RTLIL representation for module `\SB_RAM40_4KNW'.
Generating RTLIL representation for module `\SB_RAM40_4KNRNW'.
Generating RTLIL representation for module `\ICESTORM_LC'.
Generating RTLIL representation for module `\SB_PLL40_CORE'.
Generating RTLIL representation for module `\SB_PLL40_PAD'.
Generating RTLIL representation for module `\SB_PLL40_2_PAD'.
Generating RTLIL representation for module `\SB_PLL40_2F_CORE'.
Generating RTLIL representation for module `\SB_PLL40_2F_PAD'.
Generating RTLIL representation for module `\SB_WARMBOOT'.
Generating RTLIL representation for module `\SB_SPRAM256KA'.
Generating RTLIL representation for module `\SB_HFOSC'.
Generating RTLIL representation for module `\SB_LFOSC'.
Generating RTLIL representation for module `\SB_RGBA_DRV'.
Generating RTLIL representation for module `\SB_LED_DRV_CUR'.
Generating RTLIL representation for module `\SB_RGB_DRV'.
Generating RTLIL representation for module `\SB_I2C'.
Generating RTLIL representation for module `\SB_SPI'.
Generating RTLIL representation for module `\SB_LEDDA_IP'.
Generating RTLIL representation for module `\SB_FILTER_50NS'.
Generating RTLIL representation for module `\SB_IO_I3C'.
Generating RTLIL representation for module `\SB_IO_OD'.
Generating RTLIL representation for module `\SB_MAC16'.
Generating RTLIL representation for module `\ICESTORM_RAM'.
Successfully finished Verilog frontend.

7.2. Executing HIERARCHY pass (managing design hierarchy).

7.2.1. Analyzing design hierarchy..
Top module:  \ice40hx8k
Used module:     \top
Used module:         \key_encoder_binary
Used module:     \reset_on_start
Used module:     \uart
Used module:         \uart_rx
Used module:         \uart_tx
Parameter \DATA_WIDTH = 8

7.2.2. Executing AST frontend in derive mode using pre-parsed AST for module `\uart_rx'.
Parameter \DATA_WIDTH = 8
Generating RTLIL representation for module `$paramod\uart_rx\DATA_WIDTH=s32'00000000000000000000000000001000'.
Parameter \DATA_WIDTH = 8

7.2.3. Executing AST frontend in derive mode using pre-parsed AST for module `\uart_tx'.
Parameter \DATA_WIDTH = 8
Generating RTLIL representation for module `$paramod\uart_tx\DATA_WIDTH=s32'00000000000000000000000000001000'.

7.2.4. Analyzing design hierarchy..
Top module:  \ice40hx8k
Used module:     \top
Used module:         \key_encoder_binary
Used module:     \reset_on_start
Used module:     \uart
Used module:         $paramod\uart_rx\DATA_WIDTH=s32'00000000000000000000000000001000
Used module:         $paramod\uart_tx\DATA_WIDTH=s32'00000000000000000000000000001000

7.2.5. Analyzing design hierarchy..
Top module:  \ice40hx8k
Used module:     \top
Used module:         \key_encoder_binary
Used module:     \reset_on_start
Used module:     \uart
Used module:         $paramod\uart_rx\DATA_WIDTH=s32'00000000000000000000000000001000
Used module:         $paramod\uart_tx\DATA_WIDTH=s32'00000000000000000000000000001000
Removing unused module `\uart_rx'.
Removing unused module `\uart_tx'.
Removed 2 unused modules.
Mapping positional arguments of cell ice40hx8k.top_inst (top).
Mapping positional arguments of cell ice40hx8k.ros (reset_on_start).
Warning: Resizing cell port ice40hx8k.uart_inst.prescale from 32 bits to 16 bits.
Warning: Resizing cell port ice40hx8k.uart_inst.rst from 32 bits to 1 bits.

7.3. Executing PROC pass (convert processes to netlists).

7.3.1. Executing PROC_CLEAN pass (remove empty switches from decision trees).
Cleaned up 0 empty switches.

7.3.2. Executing PROC_RMDEAD pass (remove dead branches from decision trees).
Marked 1 switch rules as full_case in process $proc$/home/shay/a/ece270/bin/../share/yosys/ice40/cells_sim.v:1414$325 in module SB_DFFNES.
Marked 1 switch rules as full_case in process $proc$/home/shay/a/ece270/bin/../share/yosys/ice40/cells_sim.v:1353$318 in module SB_DFFNESS.
Marked 1 switch rules as full_case in process $proc$/home/shay/a/ece270/bin/../share/yosys/ice40/cells_sim.v:1273$314 in module SB_DFFNER.
Marked 1 switch rules as full_case in process $proc$/home/shay/a/ece270/bin/../share/yosys/ice40/cells_sim.v:1212$307 in module SB_DFFNESR.
Marked 1 switch rules as full_case in process $proc$/home/shay/a/ece270/bin/../share/yosys/ice40/cells_sim.v:1138$304 in module SB_DFFNS.
Marked 1 switch rules as full_case in process $proc$/home/shay/a/ece270/bin/../share/yosys/ice40/cells_sim.v:1088$301 in module SB_DFFNSS.
Marked 1 switch rules as full_case in process $proc$/home/shay/a/ece270/bin/../share/yosys/ice40/cells_sim.v:1017$298 in module SB_DFFNR.
Marked 1 switch rules as full_case in process $proc$/home/shay/a/ece270/bin/../share/yosys/ice40/cells_sim.v:967$295 in module SB_DFFNSR.
Marked 1 switch rules as full_case in process $proc$/home/shay/a/ece270/bin/../share/yosys/ice40/cells_sim.v:803$287 in module SB_DFFES.
Marked 1 switch rules as full_case in process $proc$/home/shay/a/ece270/bin/../share/yosys/ice40/cells_sim.v:742$280 in module SB_DFFESS.
Marked 1 switch rules as full_case in process $proc$/home/shay/a/ece270/bin/../share/yosys/ice40/cells_sim.v:662$276 in module SB_DFFER.
Marked 1 switch rules as full_case in process $proc$/home/shay/a/ece270/bin/../share/yosys/ice40/cells_sim.v:601$269 in module SB_DFFESR.
Marked 1 switch rules as full_case in process $proc$/home/shay/a/ece270/bin/../share/yosys/ice40/cells_sim.v:527$266 in module SB_DFFS.
Marked 1 switch rules as full_case in process $proc$/home/shay/a/ece270/bin/../share/yosys/ice40/cells_sim.v:477$263 in module SB_DFFSS.
Marked 1 switch rules as full_case in process $proc$/home/shay/a/ece270/bin/../share/yosys/ice40/cells_sim.v:406$260 in module SB_DFFR.
Marked 1 switch rules as full_case in process $proc$/home/shay/a/ece270/bin/../share/yosys/ice40/cells_sim.v:356$257 in module SB_DFFSR.
Marked 4 switch rules as full_case in process $proc$ice40/uart/uart_tx.v:78$493 in module $paramod\uart_tx\DATA_WIDTH=s32'00000000000000000000000000001000.
Marked 7 switch rules as full_case in process $proc$ice40/uart/uart_rx.v:86$465 in module $paramod\uart_rx\DATA_WIDTH=s32'00000000000000000000000000001000.
Marked 2 switch rules as full_case in process $proc$source/key_encoder_binary.sv:0$36 in module key_encoder_binary.
Marked 2 switch rules as full_case in process $proc$source/key_encoder_binary.sv:0$33 in module key_encoder_binary.
Marked 10 switch rules as full_case in process $proc$source/key_encoder_binary.sv:0$32 in module key_encoder_binary.
Marked 1 switch rules as full_case in process $proc$source/key_encoder_binary.sv:0$27 in module key_encoder_binary.
Marked 1 switch rules as full_case in process $proc$source/key_encoder_binary.sv:15$25 in module key_encoder_binary.
Marked 5 switch rules as full_case in process $proc$ice40/ice40hx8k.sv:131$16 in module reset_on_start.
Marked 1 switch rules as full_case in process $proc$ice40/ice40hx8k.sv:104$9 in module ice40hx8k.
Marked 1 switch rules as full_case in process $proc$ice40/ice40hx8k.sv:98$7 in module ice40hx8k.
Marked 1 switch rules as full_case in process $proc$ice40/ice40hx8k.sv:14$1 in module ice40hx8k.
Removed a total of 0 dead cases.

7.3.3. Executing PROC_PRUNE pass (remove redundant assignments in processes).
Removed 19 redundant assignments.
Promoted 45 assignments to connections.

7.3.4. Executing PROC_INIT pass (extract init attributes).
Found init rule in `\SB_DFFNES.$proc$/home/shay/a/ece270/bin/../share/yosys/ice40/cells_sim.v:0$328'.
  Set init value: \Q = 1'0
Found init rule in `\SB_DFFNESS.$proc$/home/shay/a/ece270/bin/../share/yosys/ice40/cells_sim.v:0$324'.
  Set init value: \Q = 1'0
Found init rule in `\SB_DFFNER.$proc$/home/shay/a/ece270/bin/../share/yosys/ice40/cells_sim.v:0$317'.
  Set init value: \Q = 1'0
Found init rule in `\SB_DFFNESR.$proc$/home/shay/a/ece270/bin/../share/yosys/ice40/cells_sim.v:0$313'.
  Set init value: \Q = 1'0
Found init rule in `\SB_DFFNS.$proc$/home/shay/a/ece270/bin/../share/yosys/ice40/cells_sim.v:0$306'.
  Set init value: \Q = 1'0
Found init rule in `\SB_DFFNSS.$proc$/home/shay/a/ece270/bin/../share/yosys/ice40/cells_sim.v:0$303'.
  Set init value: \Q = 1'0
Found init rule in `\SB_DFFNR.$proc$/home/shay/a/ece270/bin/../share/yosys/ice40/cells_sim.v:0$300'.
  Set init value: \Q = 1'0
Found init rule in `\SB_DFFNSR.$proc$/home/shay/a/ece270/bin/../share/yosys/ice40/cells_sim.v:0$297'.
  Set init value: \Q = 1'0
Found init rule in `\SB_DFFNE.$proc$/home/shay/a/ece270/bin/../share/yosys/ice40/cells_sim.v:0$294'.
  Set init value: \Q = 1'0
Found init rule in `\SB_DFFN.$proc$/home/shay/a/ece270/bin/../share/yosys/ice40/cells_sim.v:0$292'.
  Set init value: \Q = 1'0
Found init rule in `\SB_DFFES.$proc$/home/shay/a/ece270/bin/../share/yosys/ice40/cells_sim.v:0$290'.
  Set init value: \Q = 1'0
Found init rule in `\SB_DFFESS.$proc$/home/shay/a/ece270/bin/../share/yosys/ice40/cells_sim.v:0$286'.
  Set init value: \Q = 1'0
Found init rule in `\SB_DFFER.$proc$/home/shay/a/ece270/bin/../share/yosys/ice40/cells_sim.v:0$279'.
  Set init value: \Q = 1'0
Found init rule in `\SB_DFFESR.$proc$/home/shay/a/ece270/bin/../share/yosys/ice40/cells_sim.v:0$275'.
  Set init value: \Q = 1'0
Found init rule in `\SB_DFFS.$proc$/home/shay/a/ece270/bin/../share/yosys/ice40/cells_sim.v:0$268'.
  Set init value: \Q = 1'0
Found init rule in `\SB_DFFSS.$proc$/home/shay/a/ece270/bin/../share/yosys/ice40/cells_sim.v:0$265'.
  Set init value: \Q = 1'0
Found init rule in `\SB_DFFR.$proc$/home/shay/a/ece270/bin/../share/yosys/ice40/cells_sim.v:0$262'.
  Set init value: \Q = 1'0
Found init rule in `\SB_DFFSR.$proc$/home/shay/a/ece270/bin/../share/yosys/ice40/cells_sim.v:0$259'.
  Set init value: \Q = 1'0
Found init rule in `\SB_DFFE.$proc$/home/shay/a/ece270/bin/../share/yosys/ice40/cells_sim.v:0$256'.
  Set init value: \Q = 1'0
Found init rule in `\SB_DFF.$proc$/home/shay/a/ece270/bin/../share/yosys/ice40/cells_sim.v:0$254'.
  Set init value: \Q = 1'0
Found init rule in `$paramod\uart_tx\DATA_WIDTH=s32'00000000000000000000000000001000.$proc$ice40/uart/uart_tx.v:71$512'.
  Set init value: \bit_cnt = 4'0000
Found init rule in `$paramod\uart_tx\DATA_WIDTH=s32'00000000000000000000000000001000.$proc$ice40/uart/uart_tx.v:70$511'.
  Set init value: \prescale_reg = 19'0000000000000000000
Found init rule in `$paramod\uart_tx\DATA_WIDTH=s32'00000000000000000000000000001000.$proc$ice40/uart/uart_tx.v:69$510'.
  Set init value: \data_reg = 9'000000000
Found init rule in `$paramod\uart_tx\DATA_WIDTH=s32'00000000000000000000000000001000.$proc$ice40/uart/uart_tx.v:67$509'.
  Set init value: \busy_reg = 1'0
Found init rule in `$paramod\uart_tx\DATA_WIDTH=s32'00000000000000000000000000001000.$proc$ice40/uart/uart_tx.v:65$508'.
  Set init value: \txd_reg = 1'1
Found init rule in `$paramod\uart_tx\DATA_WIDTH=s32'00000000000000000000000000001000.$proc$ice40/uart/uart_tx.v:63$507'.
  Set init value: \input_axis_tready_reg = 1'0
Found init rule in `$paramod\uart_rx\DATA_WIDTH=s32'00000000000000000000000000001000.$proc$ice40/uart/uart_rx.v:77$492'.
  Set init value: \bit_cnt = 4'0000
Found init rule in `$paramod\uart_rx\DATA_WIDTH=s32'00000000000000000000000000001000.$proc$ice40/uart/uart_rx.v:76$491'.
  Set init value: \prescale_reg = 19'0000000000000000000
Found init rule in `$paramod\uart_rx\DATA_WIDTH=s32'00000000000000000000000000001000.$proc$ice40/uart/uart_rx.v:75$490'.
  Set init value: \data_reg = 8'00000000
Found init rule in `$paramod\uart_rx\DATA_WIDTH=s32'00000000000000000000000000001000.$proc$ice40/uart/uart_rx.v:73$489'.
  Set init value: \frame_error_reg = 1'0
Found init rule in `$paramod\uart_rx\DATA_WIDTH=s32'00000000000000000000000000001000.$proc$ice40/uart/uart_rx.v:72$488'.
  Set init value: \overrun_error_reg = 1'0
Found init rule in `$paramod\uart_rx\DATA_WIDTH=s32'00000000000000000000000000001000.$proc$ice40/uart/uart_rx.v:71$487'.
  Set init value: \busy_reg = 1'0
Found init rule in `$paramod\uart_rx\DATA_WIDTH=s32'00000000000000000000000000001000.$proc$ice40/uart/uart_rx.v:69$486'.
  Set init value: \rxd_reg = 1'1
Found init rule in `$paramod\uart_rx\DATA_WIDTH=s32'00000000000000000000000000001000.$proc$ice40/uart/uart_rx.v:67$485'.
  Set init value: \output_axis_tvalid_reg = 1'0
Found init rule in `$paramod\uart_rx\DATA_WIDTH=s32'00000000000000000000000000001000.$proc$ice40/uart/uart_rx.v:66$484'.
  Set init value: \output_axis_tdata_reg = 8'00000000
Found init rule in `\reset_on_start.$proc$ice40/ice40hx8k.sv:129$23'.
  Set init value: \startup = 3'000
Found init rule in `\ice40hx8k.$proc$ice40/ice40hx8k.sv:13$14'.
  Set init value: \hz100 = 1'0
Found init rule in `\ice40hx8k.$proc$ice40/ice40hx8k.sv:12$13'.
  Set init value: \ctr = 16'0000000000000000

7.3.5. Executing PROC_ARST pass (detect async resets in processes).
Found async reset \S in `\SB_DFFNES.$proc$/home/shay/a/ece270/bin/../share/yosys/ice40/cells_sim.v:1414$325'.
Found async reset \R in `\SB_DFFNER.$proc$/home/shay/a/ece270/bin/../share/yosys/ice40/cells_sim.v:1273$314'.
Found async reset \S in `\SB_DFFNS.$proc$/home/shay/a/ece270/bin/../share/yosys/ice40/cells_sim.v:1138$304'.
Found async reset \R in `\SB_DFFNR.$proc$/home/shay/a/ece270/bin/../share/yosys/ice40/cells_sim.v:1017$298'.
Found async reset \S in `\SB_DFFES.$proc$/home/shay/a/ece270/bin/../share/yosys/ice40/cells_sim.v:803$287'.
Found async reset \R in `\SB_DFFER.$proc$/home/shay/a/ece270/bin/../share/yosys/ice40/cells_sim.v:662$276'.
Found async reset \S in `\SB_DFFS.$proc$/home/shay/a/ece270/bin/../share/yosys/ice40/cells_sim.v:527$266'.
Found async reset \R in `\SB_DFFR.$proc$/home/shay/a/ece270/bin/../share/yosys/ice40/cells_sim.v:406$260'.
Found async reset \nrst in `\key_encoder_binary.$proc$source/key_encoder_binary.sv:15$25'.
Found async reset \manual in `\reset_on_start.$proc$ice40/ice40hx8k.sv:131$16'.
Found async reset \rxready in `\ice40hx8k.$proc$ice40/ice40hx8k.sv:104$9'.
Found async reset \txready in `\ice40hx8k.$proc$ice40/ice40hx8k.sv:98$7'.

7.3.6. Executing PROC_ROM pass (convert switches to ROMs).
Converted 0 switches.
<suppressed ~55 debug messages>

7.3.7. Executing PROC_MUX pass (convert decision trees to multiplexers).
Creating decoders for process `\SB_DFFNES.$proc$/home/shay/a/ece270/bin/../share/yosys/ice40/cells_sim.v:0$328'.
Creating decoders for process `\SB_DFFNES.$proc$/home/shay/a/ece270/bin/../share/yosys/ice40/cells_sim.v:1414$325'.
     1/1: $0\Q[0:0]
Creating decoders for process `\SB_DFFNESS.$proc$/home/shay/a/ece270/bin/../share/yosys/ice40/cells_sim.v:0$324'.
Creating decoders for process `\SB_DFFNESS.$proc$/home/shay/a/ece270/bin/../share/yosys/ice40/cells_sim.v:1353$318'.
     1/1: $0\Q[0:0]
Creating decoders for process `\SB_DFFNER.$proc$/home/shay/a/ece270/bin/../share/yosys/ice40/cells_sim.v:0$317'.
Creating decoders for process `\SB_DFFNER.$proc$/home/shay/a/ece270/bin/../share/yosys/ice40/cells_sim.v:1273$314'.
     1/1: $0\Q[0:0]
Creating decoders for process `\SB_DFFNESR.$proc$/home/shay/a/ece270/bin/../share/yosys/ice40/cells_sim.v:0$313'.
Creating decoders for process `\SB_DFFNESR.$proc$/home/shay/a/ece270/bin/../share/yosys/ice40/cells_sim.v:1212$307'.
     1/1: $0\Q[0:0]
Creating decoders for process `\SB_DFFNS.$proc$/home/shay/a/ece270/bin/../share/yosys/ice40/cells_sim.v:0$306'.
Creating decoders for process `\SB_DFFNS.$proc$/home/shay/a/ece270/bin/../share/yosys/ice40/cells_sim.v:1138$304'.
     1/1: $0\Q[0:0]
Creating decoders for process `\SB_DFFNSS.$proc$/home/shay/a/ece270/bin/../share/yosys/ice40/cells_sim.v:0$303'.
Creating decoders for process `\SB_DFFNSS.$proc$/home/shay/a/ece270/bin/../share/yosys/ice40/cells_sim.v:1088$301'.
     1/1: $0\Q[0:0]
Creating decoders for process `\SB_DFFNR.$proc$/home/shay/a/ece270/bin/../share/yosys/ice40/cells_sim.v:0$300'.
Creating decoders for process `\SB_DFFNR.$proc$/home/shay/a/ece270/bin/../share/yosys/ice40/cells_sim.v:1017$298'.
     1/1: $0\Q[0:0]
Creating decoders for process `\SB_DFFNSR.$proc$/home/shay/a/ece270/bin/../share/yosys/ice40/cells_sim.v:0$297'.
Creating decoders for process `\SB_DFFNSR.$proc$/home/shay/a/ece270/bin/../share/yosys/ice40/cells_sim.v:967$295'.
     1/1: $0\Q[0:0]
Creating decoders for process `\SB_DFFNE.$proc$/home/shay/a/ece270/bin/../share/yosys/ice40/cells_sim.v:0$294'.
Creating decoders for process `\SB_DFFNE.$proc$/home/shay/a/ece270/bin/../share/yosys/ice40/cells_sim.v:922$293'.
     1/1: $0\Q[0:0]
Creating decoders for process `\SB_DFFN.$proc$/home/shay/a/ece270/bin/../share/yosys/ice40/cells_sim.v:0$292'.
Creating decoders for process `\SB_DFFN.$proc$/home/shay/a/ece270/bin/../share/yosys/ice40/cells_sim.v:882$291'.
Creating decoders for process `\SB_DFFES.$proc$/home/shay/a/ece270/bin/../share/yosys/ice40/cells_sim.v:0$290'.
Creating decoders for process `\SB_DFFES.$proc$/home/shay/a/ece270/bin/../share/yosys/ice40/cells_sim.v:803$287'.
     1/1: $0\Q[0:0]
Creating decoders for process `\SB_DFFESS.$proc$/home/shay/a/ece270/bin/../share/yosys/ice40/cells_sim.v:0$286'.
Creating decoders for process `\SB_DFFESS.$proc$/home/shay/a/ece270/bin/../share/yosys/ice40/cells_sim.v:742$280'.
     1/1: $0\Q[0:0]
Creating decoders for process `\SB_DFFER.$proc$/home/shay/a/ece270/bin/../share/yosys/ice40/cells_sim.v:0$279'.
Creating decoders for process `\SB_DFFER.$proc$/home/shay/a/ece270/bin/../share/yosys/ice40/cells_sim.v:662$276'.
     1/1: $0\Q[0:0]
Creating decoders for process `\SB_DFFESR.$proc$/home/shay/a/ece270/bin/../share/yosys/ice40/cells_sim.v:0$275'.
Creating decoders for process `\SB_DFFESR.$proc$/home/shay/a/ece270/bin/../share/yosys/ice40/cells_sim.v:601$269'.
     1/1: $0\Q[0:0]
Creating decoders for process `\SB_DFFS.$proc$/home/shay/a/ece270/bin/../share/yosys/ice40/cells_sim.v:0$268'.
Creating decoders for process `\SB_DFFS.$proc$/home/shay/a/ece270/bin/../share/yosys/ice40/cells_sim.v:527$266'.
     1/1: $0\Q[0:0]
Creating decoders for process `\SB_DFFSS.$proc$/home/shay/a/ece270/bin/../share/yosys/ice40/cells_sim.v:0$265'.
Creating decoders for process `\SB_DFFSS.$proc$/home/shay/a/ece270/bin/../share/yosys/ice40/cells_sim.v:477$263'.
     1/1: $0\Q[0:0]
Creating decoders for process `\SB_DFFR.$proc$/home/shay/a/ece270/bin/../share/yosys/ice40/cells_sim.v:0$262'.
Creating decoders for process `\SB_DFFR.$proc$/home/shay/a/ece270/bin/../share/yosys/ice40/cells_sim.v:406$260'.
     1/1: $0\Q[0:0]
Creating decoders for process `\SB_DFFSR.$proc$/home/shay/a/ece270/bin/../share/yosys/ice40/cells_sim.v:0$259'.
Creating decoders for process `\SB_DFFSR.$proc$/home/shay/a/ece270/bin/../share/yosys/ice40/cells_sim.v:356$257'.
     1/1: $0\Q[0:0]
Creating decoders for process `\SB_DFFE.$proc$/home/shay/a/ece270/bin/../share/yosys/ice40/cells_sim.v:0$256'.
Creating decoders for process `\SB_DFFE.$proc$/home/shay/a/ece270/bin/../share/yosys/ice40/cells_sim.v:311$255'.
     1/1: $0\Q[0:0]
Creating decoders for process `\SB_DFF.$proc$/home/shay/a/ece270/bin/../share/yosys/ice40/cells_sim.v:0$254'.
Creating decoders for process `\SB_DFF.$proc$/home/shay/a/ece270/bin/../share/yosys/ice40/cells_sim.v:271$253'.
Creating decoders for process `$paramod\uart_tx\DATA_WIDTH=s32'00000000000000000000000000001000.$proc$ice40/uart/uart_tx.v:71$512'.
Creating decoders for process `$paramod\uart_tx\DATA_WIDTH=s32'00000000000000000000000000001000.$proc$ice40/uart/uart_tx.v:70$511'.
Creating decoders for process `$paramod\uart_tx\DATA_WIDTH=s32'00000000000000000000000000001000.$proc$ice40/uart/uart_tx.v:69$510'.
Creating decoders for process `$paramod\uart_tx\DATA_WIDTH=s32'00000000000000000000000000001000.$proc$ice40/uart/uart_tx.v:67$509'.
Creating decoders for process `$paramod\uart_tx\DATA_WIDTH=s32'00000000000000000000000000001000.$proc$ice40/uart/uart_tx.v:65$508'.
Creating decoders for process `$paramod\uart_tx\DATA_WIDTH=s32'00000000000000000000000000001000.$proc$ice40/uart/uart_tx.v:63$507'.
Creating decoders for process `$paramod\uart_tx\DATA_WIDTH=s32'00000000000000000000000000001000.$proc$ice40/uart/uart_tx.v:78$493'.
     1/6: $0\data_reg[8:0]
     2/6: $0\prescale_reg[18:0]
     3/6: $0\txd_reg[0:0]
     4/6: $0\busy_reg[0:0]
     5/6: $0\bit_cnt[3:0]
     6/6: $0\input_axis_tready_reg[0:0]
Creating decoders for process `$paramod\uart_rx\DATA_WIDTH=s32'00000000000000000000000000001000.$proc$ice40/uart/uart_rx.v:77$492'.
Creating decoders for process `$paramod\uart_rx\DATA_WIDTH=s32'00000000000000000000000000001000.$proc$ice40/uart/uart_rx.v:76$491'.
Creating decoders for process `$paramod\uart_rx\DATA_WIDTH=s32'00000000000000000000000000001000.$proc$ice40/uart/uart_rx.v:75$490'.
Creating decoders for process `$paramod\uart_rx\DATA_WIDTH=s32'00000000000000000000000000001000.$proc$ice40/uart/uart_rx.v:73$489'.
Creating decoders for process `$paramod\uart_rx\DATA_WIDTH=s32'00000000000000000000000000001000.$proc$ice40/uart/uart_rx.v:72$488'.
Creating decoders for process `$paramod\uart_rx\DATA_WIDTH=s32'00000000000000000000000000001000.$proc$ice40/uart/uart_rx.v:71$487'.
Creating decoders for process `$paramod\uart_rx\DATA_WIDTH=s32'00000000000000000000000000001000.$proc$ice40/uart/uart_rx.v:69$486'.
Creating decoders for process `$paramod\uart_rx\DATA_WIDTH=s32'00000000000000000000000000001000.$proc$ice40/uart/uart_rx.v:67$485'.
Creating decoders for process `$paramod\uart_rx\DATA_WIDTH=s32'00000000000000000000000000001000.$proc$ice40/uart/uart_rx.v:66$484'.
Creating decoders for process `$paramod\uart_rx\DATA_WIDTH=s32'00000000000000000000000000001000.$proc$ice40/uart/uart_rx.v:86$465'.
     1/9: $0\frame_error_reg[0:0]
     2/9: $0\overrun_error_reg[0:0]
     3/9: $0\rxd_reg[0:0]
     4/9: $0\output_axis_tvalid_reg[0:0]
     5/9: $0\output_axis_tdata_reg[7:0]
     6/9: $0\bit_cnt[3:0]
     7/9: $0\prescale_reg[18:0]
     8/9: $0\data_reg[7:0]
     9/9: $0\busy_reg[0:0]
Creating decoders for process `\key_encoder_binary.$proc$source/key_encoder_binary.sv:0$36'.
     1/4: $2\use_code[0:0]
     2/4: $2\code_choice[0:0]
     3/4: $1\use_code[0:0]
     4/4: $1\code_choice[0:0]
Creating decoders for process `\key_encoder_binary.$proc$source/key_encoder_binary.sv:0$33'.
     1/2: $2\partial_code[8:0]
     2/2: $1\partial_code[8:0]
Creating decoders for process `\key_encoder_binary.$proc$source/key_encoder_binary.sv:0$32'.
     1/10: $10\next_state[3:0]
     2/10: $9\next_state[3:0]
     3/10: $8\next_state[3:0]
     4/10: $7\next_state[3:0]
     5/10: $6\next_state[3:0]
     6/10: $5\next_state[3:0]
     7/10: $4\next_state[3:0]
     8/10: $3\next_state[3:0]
     9/10: $2\next_state[3:0]
    10/10: $1\next_state[3:0]
Creating decoders for process `\key_encoder_binary.$proc$source/key_encoder_binary.sv:0$27'.
     1/1: $1\strobe[0:0]
Creating decoders for process `\key_encoder_binary.$proc$source/key_encoder_binary.sv:15$25'.
     1/5: $0\keycode[8:0]
     2/5: $0\state[3:0]
     3/5: $0\keypad_i[1:0]
     4/5: $0\keypad_sync[1:0]
     5/5: $0\keypad_async[1:0]
Creating decoders for process `\reset_on_start.$proc$ice40/ice40hx8k.sv:129$23'.
Creating decoders for process `\reset_on_start.$proc$ice40/ice40hx8k.sv:131$16'.
     1/1: $0\startup[2:0]
Creating decoders for process `\ice40hx8k.$proc$ice40/ice40hx8k.sv:13$14'.
Creating decoders for process `\ice40hx8k.$proc$ice40/ice40hx8k.sv:12$13'.
Creating decoders for process `\ice40hx8k.$proc$ice40/ice40hx8k.sv:104$9'.
     1/1: $0\recv[0:0]
Creating decoders for process `\ice40hx8k.$proc$ice40/ice40hx8k.sv:98$7'.
     1/1: $0\xmit[0:0]
Creating decoders for process `\ice40hx8k.$proc$ice40/ice40hx8k.sv:14$1'.
     1/2: $0\ctr[15:0]
     2/2: $0\hz100[0:0]

7.3.8. Executing PROC_DLATCH pass (convert process syncs to latches).
No latch inferred for signal `\key_encoder_binary.\code_choice' from process `\key_encoder_binary.$proc$source/key_encoder_binary.sv:0$36'.
No latch inferred for signal `\key_encoder_binary.\use_code' from process `\key_encoder_binary.$proc$source/key_encoder_binary.sv:0$36'.
No latch inferred for signal `\key_encoder_binary.\partial_code' from process `\key_encoder_binary.$proc$source/key_encoder_binary.sv:0$33'.
No latch inferred for signal `\key_encoder_binary.\next_state' from process `\key_encoder_binary.$proc$source/key_encoder_binary.sv:0$32'.
No latch inferred for signal `\key_encoder_binary.\strobe' from process `\key_encoder_binary.$proc$source/key_encoder_binary.sv:0$27'.

7.3.9. Executing PROC_DFF pass (convert process syncs to FFs).
Creating register for signal `\SB_DFFNES.\Q' using process `\SB_DFFNES.$proc$/home/shay/a/ece270/bin/../share/yosys/ice40/cells_sim.v:1414$325'.
  created $adff cell `$procdff$948' with negative edge clock and positive level reset.
Creating register for signal `\SB_DFFNESS.\Q' using process `\SB_DFFNESS.$proc$/home/shay/a/ece270/bin/../share/yosys/ice40/cells_sim.v:1353$318'.
  created $dff cell `$procdff$949' with negative edge clock.
Creating register for signal `\SB_DFFNER.\Q' using process `\SB_DFFNER.$proc$/home/shay/a/ece270/bin/../share/yosys/ice40/cells_sim.v:1273$314'.
  created $adff cell `$procdff$950' with negative edge clock and positive level reset.
Creating register for signal `\SB_DFFNESR.\Q' using process `\SB_DFFNESR.$proc$/home/shay/a/ece270/bin/../share/yosys/ice40/cells_sim.v:1212$307'.
  created $dff cell `$procdff$951' with negative edge clock.
Creating register for signal `\SB_DFFNS.\Q' using process `\SB_DFFNS.$proc$/home/shay/a/ece270/bin/../share/yosys/ice40/cells_sim.v:1138$304'.
  created $adff cell `$procdff$952' with negative edge clock and positive level reset.
Creating register for signal `\SB_DFFNSS.\Q' using process `\SB_DFFNSS.$proc$/home/shay/a/ece270/bin/../share/yosys/ice40/cells_sim.v:1088$301'.
  created $dff cell `$procdff$953' with negative edge clock.
Creating register for signal `\SB_DFFNR.\Q' using process `\SB_DFFNR.$proc$/home/shay/a/ece270/bin/../share/yosys/ice40/cells_sim.v:1017$298'.
  created $adff cell `$procdff$954' with negative edge clock and positive level reset.
Creating register for signal `\SB_DFFNSR.\Q' using process `\SB_DFFNSR.$proc$/home/shay/a/ece270/bin/../share/yosys/ice40/cells_sim.v:967$295'.
  created $dff cell `$procdff$955' with negative edge clock.
Creating register for signal `\SB_DFFNE.\Q' using process `\SB_DFFNE.$proc$/home/shay/a/ece270/bin/../share/yosys/ice40/cells_sim.v:922$293'.
  created $dff cell `$procdff$956' with negative edge clock.
Creating register for signal `\SB_DFFN.\Q' using process `\SB_DFFN.$proc$/home/shay/a/ece270/bin/../share/yosys/ice40/cells_sim.v:882$291'.
  created $dff cell `$procdff$957' with negative edge clock.
Creating register for signal `\SB_DFFES.\Q' using process `\SB_DFFES.$proc$/home/shay/a/ece270/bin/../share/yosys/ice40/cells_sim.v:803$287'.
  created $adff cell `$procdff$958' with positive edge clock and positive level reset.
Creating register for signal `\SB_DFFESS.\Q' using process `\SB_DFFESS.$proc$/home/shay/a/ece270/bin/../share/yosys/ice40/cells_sim.v:742$280'.
  created $dff cell `$procdff$959' with positive edge clock.
Creating register for signal `\SB_DFFER.\Q' using process `\SB_DFFER.$proc$/home/shay/a/ece270/bin/../share/yosys/ice40/cells_sim.v:662$276'.
  created $adff cell `$procdff$960' with positive edge clock and positive level reset.
Creating register for signal `\SB_DFFESR.\Q' using process `\SB_DFFESR.$proc$/home/shay/a/ece270/bin/../share/yosys/ice40/cells_sim.v:601$269'.
  created $dff cell `$procdff$961' with positive edge clock.
Creating register for signal `\SB_DFFS.\Q' using process `\SB_DFFS.$proc$/home/shay/a/ece270/bin/../share/yosys/ice40/cells_sim.v:527$266'.
  created $adff cell `$procdff$962' with positive edge clock and positive level reset.
Creating register for signal `\SB_DFFSS.\Q' using process `\SB_DFFSS.$proc$/home/shay/a/ece270/bin/../share/yosys/ice40/cells_sim.v:477$263'.
  created $dff cell `$procdff$963' with positive edge clock.
Creating register for signal `\SB_DFFR.\Q' using process `\SB_DFFR.$proc$/home/shay/a/ece270/bin/../share/yosys/ice40/cells_sim.v:406$260'.
  created $adff cell `$procdff$964' with positive edge clock and positive level reset.
Creating register for signal `\SB_DFFSR.\Q' using process `\SB_DFFSR.$proc$/home/shay/a/ece270/bin/../share/yosys/ice40/cells_sim.v:356$257'.
  created $dff cell `$procdff$965' with positive edge clock.
Creating register for signal `\SB_DFFE.\Q' using process `\SB_DFFE.$proc$/home/shay/a/ece270/bin/../share/yosys/ice40/cells_sim.v:311$255'.
  created $dff cell `$procdff$966' with positive edge clock.
Creating register for signal `\SB_DFF.\Q' using process `\SB_DFF.$proc$/home/shay/a/ece270/bin/../share/yosys/ice40/cells_sim.v:271$253'.
  created $dff cell `$procdff$967' with positive edge clock.
Creating register for signal `$paramod\uart_tx\DATA_WIDTH=s32'00000000000000000000000000001000.\input_axis_tready_reg' using process `$paramod\uart_tx\DATA_WIDTH=s32'00000000000000000000000000001000.$proc$ice40/uart/uart_tx.v:78$493'.
  created $dff cell `$procdff$968' with positive edge clock.
Creating register for signal `$paramod\uart_tx\DATA_WIDTH=s32'00000000000000000000000000001000.\txd_reg' using process `$paramod\uart_tx\DATA_WIDTH=s32'00000000000000000000000000001000.$proc$ice40/uart/uart_tx.v:78$493'.
  created $dff cell `$procdff$969' with positive edge clock.
Creating register for signal `$paramod\uart_tx\DATA_WIDTH=s32'00000000000000000000000000001000.\busy_reg' using process `$paramod\uart_tx\DATA_WIDTH=s32'00000000000000000000000000001000.$proc$ice40/uart/uart_tx.v:78$493'.
  created $dff cell `$procdff$970' with positive edge clock.
Creating register for signal `$paramod\uart_tx\DATA_WIDTH=s32'00000000000000000000000000001000.\data_reg' using process `$paramod\uart_tx\DATA_WIDTH=s32'00000000000000000000000000001000.$proc$ice40/uart/uart_tx.v:78$493'.
  created $dff cell `$procdff$971' with positive edge clock.
Creating register for signal `$paramod\uart_tx\DATA_WIDTH=s32'00000000000000000000000000001000.\prescale_reg' using process `$paramod\uart_tx\DATA_WIDTH=s32'00000000000000000000000000001000.$proc$ice40/uart/uart_tx.v:78$493'.
  created $dff cell `$procdff$972' with positive edge clock.
Creating register for signal `$paramod\uart_tx\DATA_WIDTH=s32'00000000000000000000000000001000.\bit_cnt' using process `$paramod\uart_tx\DATA_WIDTH=s32'00000000000000000000000000001000.$proc$ice40/uart/uart_tx.v:78$493'.
  created $dff cell `$procdff$973' with positive edge clock.
Creating register for signal `$paramod\uart_rx\DATA_WIDTH=s32'00000000000000000000000000001000.\busy_reg' using process `$paramod\uart_rx\DATA_WIDTH=s32'00000000000000000000000000001000.$proc$ice40/uart/uart_rx.v:86$465'.
  created $dff cell `$procdff$974' with positive edge clock.
Creating register for signal `$paramod\uart_rx\DATA_WIDTH=s32'00000000000000000000000000001000.\data_reg' using process `$paramod\uart_rx\DATA_WIDTH=s32'00000000000000000000000000001000.$proc$ice40/uart/uart_rx.v:86$465'.
  created $dff cell `$procdff$975' with positive edge clock.
Creating register for signal `$paramod\uart_rx\DATA_WIDTH=s32'00000000000000000000000000001000.\prescale_reg' using process `$paramod\uart_rx\DATA_WIDTH=s32'00000000000000000000000000001000.$proc$ice40/uart/uart_rx.v:86$465'.
  created $dff cell `$procdff$976' with positive edge clock.
Creating register for signal `$paramod\uart_rx\DATA_WIDTH=s32'00000000000000000000000000001000.\bit_cnt' using process `$paramod\uart_rx\DATA_WIDTH=s32'00000000000000000000000000001000.$proc$ice40/uart/uart_rx.v:86$465'.
  created $dff cell `$procdff$977' with positive edge clock.
Creating register for signal `$paramod\uart_rx\DATA_WIDTH=s32'00000000000000000000000000001000.\output_axis_tdata_reg' using process `$paramod\uart_rx\DATA_WIDTH=s32'00000000000000000000000000001000.$proc$ice40/uart/uart_rx.v:86$465'.
  created $dff cell `$procdff$978' with positive edge clock.
Creating register for signal `$paramod\uart_rx\DATA_WIDTH=s32'00000000000000000000000000001000.\output_axis_tvalid_reg' using process `$paramod\uart_rx\DATA_WIDTH=s32'00000000000000000000000000001000.$proc$ice40/uart/uart_rx.v:86$465'.
  created $dff cell `$procdff$979' with positive edge clock.
Creating register for signal `$paramod\uart_rx\DATA_WIDTH=s32'00000000000000000000000000001000.\rxd_reg' using process `$paramod\uart_rx\DATA_WIDTH=s32'00000000000000000000000000001000.$proc$ice40/uart/uart_rx.v:86$465'.
  created $dff cell `$procdff$980' with positive edge clock.
Creating register for signal `$paramod\uart_rx\DATA_WIDTH=s32'00000000000000000000000000001000.\overrun_error_reg' using process `$paramod\uart_rx\DATA_WIDTH=s32'00000000000000000000000000001000.$proc$ice40/uart/uart_rx.v:86$465'.
  created $dff cell `$procdff$981' with positive edge clock.
Creating register for signal `$paramod\uart_rx\DATA_WIDTH=s32'00000000000000000000000000001000.\frame_error_reg' using process `$paramod\uart_rx\DATA_WIDTH=s32'00000000000000000000000000001000.$proc$ice40/uart/uart_rx.v:86$465'.
  created $dff cell `$procdff$982' with positive edge clock.
Creating register for signal `\key_encoder_binary.\keycode' using process `\key_encoder_binary.$proc$source/key_encoder_binary.sv:15$25'.
  created $adff cell `$procdff$983' with positive edge clock and negative level reset.
Creating register for signal `\key_encoder_binary.\keypad_async' using process `\key_encoder_binary.$proc$source/key_encoder_binary.sv:15$25'.
  created $adff cell `$procdff$984' with positive edge clock and negative level reset.
Creating register for signal `\key_encoder_binary.\keypad_sync' using process `\key_encoder_binary.$proc$source/key_encoder_binary.sv:15$25'.
  created $adff cell `$procdff$985' with positive edge clock and negative level reset.
Creating register for signal `\key_encoder_binary.\keypad_i' using process `\key_encoder_binary.$proc$source/key_encoder_binary.sv:15$25'.
  created $adff cell `$procdff$986' with positive edge clock and negative level reset.
Creating register for signal `\key_encoder_binary.\state' using process `\key_encoder_binary.$proc$source/key_encoder_binary.sv:15$25'.
  created $adff cell `$procdff$987' with positive edge clock and negative level reset.
Creating register for signal `\reset_on_start.\startup' using process `\reset_on_start.$proc$ice40/ice40hx8k.sv:131$16'.
  created $adff cell `$procdff$988' with positive edge clock and positive level reset.
Creating register for signal `\ice40hx8k.\recv' using process `\ice40hx8k.$proc$ice40/ice40hx8k.sv:104$9'.
  created $adff cell `$procdff$989' with positive edge clock and negative level reset.
Creating register for signal `\ice40hx8k.\xmit' using process `\ice40hx8k.$proc$ice40/ice40hx8k.sv:98$7'.
  created $adff cell `$procdff$990' with positive edge clock and negative level reset.
Creating register for signal `\ice40hx8k.\ctr' using process `\ice40hx8k.$proc$ice40/ice40hx8k.sv:14$1'.
  created $dff cell `$procdff$991' with positive edge clock.
Creating register for signal `\ice40hx8k.\hz100' using process `\ice40hx8k.$proc$ice40/ice40hx8k.sv:14$1'.
  created $dff cell `$procdff$992' with positive edge clock.

7.3.10. Executing PROC_MEMWR pass (convert process memory writes to cells).

7.3.11. Executing PROC_CLEAN pass (remove empty switches from decision trees).
Removing empty process `SB_DFFNES.$proc$/home/shay/a/ece270/bin/../share/yosys/ice40/cells_sim.v:0$328'.
Found and cleaned up 1 empty switch in `\SB_DFFNES.$proc$/home/shay/a/ece270/bin/../share/yosys/ice40/cells_sim.v:1414$325'.
Removing empty process `SB_DFFNES.$proc$/home/shay/a/ece270/bin/../share/yosys/ice40/cells_sim.v:1414$325'.
Removing empty process `SB_DFFNESS.$proc$/home/shay/a/ece270/bin/../share/yosys/ice40/cells_sim.v:0$324'.
Found and cleaned up 2 empty switches in `\SB_DFFNESS.$proc$/home/shay/a/ece270/bin/../share/yosys/ice40/cells_sim.v:1353$318'.
Removing empty process `SB_DFFNESS.$proc$/home/shay/a/ece270/bin/../share/yosys/ice40/cells_sim.v:1353$318'.
Removing empty process `SB_DFFNER.$proc$/home/shay/a/ece270/bin/../share/yosys/ice40/cells_sim.v:0$317'.
Found and cleaned up 1 empty switch in `\SB_DFFNER.$proc$/home/shay/a/ece270/bin/../share/yosys/ice40/cells_sim.v:1273$314'.
Removing empty process `SB_DFFNER.$proc$/home/shay/a/ece270/bin/../share/yosys/ice40/cells_sim.v:1273$314'.
Removing empty process `SB_DFFNESR.$proc$/home/shay/a/ece270/bin/../share/yosys/ice40/cells_sim.v:0$313'.
Found and cleaned up 2 empty switches in `\SB_DFFNESR.$proc$/home/shay/a/ece270/bin/../share/yosys/ice40/cells_sim.v:1212$307'.
Removing empty process `SB_DFFNESR.$proc$/home/shay/a/ece270/bin/../share/yosys/ice40/cells_sim.v:1212$307'.
Removing empty process `SB_DFFNS.$proc$/home/shay/a/ece270/bin/../share/yosys/ice40/cells_sim.v:0$306'.
Removing empty process `SB_DFFNS.$proc$/home/shay/a/ece270/bin/../share/yosys/ice40/cells_sim.v:1138$304'.
Removing empty process `SB_DFFNSS.$proc$/home/shay/a/ece270/bin/../share/yosys/ice40/cells_sim.v:0$303'.
Found and cleaned up 1 empty switch in `\SB_DFFNSS.$proc$/home/shay/a/ece270/bin/../share/yosys/ice40/cells_sim.v:1088$301'.
Removing empty process `SB_DFFNSS.$proc$/home/shay/a/ece270/bin/../share/yosys/ice40/cells_sim.v:1088$301'.
Removing empty process `SB_DFFNR.$proc$/home/shay/a/ece270/bin/../share/yosys/ice40/cells_sim.v:0$300'.
Removing empty process `SB_DFFNR.$proc$/home/shay/a/ece270/bin/../share/yosys/ice40/cells_sim.v:1017$298'.
Removing empty process `SB_DFFNSR.$proc$/home/shay/a/ece270/bin/../share/yosys/ice40/cells_sim.v:0$297'.
Found and cleaned up 1 empty switch in `\SB_DFFNSR.$proc$/home/shay/a/ece270/bin/../share/yosys/ice40/cells_sim.v:967$295'.
Removing empty process `SB_DFFNSR.$proc$/home/shay/a/ece270/bin/../share/yosys/ice40/cells_sim.v:967$295'.
Removing empty process `SB_DFFNE.$proc$/home/shay/a/ece270/bin/../share/yosys/ice40/cells_sim.v:0$294'.
Found and cleaned up 1 empty switch in `\SB_DFFNE.$proc$/home/shay/a/ece270/bin/../share/yosys/ice40/cells_sim.v:922$293'.
Removing empty process `SB_DFFNE.$proc$/home/shay/a/ece270/bin/../share/yosys/ice40/cells_sim.v:922$293'.
Removing empty process `SB_DFFN.$proc$/home/shay/a/ece270/bin/../share/yosys/ice40/cells_sim.v:0$292'.
Removing empty process `SB_DFFN.$proc$/home/shay/a/ece270/bin/../share/yosys/ice40/cells_sim.v:882$291'.
Removing empty process `SB_DFFES.$proc$/home/shay/a/ece270/bin/../share/yosys/ice40/cells_sim.v:0$290'.
Found and cleaned up 1 empty switch in `\SB_DFFES.$proc$/home/shay/a/ece270/bin/../share/yosys/ice40/cells_sim.v:803$287'.
Removing empty process `SB_DFFES.$proc$/home/shay/a/ece270/bin/../share/yosys/ice40/cells_sim.v:803$287'.
Removing empty process `SB_DFFESS.$proc$/home/shay/a/ece270/bin/../share/yosys/ice40/cells_sim.v:0$286'.
Found and cleaned up 2 empty switches in `\SB_DFFESS.$proc$/home/shay/a/ece270/bin/../share/yosys/ice40/cells_sim.v:742$280'.
Removing empty process `SB_DFFESS.$proc$/home/shay/a/ece270/bin/../share/yosys/ice40/cells_sim.v:742$280'.
Removing empty process `SB_DFFER.$proc$/home/shay/a/ece270/bin/../share/yosys/ice40/cells_sim.v:0$279'.
Found and cleaned up 1 empty switch in `\SB_DFFER.$proc$/home/shay/a/ece270/bin/../share/yosys/ice40/cells_sim.v:662$276'.
Removing empty process `SB_DFFER.$proc$/home/shay/a/ece270/bin/../share/yosys/ice40/cells_sim.v:662$276'.
Removing empty process `SB_DFFESR.$proc$/home/shay/a/ece270/bin/../share/yosys/ice40/cells_sim.v:0$275'.
Found and cleaned up 2 empty switches in `\SB_DFFESR.$proc$/home/shay/a/ece270/bin/../share/yosys/ice40/cells_sim.v:601$269'.
Removing empty process `SB_DFFESR.$proc$/home/shay/a/ece270/bin/../share/yosys/ice40/cells_sim.v:601$269'.
Removing empty process `SB_DFFS.$proc$/home/shay/a/ece270/bin/../share/yosys/ice40/cells_sim.v:0$268'.
Removing empty process `SB_DFFS.$proc$/home/shay/a/ece270/bin/../share/yosys/ice40/cells_sim.v:527$266'.
Removing empty process `SB_DFFSS.$proc$/home/shay/a/ece270/bin/../share/yosys/ice40/cells_sim.v:0$265'.
Found and cleaned up 1 empty switch in `\SB_DFFSS.$proc$/home/shay/a/ece270/bin/../share/yosys/ice40/cells_sim.v:477$263'.
Removing empty process `SB_DFFSS.$proc$/home/shay/a/ece270/bin/../share/yosys/ice40/cells_sim.v:477$263'.
Removing empty process `SB_DFFR.$proc$/home/shay/a/ece270/bin/../share/yosys/ice40/cells_sim.v:0$262'.
Removing empty process `SB_DFFR.$proc$/home/shay/a/ece270/bin/../share/yosys/ice40/cells_sim.v:406$260'.
Removing empty process `SB_DFFSR.$proc$/home/shay/a/ece270/bin/../share/yosys/ice40/cells_sim.v:0$259'.
Found and cleaned up 1 empty switch in `\SB_DFFSR.$proc$/home/shay/a/ece270/bin/../share/yosys/ice40/cells_sim.v:356$257'.
Removing empty process `SB_DFFSR.$proc$/home/shay/a/ece270/bin/../share/yosys/ice40/cells_sim.v:356$257'.
Removing empty process `SB_DFFE.$proc$/home/shay/a/ece270/bin/../share/yosys/ice40/cells_sim.v:0$256'.
Found and cleaned up 1 empty switch in `\SB_DFFE.$proc$/home/shay/a/ece270/bin/../share/yosys/ice40/cells_sim.v:311$255'.
Removing empty process `SB_DFFE.$proc$/home/shay/a/ece270/bin/../share/yosys/ice40/cells_sim.v:311$255'.
Removing empty process `SB_DFF.$proc$/home/shay/a/ece270/bin/../share/yosys/ice40/cells_sim.v:0$254'.
Removing empty process `SB_DFF.$proc$/home/shay/a/ece270/bin/../share/yosys/ice40/cells_sim.v:271$253'.
Removing empty process `$paramod\uart_tx\DATA_WIDTH=s32'00000000000000000000000000001000.$proc$ice40/uart/uart_tx.v:71$512'.
Removing empty process `$paramod\uart_tx\DATA_WIDTH=s32'00000000000000000000000000001000.$proc$ice40/uart/uart_tx.v:70$511'.
Removing empty process `$paramod\uart_tx\DATA_WIDTH=s32'00000000000000000000000000001000.$proc$ice40/uart/uart_tx.v:69$510'.
Removing empty process `$paramod\uart_tx\DATA_WIDTH=s32'00000000000000000000000000001000.$proc$ice40/uart/uart_tx.v:67$509'.
Removing empty process `$paramod\uart_tx\DATA_WIDTH=s32'00000000000000000000000000001000.$proc$ice40/uart/uart_tx.v:65$508'.
Removing empty process `$paramod\uart_tx\DATA_WIDTH=s32'00000000000000000000000000001000.$proc$ice40/uart/uart_tx.v:63$507'.
Found and cleaned up 6 empty switches in `$paramod\uart_tx\DATA_WIDTH=s32'00000000000000000000000000001000.$proc$ice40/uart/uart_tx.v:78$493'.
Removing empty process `$paramod\uart_tx\DATA_WIDTH=s32'00000000000000000000000000001000.$proc$ice40/uart/uart_tx.v:78$493'.
Removing empty process `$paramod\uart_rx\DATA_WIDTH=s32'00000000000000000000000000001000.$proc$ice40/uart/uart_rx.v:77$492'.
Removing empty process `$paramod\uart_rx\DATA_WIDTH=s32'00000000000000000000000000001000.$proc$ice40/uart/uart_rx.v:76$491'.
Removing empty process `$paramod\uart_rx\DATA_WIDTH=s32'00000000000000000000000000001000.$proc$ice40/uart/uart_rx.v:75$490'.
Removing empty process `$paramod\uart_rx\DATA_WIDTH=s32'00000000000000000000000000001000.$proc$ice40/uart/uart_rx.v:73$489'.
Removing empty process `$paramod\uart_rx\DATA_WIDTH=s32'00000000000000000000000000001000.$proc$ice40/uart/uart_rx.v:72$488'.
Removing empty process `$paramod\uart_rx\DATA_WIDTH=s32'00000000000000000000000000001000.$proc$ice40/uart/uart_rx.v:71$487'.
Removing empty process `$paramod\uart_rx\DATA_WIDTH=s32'00000000000000000000000000001000.$proc$ice40/uart/uart_rx.v:69$486'.
Removing empty process `$paramod\uart_rx\DATA_WIDTH=s32'00000000000000000000000000001000.$proc$ice40/uart/uart_rx.v:67$485'.
Removing empty process `$paramod\uart_rx\DATA_WIDTH=s32'00000000000000000000000000001000.$proc$ice40/uart/uart_rx.v:66$484'.
Found and cleaned up 10 empty switches in `$paramod\uart_rx\DATA_WIDTH=s32'00000000000000000000000000001000.$proc$ice40/uart/uart_rx.v:86$465'.
Removing empty process `$paramod\uart_rx\DATA_WIDTH=s32'00000000000000000000000000001000.$proc$ice40/uart/uart_rx.v:86$465'.
Found and cleaned up 2 empty switches in `\key_encoder_binary.$proc$source/key_encoder_binary.sv:0$36'.
Removing empty process `key_encoder_binary.$proc$source/key_encoder_binary.sv:0$36'.
Found and cleaned up 2 empty switches in `\key_encoder_binary.$proc$source/key_encoder_binary.sv:0$33'.
Removing empty process `key_encoder_binary.$proc$source/key_encoder_binary.sv:0$33'.
Found and cleaned up 10 empty switches in `\key_encoder_binary.$proc$source/key_encoder_binary.sv:0$32'.
Removing empty process `key_encoder_binary.$proc$source/key_encoder_binary.sv:0$32'.
Found and cleaned up 1 empty switch in `\key_encoder_binary.$proc$source/key_encoder_binary.sv:0$27'.
Removing empty process `key_encoder_binary.$proc$source/key_encoder_binary.sv:0$27'.
Removing empty process `key_encoder_binary.$proc$source/key_encoder_binary.sv:15$25'.
Removing empty process `reset_on_start.$proc$ice40/ice40hx8k.sv:129$23'.
Found and cleaned up 5 empty switches in `\reset_on_start.$proc$ice40/ice40hx8k.sv:131$16'.
Removing empty process `reset_on_start.$proc$ice40/ice40hx8k.sv:131$16'.
Removing empty process `ice40hx8k.$proc$ice40/ice40hx8k.sv:13$14'.
Removing empty process `ice40hx8k.$proc$ice40/ice40hx8k.sv:12$13'.
Removing empty process `ice40hx8k.$proc$ice40/ice40hx8k.sv:104$9'.
Removing empty process `ice40hx8k.$proc$ice40/ice40hx8k.sv:98$7'.
Found and cleaned up 1 empty switch in `\ice40hx8k.$proc$ice40/ice40hx8k.sv:14$1'.
Removing empty process `ice40hx8k.$proc$ice40/ice40hx8k.sv:14$1'.
Cleaned up 55 empty switches.

7.3.12. Executing OPT_EXPR pass (perform const folding).
Optimizing module $paramod\uart_tx\DATA_WIDTH=s32'00000000000000000000000000001000.
<suppressed ~4 debug messages>
Optimizing module $paramod\uart_rx\DATA_WIDTH=s32'00000000000000000000000000001000.
<suppressed ~9 debug messages>
Optimizing module uart.
Optimizing module key_encoder_binary.
<suppressed ~3 debug messages>
Optimizing module top.
Optimizing module reset_on_start.
<suppressed ~2 debug messages>
Optimizing module ice40hx8k.

7.4. Executing FLATTEN pass (flatten design).
Deleting now unused module $paramod\uart_tx\DATA_WIDTH=s32'00000000000000000000000000001000.
Deleting now unused module $paramod\uart_rx\DATA_WIDTH=s32'00000000000000000000000000001000.
Deleting now unused module uart.
Deleting now unused module key_encoder_binary.
Deleting now unused module top.
Deleting now unused module reset_on_start.
<suppressed ~6 debug messages>

7.5. Executing TRIBUF pass.

7.6. Executing DEMINOUT pass (demote inout ports to input or output).

7.7. Executing OPT_EXPR pass (perform const folding).
Optimizing module ice40hx8k.
<suppressed ~26 debug messages>

7.8. Executing OPT_CLEAN pass (remove unused cells and wires).
Finding unused cells or wires in module \ice40hx8k..
Removed 75 unused cells and 308 unused wires.
<suppressed ~108 debug messages>

7.9. Executing CHECK pass (checking for obvious problems).
Checking module ice40hx8k...
Warning: Wire ice40hx8k.\ss7 [7] is used but has no driver.
Warning: Wire ice40hx8k.\ss7 [6] is used but has no driver.
Warning: Wire ice40hx8k.\ss7 [5] is used but has no driver.
Warning: Wire ice40hx8k.\ss7 [4] is used but has no driver.
Warning: Wire ice40hx8k.\ss7 [3] is used but has no driver.
Warning: Wire ice40hx8k.\ss7 [2] is used but has no driver.
Warning: Wire ice40hx8k.\ss7 [1] is used but has no driver.
Warning: Wire ice40hx8k.\ss7 [0] is used but has no driver.
Warning: Wire ice40hx8k.\ss6 [7] is used but has no driver.
Warning: Wire ice40hx8k.\ss6 [6] is used but has no driver.
Warning: Wire ice40hx8k.\ss6 [5] is used but has no driver.
Warning: Wire ice40hx8k.\ss6 [4] is used but has no driver.
Warning: Wire ice40hx8k.\ss6 [3] is used but has no driver.
Warning: Wire ice40hx8k.\ss6 [2] is used but has no driver.
Warning: Wire ice40hx8k.\ss6 [1] is used but has no driver.
Warning: Wire ice40hx8k.\ss6 [0] is used but has no driver.
Warning: Wire ice40hx8k.\ss5 [7] is used but has no driver.
Warning: Wire ice40hx8k.\ss5 [6] is used but has no driver.
Warning: Wire ice40hx8k.\ss5 [5] is used but has no driver.
Warning: Wire ice40hx8k.\ss5 [4] is used but has no driver.
Warning: Wire ice40hx8k.\ss5 [3] is used but has no driver.
Warning: Wire ice40hx8k.\ss5 [2] is used but has no driver.
Warning: Wire ice40hx8k.\ss5 [1] is used but has no driver.
Warning: Wire ice40hx8k.\ss5 [0] is used but has no driver.
Warning: Wire ice40hx8k.\ss4 [7] is used but has no driver.
Warning: Wire ice40hx8k.\ss4 [6] is used but has no driver.
Warning: Wire ice40hx8k.\ss4 [5] is used but has no driver.
Warning: Wire ice40hx8k.\ss4 [4] is used but has no driver.
Warning: Wire ice40hx8k.\ss4 [3] is used but has no driver.
Warning: Wire ice40hx8k.\ss4 [2] is used but has no driver.
Warning: Wire ice40hx8k.\ss4 [1] is used but has no driver.
Warning: Wire ice40hx8k.\ss4 [0] is used but has no driver.
Warning: Wire ice40hx8k.\ss3 [7] is used but has no driver.
Warning: Wire ice40hx8k.\ss3 [6] is used but has no driver.
Warning: Wire ice40hx8k.\ss3 [5] is used but has no driver.
Warning: Wire ice40hx8k.\ss3 [4] is used but has no driver.
Warning: Wire ice40hx8k.\ss3 [3] is used but has no driver.
Warning: Wire ice40hx8k.\ss3 [2] is used but has no driver.
Warning: Wire ice40hx8k.\ss3 [1] is used but has no driver.
Warning: Wire ice40hx8k.\ss3 [0] is used but has no driver.
Warning: Wire ice40hx8k.\ss2 [7] is used but has no driver.
Warning: Wire ice40hx8k.\ss2 [6] is used but has no driver.
Warning: Wire ice40hx8k.\ss2 [5] is used but has no driver.
Warning: Wire ice40hx8k.\ss2 [4] is used but has no driver.
Warning: Wire ice40hx8k.\ss2 [3] is used but has no driver.
Warning: Wire ice40hx8k.\ss2 [2] is used but has no driver.
Warning: Wire ice40hx8k.\ss2 [1] is used but has no driver.
Warning: Wire ice40hx8k.\ss2 [0] is used but has no driver.
Warning: Wire ice40hx8k.\ss1 [7] is used but has no driver.
Warning: Wire ice40hx8k.\ss1 [6] is used but has no driver.
Warning: Wire ice40hx8k.\ss1 [5] is used but has no driver.
Warning: Wire ice40hx8k.\ss1 [4] is used but has no driver.
Warning: Wire ice40hx8k.\ss1 [3] is used but has no driver.
Warning: Wire ice40hx8k.\ss1 [2] is used but has no driver.
Warning: Wire ice40hx8k.\ss1 [1] is used but has no driver.
Warning: Wire ice40hx8k.\ss1 [0] is used but has no driver.
Warning: Wire ice40hx8k.\ss0 [7] is used but has no driver.
Warning: Wire ice40hx8k.\ss0 [6] is used but has no driver.
Warning: Wire ice40hx8k.\ss0 [5] is used but has no driver.
Warning: Wire ice40hx8k.\ss0 [4] is used but has no driver.
Warning: Wire ice40hx8k.\ss0 [3] is used but has no driver.
Warning: Wire ice40hx8k.\ss0 [2] is used but has no driver.
Warning: Wire ice40hx8k.\ss0 [1] is used but has no driver.
Warning: Wire ice40hx8k.\ss0 [0] is used but has no driver.
Warning: Wire ice40hx8k.\red is used but has no driver.
Warning: Wire ice40hx8k.\left [7] is used but has no driver.
Warning: Wire ice40hx8k.\left [6] is used but has no driver.
Warning: Wire ice40hx8k.\left [5] is used but has no driver.
Warning: Wire ice40hx8k.\left [4] is used but has no driver.
Warning: Wire ice40hx8k.\left [3] is used but has no driver.
Warning: Wire ice40hx8k.\left [2] is used but has no driver.
Warning: Wire ice40hx8k.\left [1] is used but has no driver.
Warning: Wire ice40hx8k.\green is used but has no driver.
Warning: Wire ice40hx8k.\blue is used but has no driver.
Warning: Wire ice40hx8k.\txclk is used but has no driver.
Warning: Wire ice40hx8k.\uart_inst.uart_tx_inst.input_axis_tdata [7] is used but has no driver.
Warning: Wire ice40hx8k.\uart_inst.uart_tx_inst.input_axis_tdata [6] is used but has no driver.
Warning: Wire ice40hx8k.\uart_inst.uart_tx_inst.input_axis_tdata [5] is used but has no driver.
Warning: Wire ice40hx8k.\uart_inst.uart_tx_inst.input_axis_tdata [4] is used but has no driver.
Warning: Wire ice40hx8k.\uart_inst.uart_tx_inst.input_axis_tdata [3] is used but has no driver.
Warning: Wire ice40hx8k.\uart_inst.uart_tx_inst.input_axis_tdata [2] is used but has no driver.
Warning: Wire ice40hx8k.\uart_inst.uart_tx_inst.input_axis_tdata [1] is used but has no driver.
Warning: Wire ice40hx8k.\uart_inst.uart_tx_inst.input_axis_tdata [0] is used but has no driver.
Found and reported 83 problems.

7.10. Executing OPT pass (performing simple optimizations).

7.10.1. Executing OPT_EXPR pass (perform const folding).
Optimizing module ice40hx8k.

7.10.2. Executing OPT_MERGE pass (detect identical cells).
Finding identical cells in module `\ice40hx8k'.
<suppressed ~33 debug messages>
Removed a total of 11 cells.

7.10.3. Executing OPT_MUXTREE pass (detect dead branches in mux trees).
Running muxtree optimizer on module \ice40hx8k..
  Creating internal representation of mux trees.
  Evaluating internal representation of mux trees.
  Analyzing evaluation results.
    dead port 2/2 on $mux $flatten\top_inst.\u1.$procmux$801.
    dead port 2/2 on $mux $flatten\top_inst.\u1.$procmux$807.
    dead port 1/2 on $mux $flatten\top_inst.\u1.$procmux$819.
    dead port 2/2 on $mux $flatten\top_inst.\u1.$procmux$828.
    dead port 2/2 on $mux $flatten\top_inst.\u1.$procmux$835.
    dead port 2/2 on $mux $flatten\top_inst.\u1.$procmux$843.
    dead port 2/2 on $mux $flatten\top_inst.\u1.$procmux$852.
    dead port 2/2 on $mux $flatten\top_inst.\u1.$procmux$862.
    dead port 2/2 on $mux $flatten\top_inst.\u1.$procmux$873.
    dead port 2/2 on $mux $flatten\top_inst.\u1.$procmux$885.
    dead port 2/2 on $mux $flatten\top_inst.\u1.$procmux$898.
    dead port 2/2 on $mux $flatten\top_inst.\u1.$procmux$912.
Removed 12 multiplexer ports.
<suppressed ~12 debug messages>

7.10.4. Executing OPT_REDUCE pass (consolidate $*mux and $reduce_* inputs).
  Optimizing cells in module \ice40hx8k.
    New ctrl vector for $pmux cell $flatten\top_inst.\u1.$procmux$798: $auto$opt_reduce.cc:134:opt_pmux$994
  Optimizing cells in module \ice40hx8k.
Performed a total of 1 changes.

7.10.5. Executing OPT_MERGE pass (detect identical cells).
Finding identical cells in module `\ice40hx8k'.
Removed a total of 0 cells.

7.10.6. Executing OPT_DFF pass (perform DFF optimizations).

7.10.7. Executing OPT_CLEAN pass (remove unused cells and wires).
Finding unused cells or wires in module \ice40hx8k..
Removed 0 unused cells and 23 unused wires.
<suppressed ~1 debug messages>

7.10.8. Executing OPT_EXPR pass (perform const folding).
Optimizing module ice40hx8k.

7.10.9. Rerunning OPT passes. (Maybe there is more to do..)

7.10.10. Executing OPT_MUXTREE pass (detect dead branches in mux trees).
Running muxtree optimizer on module \ice40hx8k..
  Creating internal representation of mux trees.
  Evaluating internal representation of mux trees.
  Analyzing evaluation results.
Removed 0 multiplexer ports.
<suppressed ~12 debug messages>

7.10.11. Executing OPT_REDUCE pass (consolidate $*mux and $reduce_* inputs).
  Optimizing cells in module \ice40hx8k.
Performed a total of 0 changes.

7.10.12. Executing OPT_MERGE pass (detect identical cells).
Finding identical cells in module `\ice40hx8k'.
Removed a total of 0 cells.

7.10.13. Executing OPT_DFF pass (perform DFF optimizations).

7.10.14. Executing OPT_CLEAN pass (remove unused cells and wires).
Finding unused cells or wires in module \ice40hx8k..

7.10.15. Executing OPT_EXPR pass (perform const folding).
Optimizing module ice40hx8k.

7.10.16. Finished OPT passes. (There is nothing left to do.)

7.11. Executing FSM pass (extract and optimize FSM).

7.11.1. Executing FSM_DETECT pass (finding FSMs in design).
Not marking ice40hx8k.ros.startup as FSM state register:
    Users of register don't seem to benefit from recoding.
    Register has an initialization value.
Found FSM state register ice40hx8k.top_inst.u1.state.

7.11.2. Executing FSM_EXTRACT pass (extracting FSM from design).
Extracting FSM `\top_inst.u1.state' from module `\ice40hx8k'.
  found $adff cell for state register: $flatten\top_inst.\u1.$procdff$987
  root of input selection tree: \top_inst.u1.next_state
  found reset state: 4'0000 (from async reset)
  found ctrl input: $flatten\top_inst.\u1.$procmux$829_CMP
  found ctrl input: $flatten\top_inst.\u1.$procmux$836_CMP
  found ctrl input: $flatten\top_inst.\u1.$procmux$844_CMP
  found ctrl input: $flatten\top_inst.\u1.$procmux$853_CMP
  found ctrl input: $flatten\top_inst.\u1.$procmux$863_CMP
  found ctrl input: $flatten\top_inst.\u1.$procmux$874_CMP
  found ctrl input: $flatten\top_inst.\u1.$procmux$886_CMP
  found ctrl input: $flatten\top_inst.\u1.$procmux$899_CMP
  found ctrl input: $flatten\top_inst.\u1.$procmux$913_CMP
  found ctrl input: \top_inst.u1.strobe
  found state code: 4'1000
  found state code: 4'1001
  found state code: 4'0111
  found state code: 4'0110
  found state code: 4'0101
  found state code: 4'0100
  found state code: 4'0011
  found state code: 4'0010
  found state code: 4'0001
  found ctrl output: $flatten\top_inst.\u1.$eq$source/key_encoder_binary.sv:126$34_Y
  found ctrl output: $flatten\top_inst.\u1.$procmux$829_CMP
  found ctrl output: $flatten\top_inst.\u1.$procmux$836_CMP
  found ctrl output: $flatten\top_inst.\u1.$procmux$844_CMP
  found ctrl output: $flatten\top_inst.\u1.$procmux$853_CMP
  found ctrl output: $flatten\top_inst.\u1.$procmux$863_CMP
  found ctrl output: $flatten\top_inst.\u1.$procmux$874_CMP
  found ctrl output: $flatten\top_inst.\u1.$procmux$886_CMP
  found ctrl output: $flatten\top_inst.\u1.$procmux$899_CMP
  found ctrl output: $flatten\top_inst.\u1.$procmux$913_CMP
  ctrl inputs: \top_inst.u1.strobe
  ctrl outputs: { $flatten\top_inst.\u1.$procmux$913_CMP $flatten\top_inst.\u1.$procmux$899_CMP $flatten\top_inst.\u1.$procmux$886_CMP $flatten\top_inst.\u1.$procmux$874_CMP $flatten\top_inst.\u1.$procmux$863_CMP $flatten\top_inst.\u1.$procmux$853_CMP $flatten\top_inst.\u1.$procmux$844_CMP $flatten\top_inst.\u1.$procmux$836_CMP $flatten\top_inst.\u1.$procmux$829_CMP $flatten\top_inst.\u1.$eq$source/key_encoder_binary.sv:126$34_Y \top_inst.u1.next_state }
  transition:     4'0000 1'0 ->     4'0000 14'10000000000000
  transition:     4'0000 1'1 ->     4'0001 14'10000000000001
  transition:     4'1000 1'0 ->     4'1000 14'00000000101000
  transition:     4'1000 1'1 ->     4'1001 14'00000000101001
  transition:     4'0100 1'0 ->     4'0100 14'00001000000100
  transition:     4'0100 1'1 ->     4'0101 14'00001000000101
  transition:     4'0010 1'0 ->     4'0010 14'00100000000010
  transition:     4'0010 1'1 ->     4'0011 14'00100000000011
  transition:     4'0110 1'0 ->     4'0110 14'00000010000110
  transition:     4'0110 1'1 ->     4'0111 14'00000010000111
  transition:     4'0001 1'0 ->     4'0001 14'01000000000001
  transition:     4'0001 1'1 ->     4'0010 14'01000000000010
  transition:     4'1001 1'- ->     4'1001 14'00000000011001
  transition:     4'0101 1'0 ->     4'0101 14'00000100000101
  transition:     4'0101 1'1 ->     4'0110 14'00000100000110
  transition:     4'0011 1'0 ->     4'0011 14'00010000000011
  transition:     4'0011 1'1 ->     4'0100 14'00010000000100
  transition:     4'0111 1'0 ->     4'0111 14'00000001000111
  transition:     4'0111 1'1 ->     4'1000 14'00000001001000

7.11.3. Executing FSM_OPT pass (simple optimizations of FSMs).
Optimizing FSM `$fsm$\top_inst.u1.state$995' from module `\ice40hx8k'.

7.11.4. Executing OPT_CLEAN pass (remove unused cells and wires).
Finding unused cells or wires in module \ice40hx8k..
Removed 21 unused cells and 21 unused wires.
<suppressed ~22 debug messages>

7.11.5. Executing FSM_OPT pass (simple optimizations of FSMs).
Optimizing FSM `$fsm$\top_inst.u1.state$995' from module `\ice40hx8k'.
  Removing unused output signal \top_inst.u1.next_state [0].
  Removing unused output signal \top_inst.u1.next_state [1].
  Removing unused output signal \top_inst.u1.next_state [2].
  Removing unused output signal \top_inst.u1.next_state [3].
  Removing unused output signal $flatten\top_inst.\u1.$procmux$829_CMP.
  Removing unused output signal $flatten\top_inst.\u1.$procmux$836_CMP.
  Removing unused output signal $flatten\top_inst.\u1.$procmux$844_CMP.
  Removing unused output signal $flatten\top_inst.\u1.$procmux$853_CMP.
  Removing unused output signal $flatten\top_inst.\u1.$procmux$863_CMP.
  Removing unused output signal $flatten\top_inst.\u1.$procmux$874_CMP.
  Removing unused output signal $flatten\top_inst.\u1.$procmux$886_CMP.
  Removing unused output signal $flatten\top_inst.\u1.$procmux$899_CMP.
  Removing unused output signal $flatten\top_inst.\u1.$procmux$913_CMP.

7.11.6. Executing FSM_RECODE pass (re-assigning FSM state encoding).
Recoding FSM `$fsm$\top_inst.u1.state$995' from module `\ice40hx8k' using `auto' encoding:
  mapping auto encoding to `one-hot` for this FSM.
  0000 -> ---------1
  1000 -> --------1-
  0100 -> -------1--
  0010 -> ------1---
  0110 -> -----1----
  0001 -> ----1-----
  1001 -> ---1------
  0101 -> --1-------
  0011 -> -1--------
  0111 -> 1---------

7.11.7. Executing FSM_INFO pass (dumping all available information on FSM cells).

FSM `$fsm$\top_inst.u1.state$995' from module `ice40hx8k':
-------------------------------------

  Information on FSM $fsm$\top_inst.u1.state$995 (\top_inst.u1.state):

  Number of input signals:    1
  Number of output signals:   1
  Number of state bits:      10

  Input signals:
    0: \top_inst.u1.strobe

  Output signals:
    0: $flatten\top_inst.\u1.$eq$source/key_encoder_binary.sv:126$34_Y

  State encoding:
    0: 10'---------1  <RESET STATE>
    1: 10'--------1-
    2: 10'-------1--
    3: 10'------1---
    4: 10'-----1----
    5: 10'----1-----
    6: 10'---1------
    7: 10'--1-------
    8: 10'-1--------
    9: 10'1---------

  Transition Table (state_in, ctrl_in, state_out, ctrl_out):
      0:     0 1'0   ->     0 1'0
      1:     0 1'1   ->     5 1'0
      2:     1 1'0   ->     1 1'0
      3:     1 1'1   ->     6 1'0
      4:     2 1'0   ->     2 1'0
      5:     2 1'1   ->     7 1'0
      6:     3 1'0   ->     3 1'0
      7:     3 1'1   ->     8 1'0
      8:     4 1'0   ->     4 1'0
      9:     4 1'1   ->     9 1'0
     10:     5 1'1   ->     3 1'0
     11:     5 1'0   ->     5 1'0
     12:     6 1'-   ->     6 1'1
     13:     7 1'1   ->     4 1'0
     14:     7 1'0   ->     7 1'0
     15:     8 1'1   ->     2 1'0
     16:     8 1'0   ->     8 1'0
     17:     9 1'1   ->     1 1'0
     18:     9 1'0   ->     9 1'0

-------------------------------------

7.11.8. Executing FSM_MAP pass (mapping FSMs to basic logic).
Mapping FSM `$fsm$\top_inst.u1.state$995' from module `\ice40hx8k'.

7.12. Executing OPT pass (performing simple optimizations).

7.12.1. Executing OPT_EXPR pass (perform const folding).
Optimizing module ice40hx8k.
<suppressed ~18 debug messages>

7.12.2. Executing OPT_MERGE pass (detect identical cells).
Finding identical cells in module `\ice40hx8k'.
<suppressed ~24 debug messages>
Removed a total of 8 cells.

7.12.3. Executing OPT_MUXTREE pass (detect dead branches in mux trees).
Running muxtree optimizer on module \ice40hx8k..
  Creating internal representation of mux trees.
  Evaluating internal representation of mux trees.
  Analyzing evaluation results.
Removed 0 multiplexer ports.
<suppressed ~11 debug messages>

7.12.4. Executing OPT_REDUCE pass (consolidate $*mux and $reduce_* inputs).
  Optimizing cells in module \ice40hx8k.
Performed a total of 0 changes.

7.12.5. Executing OPT_MERGE pass (detect identical cells).
Finding identical cells in module `\ice40hx8k'.
Removed a total of 0 cells.

7.12.6. Executing OPT_DFF pass (perform DFF optimizations).
Adding EN signal on $procdff$992 ($dff) from module ice40hx8k (D = $not$ice40/ice40hx8k.sv:18$3_Y, Q = \hz100).
Adding SRST signal on $procdff$991 ($dff) from module ice40hx8k (D = $add$ice40/ice40hx8k.sv:21$4_Y [15:0], Q = \ctr, rval = 16'0000000000000000).
Adding EN signal on $flatten\uart_inst.\uart_tx_inst.$procdff$973 ($dff) from module ice40hx8k (D = $flatten\uart_inst.\uart_tx_inst.$procmux$622_Y, Q = \uart_inst.uart_tx_inst.bit_cnt).
Adding EN signal on $flatten\uart_inst.\uart_tx_inst.$procdff$972 ($dff) from module ice40hx8k (D = $flatten\uart_inst.\uart_tx_inst.$0\prescale_reg[18:0], Q = \uart_inst.uart_tx_inst.prescale_reg).
Adding EN signal on $flatten\uart_inst.\uart_tx_inst.$procdff$971 ($dff) from module ice40hx8k (D = $flatten\uart_inst.\uart_tx_inst.$procmux$563_Y, Q = \uart_inst.uart_tx_inst.data_reg).
Adding EN signal on $flatten\uart_inst.\uart_tx_inst.$procdff$969 ($dff) from module ice40hx8k (D = $flatten\uart_inst.\uart_tx_inst.$procmux$595_Y, Q = \uart_inst.uart_tx_inst.txd_reg).
Adding SRST signal on $flatten\uart_inst.\uart_tx_inst.$procdff$968 ($dff) from module ice40hx8k (D = $flatten\uart_inst.\uart_tx_inst.$procmux$633_Y, Q = \uart_inst.uart_tx_inst.input_axis_tready_reg, rval = 1'0).
Adding EN signal on $auto$ff.cc:266:slice$1128 ($sdff) from module ice40hx8k (D = $flatten\uart_inst.\uart_tx_inst.$procmux$631_Y, Q = \uart_inst.uart_tx_inst.input_axis_tready_reg).
Adding EN signal on $flatten\top_inst.\u1.$procdff$983 ($adff) from module ice40hx8k (D = { \top_inst.u1.keycode [7:0] \top_inst.u1.code_choice }, Q = \top_inst.u1.keycode).
Adding EN signal on $flatten\ros.$procdff$988 ($adff) from module ice40hx8k (D = $flatten\ros.$0\startup[2:0], Q = \ros.startup).

7.12.7. Executing OPT_CLEAN pass (remove unused cells and wires).
Finding unused cells or wires in module \ice40hx8k..
Removed 9 unused cells and 39 unused wires.
<suppressed ~12 debug messages>

7.12.8. Executing OPT_EXPR pass (perform const folding).
Optimizing module ice40hx8k.
<suppressed ~5 debug messages>

7.12.9. Rerunning OPT passes. (Maybe there is more to do..)

7.12.10. Executing OPT_MUXTREE pass (detect dead branches in mux trees).
Running muxtree optimizer on module \ice40hx8k..
  Creating internal representation of mux trees.
  Evaluating internal representation of mux trees.
  Analyzing evaluation results.
Removed 0 multiplexer ports.
<suppressed ~9 debug messages>

7.12.11. Executing OPT_REDUCE pass (consolidate $*mux and $reduce_* inputs).
  Optimizing cells in module \ice40hx8k.
Performed a total of 0 changes.

7.12.12. Executing OPT_MERGE pass (detect identical cells).
Finding identical cells in module `\ice40hx8k'.
<suppressed ~18 debug messages>
Removed a total of 6 cells.

7.12.13. Executing OPT_DFF pass (perform DFF optimizations).

7.12.14. Executing OPT_CLEAN pass (remove unused cells and wires).
Finding unused cells or wires in module \ice40hx8k..
Removed 0 unused cells and 6 unused wires.
<suppressed ~1 debug messages>

7.12.15. Executing OPT_EXPR pass (perform const folding).
Optimizing module ice40hx8k.

7.12.16. Rerunning OPT passes. (Maybe there is more to do..)

7.12.17. Executing OPT_MUXTREE pass (detect dead branches in mux trees).
Running muxtree optimizer on module \ice40hx8k..
  Creating internal representation of mux trees.
  Evaluating internal representation of mux trees.
  Analyzing evaluation results.
Removed 0 multiplexer ports.
<suppressed ~9 debug messages>

7.12.18. Executing OPT_REDUCE pass (consolidate $*mux and $reduce_* inputs).
  Optimizing cells in module \ice40hx8k.
Performed a total of 0 changes.

7.12.19. Executing OPT_MERGE pass (detect identical cells).
Finding identical cells in module `\ice40hx8k'.
Removed a total of 0 cells.

7.12.20. Executing OPT_DFF pass (perform DFF optimizations).

7.12.21. Executing OPT_CLEAN pass (remove unused cells and wires).
Finding unused cells or wires in module \ice40hx8k..

7.12.22. Executing OPT_EXPR pass (perform const folding).
Optimizing module ice40hx8k.

7.12.23. Finished OPT passes. (There is nothing left to do.)

7.13. Executing WREDUCE pass (reducing word size of cells).
Removed top 31 bits (of 32) from port B of cell ice40hx8k.$add$ice40/ice40hx8k.sv:21$4 ($add).
Removed top 16 bits (of 32) from port Y of cell ice40hx8k.$add$ice40/ice40hx8k.sv:21$4 ($add).
Removed top 31 bits (of 32) from port B of cell ice40hx8k.$flatten\uart_inst.\uart_tx_inst.$sub$ice40/uart/uart_tx.v:88$495 ($sub).
Removed top 13 bits (of 32) from port Y of cell ice40hx8k.$flatten\uart_inst.\uart_tx_inst.$sub$ice40/uart/uart_tx.v:88$495 ($sub).
Removed top 31 bits (of 32) from port B of cell ice40hx8k.$flatten\uart_inst.\uart_tx_inst.$gt$ice40/uart/uart_tx.v:102$500 ($gt).
Removed top 31 bits (of 32) from port B of cell ice40hx8k.$flatten\uart_inst.\uart_tx_inst.$sub$ice40/uart/uart_tx.v:103$501 ($sub).
Removed top 28 bits (of 32) from port Y of cell ice40hx8k.$flatten\uart_inst.\uart_tx_inst.$sub$ice40/uart/uart_tx.v:103$501 ($sub).
Removed top 3 bits (of 4) from port B of cell ice40hx8k.$flatten\uart_inst.\uart_tx_inst.$eq$ice40/uart/uart_tx.v:106$504 ($eq).
Removed top 31 bits (of 32) from port B of cell ice40hx8k.$flatten\uart_inst.\uart_tx_inst.$gt$ice40/uart/uart_tx.v:86$494 ($gt).
Removed top 1 bits (of 2) from port B of cell ice40hx8k.$flatten\top_inst.\u1.$procmux$800_CMP0 ($eq).
Removed top 16 bits (of 32) from wire ice40hx8k.$add$ice40/ice40hx8k.sv:21$4_Y.

7.14. Executing PEEPOPT pass (run peephole optimizers).

7.15. Executing OPT_CLEAN pass (remove unused cells and wires).
Finding unused cells or wires in module \ice40hx8k..
Removed 0 unused cells and 1 unused wires.
<suppressed ~1 debug messages>

7.16. Executing SHARE pass (SAT-based resource sharing).

7.17. Executing TECHMAP pass (map to technology primitives).

7.17.1. Executing Verilog-2005 frontend: /home/shay/a/ece270/bin/../share/yosys/cmp2lut.v
Parsing Verilog input from `/home/shay/a/ece270/bin/../share/yosys/cmp2lut.v' to AST representation.
Generating RTLIL representation for module `\_90_lut_cmp_'.
Successfully finished Verilog frontend.

7.17.2. Continuing TECHMAP pass.
Using template $paramod$106e7676feb63f00b8f79ebab3ff16b0f4c109cb\_90_lut_cmp_ for cells of type $gt.
No more expansions possible.
<suppressed ~66 debug messages>

7.18. Executing OPT_EXPR pass (perform const folding).
Optimizing module ice40hx8k.

7.19. Executing OPT_CLEAN pass (remove unused cells and wires).
Finding unused cells or wires in module \ice40hx8k..
Removed 0 unused cells and 3 unused wires.
<suppressed ~1 debug messages>

7.20. Executing ALUMACC pass (create $alu and $macc cells).
Extracting $alu and $macc cells in module ice40hx8k:
  creating $macc model for $add$ice40/ice40hx8k.sv:21$4 ($add).
  creating $macc model for $flatten\uart_inst.\uart_tx_inst.$sub$ice40/uart/uart_tx.v:103$501 ($sub).
  creating $macc model for $flatten\uart_inst.\uart_tx_inst.$sub$ice40/uart/uart_tx.v:88$495 ($sub).
  creating $alu model for $macc $flatten\uart_inst.\uart_tx_inst.$sub$ice40/uart/uart_tx.v:88$495.
  creating $alu model for $macc $flatten\uart_inst.\uart_tx_inst.$sub$ice40/uart/uart_tx.v:103$501.
  creating $alu model for $macc $add$ice40/ice40hx8k.sv:21$4.
  creating $alu model for $flatten\uart_inst.\uart_tx_inst.$gt$ice40/uart/uart_tx.v:86$494 ($gt): new $alu
  creating $alu cell for $flatten\uart_inst.\uart_tx_inst.$gt$ice40/uart/uart_tx.v:86$494: $auto$alumacc.cc:485:replace_alu$1143
  creating $alu cell for $add$ice40/ice40hx8k.sv:21$4: $auto$alumacc.cc:485:replace_alu$1148
  creating $alu cell for $flatten\uart_inst.\uart_tx_inst.$sub$ice40/uart/uart_tx.v:103$501: $auto$alumacc.cc:485:replace_alu$1151
  creating $alu cell for $flatten\uart_inst.\uart_tx_inst.$sub$ice40/uart/uart_tx.v:88$495: $auto$alumacc.cc:485:replace_alu$1154
  created 4 $alu and 0 $macc cells.

7.21. Executing OPT pass (performing simple optimizations).

7.21.1. Executing OPT_EXPR pass (perform const folding).
Optimizing module ice40hx8k.
<suppressed ~3 debug messages>

7.21.2. Executing OPT_MERGE pass (detect identical cells).
Finding identical cells in module `\ice40hx8k'.
Removed a total of 0 cells.

7.21.3. Executing OPT_MUXTREE pass (detect dead branches in mux trees).
Running muxtree optimizer on module \ice40hx8k..
  Creating internal representation of mux trees.
  Evaluating internal representation of mux trees.
  Analyzing evaluation results.
Removed 0 multiplexer ports.
<suppressed ~9 debug messages>

7.21.4. Executing OPT_REDUCE pass (consolidate $*mux and $reduce_* inputs).
  Optimizing cells in module \ice40hx8k.
Performed a total of 0 changes.

7.21.5. Executing OPT_MERGE pass (detect identical cells).
Finding identical cells in module `\ice40hx8k'.
Removed a total of 0 cells.

7.21.6. Executing OPT_DFF pass (perform DFF optimizations).

7.21.7. Executing OPT_CLEAN pass (remove unused cells and wires).
Finding unused cells or wires in module \ice40hx8k..
Removed 0 unused cells and 2 unused wires.
<suppressed ~1 debug messages>

7.21.8. Executing OPT_EXPR pass (perform const folding).
Optimizing module ice40hx8k.

7.21.9. Rerunning OPT passes. (Maybe there is more to do..)

7.21.10. Executing OPT_MUXTREE pass (detect dead branches in mux trees).
Running muxtree optimizer on module \ice40hx8k..
  Creating internal representation of mux trees.
  Evaluating internal representation of mux trees.
  Analyzing evaluation results.
Removed 0 multiplexer ports.
<suppressed ~9 debug messages>

7.21.11. Executing OPT_REDUCE pass (consolidate $*mux and $reduce_* inputs).
  Optimizing cells in module \ice40hx8k.
Performed a total of 0 changes.

7.21.12. Executing OPT_MERGE pass (detect identical cells).
Finding identical cells in module `\ice40hx8k'.
Removed a total of 0 cells.

7.21.13. Executing OPT_DFF pass (perform DFF optimizations).

7.21.14. Executing OPT_CLEAN pass (remove unused cells and wires).
Finding unused cells or wires in module \ice40hx8k..

7.21.15. Executing OPT_EXPR pass (perform const folding).
Optimizing module ice40hx8k.

7.21.16. Finished OPT passes. (There is nothing left to do.)

7.22. Executing MEMORY pass.

7.22.1. Executing OPT_MEM pass (optimize memories).
Performed a total of 0 transformations.

7.22.2. Executing OPT_MEM_PRIORITY pass (removing unnecessary memory write priority relations).
Performed a total of 0 transformations.

7.22.3. Executing OPT_MEM_FEEDBACK pass (finding memory read-to-write feedback paths).

7.22.4. Executing MEMORY_BMUX2ROM pass (converting muxes to ROMs).

7.22.5. Executing MEMORY_DFF pass (merging $dff cells to $memrd).

7.22.6. Executing OPT_CLEAN pass (remove unused cells and wires).
Finding unused cells or wires in module \ice40hx8k..

7.22.7. Executing MEMORY_SHARE pass (consolidating $memrd/$memwr cells).

7.22.8. Executing OPT_MEM_WIDEN pass (optimize memories where all ports are wide).
Performed a total of 0 transformations.

7.22.9. Executing OPT_CLEAN pass (remove unused cells and wires).
Finding unused cells or wires in module \ice40hx8k..

7.22.10. Executing MEMORY_COLLECT pass (generating $mem cells).

7.23. Executing OPT_CLEAN pass (remove unused cells and wires).
Finding unused cells or wires in module \ice40hx8k..

7.24. Executing MEMORY_LIBMAP pass (mapping memories to cells).

7.25. Executing TECHMAP pass (map to technology primitives).

7.25.1. Executing Verilog-2005 frontend: /home/shay/a/ece270/bin/../share/yosys/ice40/brams_map.v
Parsing Verilog input from `/home/shay/a/ece270/bin/../share/yosys/ice40/brams_map.v' to AST representation.
Generating RTLIL representation for module `\$__ICE40_RAM4K_'.
Successfully finished Verilog frontend.

7.25.2. Executing Verilog-2005 frontend: /home/shay/a/ece270/bin/../share/yosys/ice40/spram_map.v
Parsing Verilog input from `/home/shay/a/ece270/bin/../share/yosys/ice40/spram_map.v' to AST representation.
Generating RTLIL representation for module `\$__ICE40_SPRAM_'.
Successfully finished Verilog frontend.

7.25.3. Continuing TECHMAP pass.
No more expansions possible.
<suppressed ~4 debug messages>

7.26. Executing ICE40_BRAMINIT pass.

7.27. Executing OPT pass (performing simple optimizations).

7.27.1. Executing OPT_EXPR pass (perform const folding).
Optimizing module ice40hx8k.
<suppressed ~57 debug messages>

7.27.2. Executing OPT_MERGE pass (detect identical cells).
Finding identical cells in module `\ice40hx8k'.
Removed a total of 0 cells.

7.27.3. Executing OPT_DFF pass (perform DFF optimizations).
Handling const CLK on $procdff$990 ($adff) from module ice40hx8k (removing D path).
Adding SRST signal on $auto$ff.cc:266:slice$1110 ($dffe) from module ice40hx8k (D = $flatten\uart_inst.\uart_tx_inst.$procmux$558_Y [8], Q = \uart_inst.uart_tx_inst.data_reg [8], rval = 1'1).
Adding SRST signal on $auto$ff.cc:266:slice$1094 ($dffe) from module ice40hx8k (D = $flatten\uart_inst.\uart_tx_inst.$procmux$617_Y, Q = \uart_inst.uart_tx_inst.bit_cnt, rval = 4'1001).
Adding SRST signal on $auto$ff.cc:266:slice$1119 ($dffe) from module ice40hx8k (D = $flatten\uart_inst.\uart_tx_inst.$procmux$590_Y, Q = \uart_inst.uart_tx_inst.txd_reg, rval = 1'0).
Setting constant 0-bit at position 0 on $procdff$990 ($dlatch) from module ice40hx8k.

7.27.4. Executing OPT_CLEAN pass (remove unused cells and wires).
Finding unused cells or wires in module \ice40hx8k..
Removed 5 unused cells and 22 unused wires.
<suppressed ~11 debug messages>

7.27.5. Rerunning OPT passes. (Removed registers in this run.)

7.27.6. Executing OPT_EXPR pass (perform const folding).
Optimizing module ice40hx8k.
<suppressed ~1 debug messages>

7.27.7. Executing OPT_MERGE pass (detect identical cells).
Finding identical cells in module `\ice40hx8k'.
Removed a total of 0 cells.

7.27.8. Executing OPT_DFF pass (perform DFF optimizations).

7.27.9. Executing OPT_CLEAN pass (remove unused cells and wires).
Finding unused cells or wires in module \ice40hx8k..

7.27.10. Finished fast OPT passes.

7.28. Executing MEMORY_MAP pass (converting memories to logic and flip-flops).

7.29. Executing OPT pass (performing simple optimizations).

7.29.1. Executing OPT_EXPR pass (perform const folding).
Optimizing module ice40hx8k.

7.29.2. Executing OPT_MERGE pass (detect identical cells).
Finding identical cells in module `\ice40hx8k'.
Removed a total of 0 cells.

7.29.3. Executing OPT_MUXTREE pass (detect dead branches in mux trees).
Running muxtree optimizer on module \ice40hx8k..
  Creating internal representation of mux trees.
  Evaluating internal representation of mux trees.
  Analyzing evaluation results.
Removed 0 multiplexer ports.
<suppressed ~6 debug messages>

7.29.4. Executing OPT_REDUCE pass (consolidate $*mux and $reduce_* inputs).
  Optimizing cells in module \ice40hx8k.
    Consolidated identical input bits for $mux cell $flatten\ros.$procmux$931:
      Old ports: A=3'001, B=3'111, Y=$flatten\ros.$procmux$931_Y
      New ports: A=1'0, B=1'1, Y=$flatten\ros.$procmux$931_Y [1]
      New connections: { $flatten\ros.$procmux$931_Y [2] $flatten\ros.$procmux$931_Y [0] } = { $flatten\ros.$procmux$931_Y [1] 1'1 }
    Consolidated identical input bits for $mux cell $flatten\uart_inst.\uart_tx_inst.$procmux$574:
      Old ports: A=19'0000000000000100000, B=19'0000000000000011111, Y=$flatten\uart_inst.\uart_tx_inst.$procmux$574_Y
      New ports: A=2'10, B=2'01, Y={ $flatten\uart_inst.\uart_tx_inst.$procmux$574_Y [5] $flatten\uart_inst.\uart_tx_inst.$procmux$574_Y [0] }
      New connections: { $flatten\uart_inst.\uart_tx_inst.$procmux$574_Y [18:6] $flatten\uart_inst.\uart_tx_inst.$procmux$574_Y [4:1] } = { 13'0000000000000 $flatten\uart_inst.\uart_tx_inst.$procmux$574_Y [0] $flatten\uart_inst.\uart_tx_inst.$procmux$574_Y [0] $flatten\uart_inst.\uart_tx_inst.$procmux$574_Y [0] $flatten\uart_inst.\uart_tx_inst.$procmux$574_Y [0] }
  Optimizing cells in module \ice40hx8k.
    Consolidated identical input bits for $mux cell $flatten\ros.$procmux$934:
      Old ports: A=$flatten\ros.$procmux$931_Y, B=3'110, Y=$flatten\ros.$procmux$934_Y
      New ports: A={ $flatten\ros.$procmux$931_Y [1] 1'1 }, B=2'10, Y=$flatten\ros.$procmux$934_Y [1:0]
      New connections: $flatten\ros.$procmux$934_Y [2] = $flatten\ros.$procmux$934_Y [1]
    Consolidated identical input bits for $mux cell $flatten\uart_inst.\uart_tx_inst.$procmux$579:
      Old ports: A=$flatten\uart_inst.\uart_tx_inst.$procmux$574_Y, B=19'0000000000000011111, Y=$flatten\uart_inst.\uart_tx_inst.$procmux$579_Y
      New ports: A={ $flatten\uart_inst.\uart_tx_inst.$procmux$574_Y [5] $flatten\uart_inst.\uart_tx_inst.$procmux$574_Y [0] }, B=2'01, Y={ $flatten\uart_inst.\uart_tx_inst.$procmux$579_Y [5] $flatten\uart_inst.\uart_tx_inst.$procmux$579_Y [0] }
      New connections: { $flatten\uart_inst.\uart_tx_inst.$procmux$579_Y [18:6] $flatten\uart_inst.\uart_tx_inst.$procmux$579_Y [4:1] } = { 13'0000000000000 $flatten\uart_inst.\uart_tx_inst.$procmux$579_Y [0] $flatten\uart_inst.\uart_tx_inst.$procmux$579_Y [0] $flatten\uart_inst.\uart_tx_inst.$procmux$579_Y [0] $flatten\uart_inst.\uart_tx_inst.$procmux$579_Y [0] }
  Optimizing cells in module \ice40hx8k.
Performed a total of 4 changes.

7.29.5. Executing OPT_MERGE pass (detect identical cells).
Finding identical cells in module `\ice40hx8k'.
Removed a total of 0 cells.

7.29.6. Executing OPT_DFF pass (perform DFF optimizations).

7.29.7. Executing OPT_CLEAN pass (remove unused cells and wires).
Finding unused cells or wires in module \ice40hx8k..

7.29.8. Executing OPT_EXPR pass (perform const folding).
Optimizing module ice40hx8k.

7.29.9. Rerunning OPT passes. (Maybe there is more to do..)

7.29.10. Executing OPT_MUXTREE pass (detect dead branches in mux trees).
Running muxtree optimizer on module \ice40hx8k..
  Creating internal representation of mux trees.
  Evaluating internal representation of mux trees.
  Analyzing evaluation results.
Removed 0 multiplexer ports.
<suppressed ~6 debug messages>

7.29.11. Executing OPT_REDUCE pass (consolidate $*mux and $reduce_* inputs).
  Optimizing cells in module \ice40hx8k.
Performed a total of 0 changes.

7.29.12. Executing OPT_MERGE pass (detect identical cells).
Finding identical cells in module `\ice40hx8k'.
Removed a total of 0 cells.

7.29.13. Executing OPT_DFF pass (perform DFF optimizations).
Adding SRST signal on $auto$ff.cc:266:slice$1103 ($dffe) from module ice40hx8k (D = $flatten\uart_inst.\uart_tx_inst.$sub$ice40/uart/uart_tx.v:88$495_Y [18:6], Q = \uart_inst.uart_tx_inst.prescale_reg [18:6], rval = 13'0000000000000).

7.29.14. Executing OPT_CLEAN pass (remove unused cells and wires).
Finding unused cells or wires in module \ice40hx8k..

7.29.15. Executing OPT_EXPR pass (perform const folding).
Optimizing module ice40hx8k.

7.29.16. Rerunning OPT passes. (Maybe there is more to do..)

7.29.17. Executing OPT_MUXTREE pass (detect dead branches in mux trees).
Running muxtree optimizer on module \ice40hx8k..
  Creating internal representation of mux trees.
  Evaluating internal representation of mux trees.
  Analyzing evaluation results.
Removed 0 multiplexer ports.
<suppressed ~6 debug messages>

7.29.18. Executing OPT_REDUCE pass (consolidate $*mux and $reduce_* inputs).
  Optimizing cells in module \ice40hx8k.
Performed a total of 0 changes.

7.29.19. Executing OPT_MERGE pass (detect identical cells).
Finding identical cells in module `\ice40hx8k'.
Removed a total of 0 cells.

7.29.20. Executing OPT_DFF pass (perform DFF optimizations).

7.29.21. Executing OPT_CLEAN pass (remove unused cells and wires).
Finding unused cells or wires in module \ice40hx8k..

7.29.22. Executing OPT_EXPR pass (perform const folding).
Optimizing module ice40hx8k.

7.29.23. Finished OPT passes. (There is nothing left to do.)

7.30. Executing ICE40_WRAPCARRY pass (wrap carries).

7.31. Executing TECHMAP pass (map to technology primitives).

7.31.1. Executing Verilog-2005 frontend: /home/shay/a/ece270/bin/../share/yosys/techmap.v
Parsing Verilog input from `/home/shay/a/ece270/bin/../share/yosys/techmap.v' to AST representation.
Generating RTLIL representation for module `\_90_simplemap_bool_ops'.
Generating RTLIL representation for module `\_90_simplemap_reduce_ops'.
Generating RTLIL representation for module `\_90_simplemap_logic_ops'.
Generating RTLIL representation for module `\_90_simplemap_compare_ops'.
Generating RTLIL representation for module `\_90_simplemap_various'.
Generating RTLIL representation for module `\_90_simplemap_registers'.
Generating RTLIL representation for module `\_90_shift_ops_shr_shl_sshl_sshr'.
Generating RTLIL representation for module `\_90_shift_shiftx'.
Generating RTLIL representation for module `\_90_fa'.
Generating RTLIL representation for module `\_90_lcu'.
Generating RTLIL representation for module `\_90_alu'.
Generating RTLIL representation for module `\_90_macc'.
Generating RTLIL representation for module `\_90_alumacc'.
Generating RTLIL representation for module `\$__div_mod_u'.
Generating RTLIL representation for module `\$__div_mod_trunc'.
Generating RTLIL representation for module `\_90_div'.
Generating RTLIL representation for module `\_90_mod'.
Generating RTLIL representation for module `\$__div_mod_floor'.
Generating RTLIL representation for module `\_90_divfloor'.
Generating RTLIL representation for module `\_90_modfloor'.
Generating RTLIL representation for module `\_90_pow'.
Generating RTLIL representation for module `\_90_pmux'.
Generating RTLIL representation for module `\_90_demux'.
Generating RTLIL representation for module `\_90_lut'.
Successfully finished Verilog frontend.

7.31.2. Executing Verilog-2005 frontend: /home/shay/a/ece270/bin/../share/yosys/ice40/arith_map.v
Parsing Verilog input from `/home/shay/a/ece270/bin/../share/yosys/ice40/arith_map.v' to AST representation.
Generating RTLIL representation for module `\_80_ice40_alu'.
Successfully finished Verilog frontend.

7.31.3. Continuing TECHMAP pass.
Using extmapper simplemap for cells of type $sdffce.
Using extmapper simplemap for cells of type $reduce_and.
Using extmapper simplemap for cells of type $eq.
Using extmapper simplemap for cells of type $not.
Using template $paramod$8742280fdebca84e1c87f2a86ed84f62d558f4cc\_80_ice40_alu for cells of type $alu.
Using extmapper simplemap for cells of type $logic_and.
Using extmapper simplemap for cells of type $sdff.
Using extmapper simplemap for cells of type $and.
Using extmapper simplemap for cells of type $reduce_or.
Using extmapper simplemap for cells of type $reduce_bool.
Using template $paramod$20b1d0597707d55efcb9664e40f63985956d7680\_80_ice40_alu for cells of type $alu.
Using extmapper simplemap for cells of type $dffe.
Using extmapper simplemap for cells of type $logic_not.
Using template $paramod$3826c06832e910ed7e3a5e37dc9a6adea7917f5a\_80_ice40_alu for cells of type $alu.
Using extmapper simplemap for cells of type $mux.
Using extmapper simplemap for cells of type $adffe.
Using template $paramod$2af30114e9bd4ccb04dad757b3f0a8f6bf0615b0\_80_ice40_alu for cells of type $alu.
Using extmapper simplemap for cells of type $or.
Using extmapper simplemap for cells of type $adff.
Using extmapper simplemap for cells of type $ne.
Using extmapper simplemap for cells of type $lut.
Using extmapper simplemap for cells of type $pos.
Using extmapper simplemap for cells of type $xor.
No more expansions possible.
<suppressed ~259 debug messages>

7.32. Executing OPT pass (performing simple optimizations).

7.32.1. Executing OPT_EXPR pass (perform const folding).
Optimizing module ice40hx8k.
<suppressed ~237 debug messages>

7.32.2. Executing OPT_MERGE pass (detect identical cells).
Finding identical cells in module `\ice40hx8k'.
<suppressed ~108 debug messages>
Removed a total of 36 cells.

7.32.3. Executing OPT_DFF pass (perform DFF optimizations).

7.32.4. Executing OPT_CLEAN pass (remove unused cells and wires).
Finding unused cells or wires in module \ice40hx8k..
Removed 26 unused cells and 137 unused wires.
<suppressed ~27 debug messages>

7.32.5. Finished fast OPT passes.

7.33. Executing ICE40_OPT pass (performing simple optimizations).

7.33.1. Running ICE40 specific optimizations.
Optimized $__ICE40_CARRY_WRAPPER cell back to logic (without SB_CARRY) ice40hx8k.$auto$alumacc.cc:485:replace_alu$1143.slice[0].carry: CO=$auto$alumacc.cc:485:replace_alu$1143.BB [0]
Optimized $__ICE40_CARRY_WRAPPER cell back to logic (without SB_CARRY) ice40hx8k.$auto$alumacc.cc:485:replace_alu$1148.slice[0].carry: CO=\ctr [0]
Optimized $__ICE40_CARRY_WRAPPER cell back to logic (without SB_CARRY) ice40hx8k.$auto$alumacc.cc:485:replace_alu$1151.slice[0].carry: CO=\uart_inst.uart_tx_inst.bit_cnt [0]
Optimized $__ICE40_CARRY_WRAPPER cell back to logic (without SB_CARRY) ice40hx8k.$auto$alumacc.cc:485:replace_alu$1154.slice[0].carry: CO=\uart_inst.uart_tx_inst.prescale_reg [0]

7.33.2. Executing OPT_EXPR pass (perform const folding).
Optimizing module ice40hx8k.
<suppressed ~8 debug messages>

7.33.3. Executing OPT_MERGE pass (detect identical cells).
Finding identical cells in module `\ice40hx8k'.
Removed a total of 0 cells.

7.33.4. Executing OPT_DFF pass (perform DFF optimizations).

7.33.5. Executing OPT_CLEAN pass (remove unused cells and wires).
Finding unused cells or wires in module \ice40hx8k..
Removed 1 unused cells and 1 unused wires.
<suppressed ~2 debug messages>

7.33.6. Rerunning OPT passes. (Removed registers in this run.)

7.33.7. Running ICE40 specific optimizations.

7.33.8. Executing OPT_EXPR pass (perform const folding).
Optimizing module ice40hx8k.

7.33.9. Executing OPT_MERGE pass (detect identical cells).
Finding identical cells in module `\ice40hx8k'.
Removed a total of 0 cells.

7.33.10. Executing OPT_DFF pass (perform DFF optimizations).

7.33.11. Executing OPT_CLEAN pass (remove unused cells and wires).
Finding unused cells or wires in module \ice40hx8k..

7.33.12. Finished OPT passes. (There is nothing left to do.)

7.34. Executing DFFLEGALIZE pass (convert FFs to types supported by the target).

7.35. Executing TECHMAP pass (map to technology primitives).

7.35.1. Executing Verilog-2005 frontend: /home/shay/a/ece270/bin/../share/yosys/ice40/ff_map.v
Parsing Verilog input from `/home/shay/a/ece270/bin/../share/yosys/ice40/ff_map.v' to AST representation.
Generating RTLIL representation for module `\$_DFF_N_'.
Generating RTLIL representation for module `\$_DFF_P_'.
Generating RTLIL representation for module `\$_DFFE_NP_'.
Generating RTLIL representation for module `\$_DFFE_PP_'.
Generating RTLIL representation for module `\$_DFF_NP0_'.
Generating RTLIL representation for module `\$_DFF_NP1_'.
Generating RTLIL representation for module `\$_DFF_PP0_'.
Generating RTLIL representation for module `\$_DFF_PP1_'.
Generating RTLIL representation for module `\$_DFFE_NP0P_'.
Generating RTLIL representation for module `\$_DFFE_NP1P_'.
Generating RTLIL representation for module `\$_DFFE_PP0P_'.
Generating RTLIL representation for module `\$_DFFE_PP1P_'.
Generating RTLIL representation for module `\$_SDFF_NP0_'.
Generating RTLIL representation for module `\$_SDFF_NP1_'.
Generating RTLIL representation for module `\$_SDFF_PP0_'.
Generating RTLIL representation for module `\$_SDFF_PP1_'.
Generating RTLIL representation for module `\$_SDFFCE_NP0P_'.
Generating RTLIL representation for module `\$_SDFFCE_NP1P_'.
Generating RTLIL representation for module `\$_SDFFCE_PP0P_'.
Generating RTLIL representation for module `\$_SDFFCE_PP1P_'.
Successfully finished Verilog frontend.

7.35.2. Continuing TECHMAP pass.
Using template \$_SDFF_PP0_ for cells of type $_SDFF_PP0_.
Using template \$_DFFE_PP_ for cells of type $_DFFE_PP_.
Using template \$_DFFE_PP0P_ for cells of type $_DFFE_PP0P_.
Using template \$_SDFFCE_PP1P_ for cells of type $_SDFFCE_PP1P_.
Using template \$_DFF_PP0_ for cells of type $_DFF_PP0_.
Using template \$_SDFFCE_PP0P_ for cells of type $_SDFFCE_PP0P_.
Using template \$_DFF_PP1_ for cells of type $_DFF_PP1_.
No more expansions possible.
<suppressed ~100 debug messages>

7.36. Executing OPT_EXPR pass (perform const folding).
Optimizing module ice40hx8k.

7.37. Executing SIMPLEMAP pass (map simple cells to gate primitives).
Mapping ice40hx8k.$auto$alumacc.cc:485:replace_alu$1148.slice[0].carry ($lut).
Mapping ice40hx8k.$auto$alumacc.cc:485:replace_alu$1151.slice[0].carry ($lut).
Mapping ice40hx8k.$auto$alumacc.cc:485:replace_alu$1154.slice[0].carry ($lut).

7.38. Executing ICE40_OPT pass (performing simple optimizations).

7.38.1. Running ICE40 specific optimizations.

7.38.2. Executing OPT_EXPR pass (perform const folding).
Optimizing module ice40hx8k.
<suppressed ~48 debug messages>

7.38.3. Executing OPT_MERGE pass (detect identical cells).
Finding identical cells in module `\ice40hx8k'.
<suppressed ~78 debug messages>
Removed a total of 26 cells.

7.38.4. Executing OPT_DFF pass (perform DFF optimizations).

7.38.5. Executing OPT_CLEAN pass (remove unused cells and wires).
Finding unused cells or wires in module \ice40hx8k..
Removed 0 unused cells and 456 unused wires.
<suppressed ~1 debug messages>

7.38.6. Rerunning OPT passes. (Removed registers in this run.)

7.38.7. Running ICE40 specific optimizations.

7.38.8. Executing OPT_EXPR pass (perform const folding).
Optimizing module ice40hx8k.

7.38.9. Executing OPT_MERGE pass (detect identical cells).
Finding identical cells in module `\ice40hx8k'.
Removed a total of 0 cells.

7.38.10. Executing OPT_DFF pass (perform DFF optimizations).

7.38.11. Executing OPT_CLEAN pass (remove unused cells and wires).
Finding unused cells or wires in module \ice40hx8k..

7.38.12. Finished OPT passes. (There is nothing left to do.)

7.39. Executing TECHMAP pass (map to technology primitives).

7.39.1. Executing Verilog-2005 frontend: /home/shay/a/ece270/bin/../share/yosys/ice40/latches_map.v
Parsing Verilog input from `/home/shay/a/ece270/bin/../share/yosys/ice40/latches_map.v' to AST representation.
Generating RTLIL representation for module `\$_DLATCH_N_'.
Generating RTLIL representation for module `\$_DLATCH_P_'.
Successfully finished Verilog frontend.

7.39.2. Continuing TECHMAP pass.
No more expansions possible.
<suppressed ~4 debug messages>

7.40. Executing ABC pass (technology mapping using ABC).

7.40.1. Extracting gate netlist of module `\ice40hx8k' to `<abc-temp-dir>/input.blif'..
Extracted 153 gates and 222 wires to a netlist network with 68 inputs and 53 outputs.

7.40.1.1. Executing ABC.
Running ABC command: "<yosys-exe-dir>/yosys-abc" -s -f <abc-temp-dir>/abc.script 2>&1
ABC: ABC command line: "source <abc-temp-dir>/abc.script".
ABC: 
ABC: + read_blif <abc-temp-dir>/input.blif 
ABC: + read_lut <abc-temp-dir>/lutdefs.txt 
ABC: + strash 
ABC: + &get -n 
ABC: + &fraig -x 
ABC: + &put 
ABC: + scorr 
ABC: Warning: The network is combinational (run "fraig" or "fraig_sweep").
ABC: + dc2 
ABC: + dretime 
ABC: + strash 
ABC: + dch -f 
ABC: + if 
ABC: + mfs2 
ABC: + lutpack -S 1 
ABC: + dress <abc-temp-dir>/input.blif 
ABC: Total number of equiv classes                =      57.
ABC: Participating nodes from both networks       =     127.
ABC: Participating nodes from the first network   =      56. (  93.33 % of nodes)
ABC: Participating nodes from the second network  =      71. ( 118.33 % of nodes)
ABC: Node pairs (any polarity)                    =      56. (  93.33 % of names can be moved)
ABC: Node pairs (same polarity)                   =      55. (  91.67 % of names can be moved)
ABC: Total runtime =     0.02 sec
ABC: + write_blif <abc-temp-dir>/output.blif 

7.40.1.2. Re-integrating ABC results.
ABC RESULTS:              $lut cells:       59
ABC RESULTS:        internal signals:      101
ABC RESULTS:           input signals:       68
ABC RESULTS:          output signals:       53
Removing temp directory.

7.41. Executing ICE40_WRAPCARRY pass (wrap carries).

7.42. Executing TECHMAP pass (map to technology primitives).

7.42.1. Executing Verilog-2005 frontend: /home/shay/a/ece270/bin/../share/yosys/ice40/ff_map.v
Parsing Verilog input from `/home/shay/a/ece270/bin/../share/yosys/ice40/ff_map.v' to AST representation.
Generating RTLIL representation for module `\$_DFF_N_'.
Generating RTLIL representation for module `\$_DFF_P_'.
Generating RTLIL representation for module `\$_DFFE_NP_'.
Generating RTLIL representation for module `\$_DFFE_PP_'.
Generating RTLIL representation for module `\$_DFF_NP0_'.
Generating RTLIL representation for module `\$_DFF_NP1_'.
Generating RTLIL representation for module `\$_DFF_PP0_'.
Generating RTLIL representation for module `\$_DFF_PP1_'.
Generating RTLIL representation for module `\$_DFFE_NP0P_'.
Generating RTLIL representation for module `\$_DFFE_NP1P_'.
Generating RTLIL representation for module `\$_DFFE_PP0P_'.
Generating RTLIL representation for module `\$_DFFE_PP1P_'.
Generating RTLIL representation for module `\$_SDFF_NP0_'.
Generating RTLIL representation for module `\$_SDFF_NP1_'.
Generating RTLIL representation for module `\$_SDFF_PP0_'.
Generating RTLIL representation for module `\$_SDFF_PP1_'.
Generating RTLIL representation for module `\$_SDFFCE_NP0P_'.
Generating RTLIL representation for module `\$_SDFFCE_NP1P_'.
Generating RTLIL representation for module `\$_SDFFCE_PP0P_'.
Generating RTLIL representation for module `\$_SDFFCE_PP1P_'.
Successfully finished Verilog frontend.

7.42.2. Continuing TECHMAP pass.
No more expansions possible.
<suppressed ~22 debug messages>
Removed 21 unused cells and 193 unused wires.

7.43. Executing OPT_LUT pass (optimize LUTs).
Discovering LUTs.
Number of LUTs:       95
  1-LUT               23
  2-LUT               10
  3-LUT               48
  4-LUT               14
  with \SB_CARRY    (#0)   33
  with \SB_CARRY    (#1)   39

Eliminating LUTs.
Number of LUTs:       95
  1-LUT               23
  2-LUT               10
  3-LUT               48
  4-LUT               14
  with \SB_CARRY    (#0)   33
  with \SB_CARRY    (#1)   39

Combining LUTs.
Number of LUTs:       95
  1-LUT               23
  2-LUT               10
  3-LUT               48
  4-LUT               14
  with \SB_CARRY    (#0)   33
  with \SB_CARRY    (#1)   39

Eliminated 0 LUTs.
Combined 0 LUTs.
<suppressed ~339 debug messages>

7.44. Executing TECHMAP pass (map to technology primitives).

7.44.1. Executing Verilog-2005 frontend: /home/shay/a/ece270/bin/../share/yosys/ice40/cells_map.v
Parsing Verilog input from `/home/shay/a/ece270/bin/../share/yosys/ice40/cells_map.v' to AST representation.
Generating RTLIL representation for module `\$lut'.
Successfully finished Verilog frontend.

7.44.2. Continuing TECHMAP pass.
Using template $paramod$fd904e9e35cfd343a9df248824bd3f1408724879\$lut for cells of type $lut.
Using template $paramod\$lut\WIDTH=32'00000000000000000000000000000001\LUT=2'01 for cells of type $lut.
Using template $paramod\$lut\WIDTH=32'00000000000000000000000000000011\LUT=8'10000000 for cells of type $lut.
Using template $paramod\$lut\WIDTH=32'00000000000000000000000000000010\LUT=4'1110 for cells of type $lut.
Using template $paramod$cd6c4b4da6d8737b72fd2dc8f5d83d8967445809\$lut for cells of type $lut.
Using template $paramod\$lut\WIDTH=32'00000000000000000000000000000010\LUT=4'0100 for cells of type $lut.
Using template $paramod\$lut\WIDTH=32'00000000000000000000000000000011\LUT=8'00000001 for cells of type $lut.
Using template $paramod$3039c7f41767c4672f4e3f22ad78f16d42720fbf\$lut for cells of type $lut.
Using template $paramod\$lut\WIDTH=32'00000000000000000000000000000011\LUT=8'11001010 for cells of type $lut.
Using template $paramod$279a8d961e6b2ded8450bee8ed637cb9efa31f02\$lut for cells of type $lut.
Using template $paramod\$lut\WIDTH=32'00000000000000000000000000000011\LUT=8'01100000 for cells of type $lut.
Using template $paramod\$lut\WIDTH=32'00000000000000000000000000000011\LUT=8'11111000 for cells of type $lut.
Using template $paramod\$lut\WIDTH=32'00000000000000000000000000000011\LUT=8'11110001 for cells of type $lut.
Using template $paramod$2e7a95e82db1d690ae9ba5d10f68b175fa2cb467\$lut for cells of type $lut.
Using template $paramod$658b9ed803f0d3d335616d3858b53e0a2522f1e8\$lut for cells of type $lut.
Using template $paramod\$lut\WIDTH=32'00000000000000000000000000000010\LUT=4'0111 for cells of type $lut.
Using template $paramod$6d6beead1425af15cf78b27fd9b11b41b5d4bce8\$lut for cells of type $lut.
Using template $paramod$571404c0889eaf57f492cb5e37f8acb5df5852f9\$lut for cells of type $lut.
Using template $paramod\$lut\WIDTH=32'00000000000000000000000000000010\LUT=4'0001 for cells of type $lut.
Using template $paramod$179512a187da069f3b79ef6612a41e494e7d54b6\$lut for cells of type $lut.
Using template $paramod\$lut\WIDTH=32'00000000000000000000000000000011\LUT=8'10111110 for cells of type $lut.
Using template $paramod\$lut\WIDTH=32'00000000000000000000000000000011\LUT=8'01110001 for cells of type $lut.
No more expansions possible.
<suppressed ~384 debug messages>
Removed 0 unused cells and 193 unused wires.

7.45. Executing AUTONAME pass.
Renamed 1985 objects in module ice40hx8k (20 iterations).
<suppressed ~265 debug messages>

7.46. Executing HIERARCHY pass (managing design hierarchy).

7.46.1. Analyzing design hierarchy..
Top module:  \ice40hx8k

7.46.2. Analyzing design hierarchy..
Top module:  \ice40hx8k
Removed 0 unused modules.

7.47. Printing statistics.

=== ice40hx8k ===

   Number of wires:                120
   Number of wire bits:            574
   Number of public wires:         120
   Number of public wire bits:     574
   Number of memories:               0
   Number of memory bits:            0
   Number of processes:              0
   Number of cells:                225
     SB_CARRY                       51
     SB_DFFE                        15
     SB_DFFER                       12
     SB_DFFESR                      15
     SB_DFFESS                       4
     SB_DFFR                        15
     SB_DFFS                         1
     SB_DFFSR                       16
     SB_LUT4                        95
     SB_PLL40_CORE                   1

7.48. Executing CHECK pass (checking for obvious problems).
Checking module ice40hx8k...
Found and reported 0 problems.

7.49. Executing JSON backend.

Warnings: 85 unique messages, 85 total
End of script. Logfile hash: 8547fad565, CPU: user 0.49s system 0.03s, MEM: 27.21 MB peak
Yosys 0.27 (git sha1 5f88c218b, gcc 11.3.0-1ubuntu1~22.04 -fPIC -O3)
Time spent: 34% 18x read_verilog (0 sec), 18% 1x abc (0 sec), ...
