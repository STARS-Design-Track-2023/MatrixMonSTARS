
 /----------------------------------------------------------------------------\
 |                                                                            |
 |  yosys -- Yosys Open SYnthesis Suite                                       |
 |                                                                            |
 |  Copyright (C) 2012 - 2020  Claire Xenia Wolf <claire@yosyshq.com>         |
 |                                                                            |
 |  Permission to use, copy, modify, and/or distribute this software for any  |
 |  purpose with or without fee is hereby granted, provided that the above    |
 |  copyright notice and this permission notice appear in all copies.         |
 |                                                                            |
 |  THE SOFTWARE IS PROVIDED "AS IS" AND THE AUTHOR DISCLAIMS ALL WARRANTIES  |
 |  WITH REGARD TO THIS SOFTWARE INCLUDING ALL IMPLIED WARRANTIES OF          |
 |  MERCHANTABILITY AND FITNESS. IN NO EVENT SHALL THE AUTHOR BE LIABLE FOR   |
 |  ANY SPECIAL, DIRECT, INDIRECT, OR CONSEQUENTIAL DAMAGES OR ANY DAMAGES    |
 |  WHATSOEVER RESULTING FROM LOSS OF USE, DATA OR PROFITS, WHETHER IN AN     |
 |  ACTION OF CONTRACT, NEGLIGENCE OR OTHER TORTIOUS ACTION, ARISING OUT OF   |
 |  OR IN CONNECTION WITH THE USE OR PERFORMANCE OF THIS SOFTWARE.            |
 |                                                                            |
 \----------------------------------------------------------------------------/

 Yosys 0.27 (git sha1 5f88c218b, gcc 11.3.0-1ubuntu1~22.04 -fPIC -O3)


-- Running command `read_verilog -sv -noblackbox ice40/ice40hx8k.sv source/top.sv source/key_encoder.sv source/digit_decoder.sv source/opcode_decoder.sv source/fsm.sv source/register_decoder.sv source/new_operand_buffer.sv source/read_fsm.sv source/reg_file.sv source/alu.sv source/ssdec.sv ice40/uart/uart.v ice40/uart/uart_tx.v ice40/uart/uart_rx.v; synth_ice40 -top ice40hx8k -json ./ice40/build/ice40.json' --

1. Executing Verilog-2005 frontend: ice40/ice40hx8k.sv
Parsing SystemVerilog input from `ice40/ice40hx8k.sv' to AST representation.
Generating RTLIL representation for module `\ice40hx8k'.
Generating RTLIL representation for module `\reset_on_start'.
Successfully finished Verilog frontend.

2. Executing Verilog-2005 frontend: source/top.sv
Parsing SystemVerilog input from `source/top.sv' to AST representation.
Generating RTLIL representation for module `\top'.
Successfully finished Verilog frontend.

3. Executing Verilog-2005 frontend: source/key_encoder.sv
Parsing SystemVerilog input from `source/key_encoder.sv' to AST representation.
Generating RTLIL representation for module `\key_encoder'.
Successfully finished Verilog frontend.

4. Executing Verilog-2005 frontend: source/digit_decoder.sv
Parsing SystemVerilog input from `source/digit_decoder.sv' to AST representation.
Generating RTLIL representation for module `\digit_decoder'.
Successfully finished Verilog frontend.

5. Executing Verilog-2005 frontend: source/opcode_decoder.sv
Parsing SystemVerilog input from `source/opcode_decoder.sv' to AST representation.
Generating RTLIL representation for module `\opcode_decoder'.
Successfully finished Verilog frontend.

6. Executing Verilog-2005 frontend: source/fsm.sv
Parsing SystemVerilog input from `source/fsm.sv' to AST representation.
Generating RTLIL representation for module `\fsm'.
Successfully finished Verilog frontend.

7. Executing Verilog-2005 frontend: source/register_decoder.sv
Parsing SystemVerilog input from `source/register_decoder.sv' to AST representation.
Generating RTLIL representation for module `\register_decoder'.
Successfully finished Verilog frontend.

8. Executing Verilog-2005 frontend: source/new_operand_buffer.sv
Parsing SystemVerilog input from `source/new_operand_buffer.sv' to AST representation.
Generating RTLIL representation for module `\new_operand_buffer'.
Successfully finished Verilog frontend.

9. Executing Verilog-2005 frontend: source/read_fsm.sv
Parsing SystemVerilog input from `source/read_fsm.sv' to AST representation.
Generating RTLIL representation for module `\read_fsm'.
Successfully finished Verilog frontend.

10. Executing Verilog-2005 frontend: source/reg_file.sv
Parsing SystemVerilog input from `source/reg_file.sv' to AST representation.
Generating RTLIL representation for module `\reg_file'.
Successfully finished Verilog frontend.

11. Executing Verilog-2005 frontend: source/alu.sv
Parsing SystemVerilog input from `source/alu.sv' to AST representation.
Generating RTLIL representation for module `\alu'.
Successfully finished Verilog frontend.

12. Executing Verilog-2005 frontend: source/ssdec.sv
Parsing SystemVerilog input from `source/ssdec.sv' to AST representation.
Generating RTLIL representation for module `\ssdec'.
Successfully finished Verilog frontend.

13. Executing Verilog-2005 frontend: ice40/uart/uart.v
Parsing SystemVerilog input from `ice40/uart/uart.v' to AST representation.
Generating RTLIL representation for module `\uart'.
Successfully finished Verilog frontend.

14. Executing Verilog-2005 frontend: ice40/uart/uart_tx.v
Parsing SystemVerilog input from `ice40/uart/uart_tx.v' to AST representation.
Generating RTLIL representation for module `\uart_tx'.
Successfully finished Verilog frontend.

15. Executing Verilog-2005 frontend: ice40/uart/uart_rx.v
Parsing SystemVerilog input from `ice40/uart/uart_rx.v' to AST representation.
Generating RTLIL representation for module `\uart_rx'.
Successfully finished Verilog frontend.

16. Executing SYNTH_ICE40 pass.

16.1. Executing Verilog-2005 frontend: /home/shay/a/ece270/bin/../share/yosys/ice40/cells_sim.v
Parsing Verilog input from `/home/shay/a/ece270/bin/../share/yosys/ice40/cells_sim.v' to AST representation.
Generating RTLIL representation for module `\SB_IO'.
Generating RTLIL representation for module `\SB_GB_IO'.
Generating RTLIL representation for module `\SB_GB'.
Generating RTLIL representation for module `\SB_LUT4'.
Generating RTLIL representation for module `\SB_CARRY'.
Generating RTLIL representation for module `\SB_DFF'.
Generating RTLIL representation for module `\SB_DFFE'.
Generating RTLIL representation for module `\SB_DFFSR'.
Generating RTLIL representation for module `\SB_DFFR'.
Generating RTLIL representation for module `\SB_DFFSS'.
Generating RTLIL representation for module `\SB_DFFS'.
Generating RTLIL representation for module `\SB_DFFESR'.
Generating RTLIL representation for module `\SB_DFFER'.
Generating RTLIL representation for module `\SB_DFFESS'.
Generating RTLIL representation for module `\SB_DFFES'.
Generating RTLIL representation for module `\SB_DFFN'.
Generating RTLIL representation for module `\SB_DFFNE'.
Generating RTLIL representation for module `\SB_DFFNSR'.
Generating RTLIL representation for module `\SB_DFFNR'.
Generating RTLIL representation for module `\SB_DFFNSS'.
Generating RTLIL representation for module `\SB_DFFNS'.
Generating RTLIL representation for module `\SB_DFFNESR'.
Generating RTLIL representation for module `\SB_DFFNER'.
Generating RTLIL representation for module `\SB_DFFNESS'.
Generating RTLIL representation for module `\SB_DFFNES'.
Generating RTLIL representation for module `\SB_RAM40_4K'.
Generating RTLIL representation for module `\SB_RAM40_4KNR'.
Generating RTLIL representation for module `\SB_RAM40_4KNW'.
Generating RTLIL representation for module `\SB_RAM40_4KNRNW'.
Generating RTLIL representation for module `\ICESTORM_LC'.
Generating RTLIL representation for module `\SB_PLL40_CORE'.
Generating RTLIL representation for module `\SB_PLL40_PAD'.
Generating RTLIL representation for module `\SB_PLL40_2_PAD'.
Generating RTLIL representation for module `\SB_PLL40_2F_CORE'.
Generating RTLIL representation for module `\SB_PLL40_2F_PAD'.
Generating RTLIL representation for module `\SB_WARMBOOT'.
Generating RTLIL representation for module `\SB_SPRAM256KA'.
Generating RTLIL representation for module `\SB_HFOSC'.
Generating RTLIL representation for module `\SB_LFOSC'.
Generating RTLIL representation for module `\SB_RGBA_DRV'.
Generating RTLIL representation for module `\SB_LED_DRV_CUR'.
Generating RTLIL representation for module `\SB_RGB_DRV'.
Generating RTLIL representation for module `\SB_I2C'.
Generating RTLIL representation for module `\SB_SPI'.
Generating RTLIL representation for module `\SB_LEDDA_IP'.
Generating RTLIL representation for module `\SB_FILTER_50NS'.
Generating RTLIL representation for module `\SB_IO_I3C'.
Generating RTLIL representation for module `\SB_IO_OD'.
Generating RTLIL representation for module `\SB_MAC16'.
Generating RTLIL representation for module `\ICESTORM_RAM'.
Successfully finished Verilog frontend.

16.2. Executing HIERARCHY pass (managing design hierarchy).

16.2.1. Analyzing design hierarchy..
Top module:  \ice40hx8k
Used module:     \top
Used module:         \ssdec
Used module:         \alu
Used module:         \reg_file
Used module:         \read_fsm
Used module:         \new_operand_buffer
Used module:         \register_decoder
Used module:         \fsm
Used module:         \opcode_decoder
Used module:         \digit_decoder
Used module:         \key_encoder
Used module:     \reset_on_start
Used module:     \uart
Used module:         \uart_rx
Used module:         \uart_tx
Parameter \DATA_WIDTH = 8

16.2.2. Executing AST frontend in derive mode using pre-parsed AST for module `\uart_rx'.
Parameter \DATA_WIDTH = 8
Generating RTLIL representation for module `$paramod\uart_rx\DATA_WIDTH=s32'00000000000000000000000000001000'.
Parameter \DATA_WIDTH = 8

16.2.3. Executing AST frontend in derive mode using pre-parsed AST for module `\uart_tx'.
Parameter \DATA_WIDTH = 8
Generating RTLIL representation for module `$paramod\uart_tx\DATA_WIDTH=s32'00000000000000000000000000001000'.

16.2.4. Analyzing design hierarchy..
Top module:  \ice40hx8k
Used module:     \top
Used module:         \ssdec
Used module:         \alu
Used module:         \reg_file
Used module:         \read_fsm
Used module:         \new_operand_buffer
Used module:         \register_decoder
Used module:         \fsm
Used module:         \opcode_decoder
Used module:         \digit_decoder
Used module:         \key_encoder
Used module:     \reset_on_start
Used module:     \uart
Used module:         $paramod\uart_rx\DATA_WIDTH=s32'00000000000000000000000000001000
Used module:         $paramod\uart_tx\DATA_WIDTH=s32'00000000000000000000000000001000

16.2.5. Analyzing design hierarchy..
Top module:  \ice40hx8k
Used module:     \top
Used module:         \ssdec
Used module:         \alu
Used module:         \reg_file
Used module:         \read_fsm
Used module:         \new_operand_buffer
Used module:         \register_decoder
Used module:         \fsm
Used module:         \opcode_decoder
Used module:         \digit_decoder
Used module:         \key_encoder
Used module:     \reset_on_start
Used module:     \uart
Used module:         $paramod\uart_rx\DATA_WIDTH=s32'00000000000000000000000000001000
Used module:         $paramod\uart_tx\DATA_WIDTH=s32'00000000000000000000000000001000
Removing unused module `\uart_rx'.
Removing unused module `\uart_tx'.
Removed 2 unused modules.
Mapping positional arguments of cell ice40hx8k.top_inst (top).
Mapping positional arguments of cell ice40hx8k.ros (reset_on_start).
Warning: Resizing cell port ice40hx8k.uart_inst.prescale from 32 bits to 16 bits.
Warning: Resizing cell port ice40hx8k.uart_inst.rst from 32 bits to 1 bits.

16.3. Executing PROC pass (convert processes to netlists).

16.3.1. Executing PROC_CLEAN pass (remove empty switches from decision trees).
Cleaned up 0 empty switches.

16.3.2. Executing PROC_RMDEAD pass (remove dead branches from decision trees).
Marked 1 switch rules as full_case in process $proc$/home/shay/a/ece270/bin/../share/yosys/ice40/cells_sim.v:1414$411 in module SB_DFFNES.
Marked 1 switch rules as full_case in process $proc$/home/shay/a/ece270/bin/../share/yosys/ice40/cells_sim.v:1353$404 in module SB_DFFNESS.
Marked 1 switch rules as full_case in process $proc$/home/shay/a/ece270/bin/../share/yosys/ice40/cells_sim.v:1273$400 in module SB_DFFNER.
Marked 1 switch rules as full_case in process $proc$/home/shay/a/ece270/bin/../share/yosys/ice40/cells_sim.v:1212$393 in module SB_DFFNESR.
Marked 1 switch rules as full_case in process $proc$/home/shay/a/ece270/bin/../share/yosys/ice40/cells_sim.v:1138$390 in module SB_DFFNS.
Marked 1 switch rules as full_case in process $proc$/home/shay/a/ece270/bin/../share/yosys/ice40/cells_sim.v:1088$387 in module SB_DFFNSS.
Marked 1 switch rules as full_case in process $proc$/home/shay/a/ece270/bin/../share/yosys/ice40/cells_sim.v:1017$384 in module SB_DFFNR.
Marked 1 switch rules as full_case in process $proc$/home/shay/a/ece270/bin/../share/yosys/ice40/cells_sim.v:967$381 in module SB_DFFNSR.
Marked 1 switch rules as full_case in process $proc$/home/shay/a/ece270/bin/../share/yosys/ice40/cells_sim.v:803$373 in module SB_DFFES.
Marked 1 switch rules as full_case in process $proc$/home/shay/a/ece270/bin/../share/yosys/ice40/cells_sim.v:742$366 in module SB_DFFESS.
Marked 1 switch rules as full_case in process $proc$/home/shay/a/ece270/bin/../share/yosys/ice40/cells_sim.v:662$362 in module SB_DFFER.
Marked 1 switch rules as full_case in process $proc$/home/shay/a/ece270/bin/../share/yosys/ice40/cells_sim.v:601$355 in module SB_DFFESR.
Marked 1 switch rules as full_case in process $proc$/home/shay/a/ece270/bin/../share/yosys/ice40/cells_sim.v:527$352 in module SB_DFFS.
Marked 1 switch rules as full_case in process $proc$/home/shay/a/ece270/bin/../share/yosys/ice40/cells_sim.v:477$349 in module SB_DFFSS.
Marked 1 switch rules as full_case in process $proc$/home/shay/a/ece270/bin/../share/yosys/ice40/cells_sim.v:406$346 in module SB_DFFR.
Marked 1 switch rules as full_case in process $proc$/home/shay/a/ece270/bin/../share/yosys/ice40/cells_sim.v:356$343 in module SB_DFFSR.
Marked 4 switch rules as full_case in process $proc$ice40/uart/uart_tx.v:78$579 in module $paramod\uart_tx\DATA_WIDTH=s32'00000000000000000000000000001000.
Marked 7 switch rules as full_case in process $proc$ice40/uart/uart_rx.v:86$551 in module $paramod\uart_rx\DATA_WIDTH=s32'00000000000000000000000000001000.
Marked 1 switch rules as full_case in process $proc$source/ssdec.sv:0$122 in module ssdec.
Marked 1 switch rules as full_case in process $proc$source/ssdec.sv:0$121 in module ssdec.
Marked 4 switch rules as full_case in process $proc$source/alu.sv:0$84 in module alu.
Marked 2 switch rules as full_case in process $proc$source/alu.sv:26$82 in module alu.
Marked 2 switch rules as full_case in process $proc$source/reg_file.sv:0$81 in module reg_file.
Marked 1 switch rules as full_case in process $proc$source/reg_file.sv:10$79 in module reg_file.
Marked 1 switch rules as full_case in process $proc$source/read_fsm.sv:0$78 in module read_fsm.
Marked 5 switch rules as full_case in process $proc$source/read_fsm.sv:0$74 in module read_fsm.
Marked 1 switch rules as full_case in process $proc$source/read_fsm.sv:14$72 in module read_fsm.
Marked 3 switch rules as full_case in process $proc$source/new_operand_buffer.sv:0$71 in module new_operand_buffer.
Marked 2 switch rules as full_case in process $proc$source/new_operand_buffer.sv:0$70 in module new_operand_buffer.
Marked 1 switch rules as full_case in process $proc$source/new_operand_buffer.sv:15$68 in module new_operand_buffer.
Marked 2 switch rules as full_case in process $proc$source/register_decoder.sv:0$67 in module register_decoder.
Marked 1 switch rules as full_case in process $proc$source/register_decoder.sv:0$62 in module register_decoder.
Marked 1 switch rules as full_case in process $proc$source/register_decoder.sv:10$60 in module register_decoder.
Marked 3 switch rules as full_case in process $proc$source/fsm.sv:0$54 in module fsm.
Marked 5 switch rules as full_case in process $proc$source/fsm.sv:0$51 in module fsm.
Marked 1 switch rules as full_case in process $proc$source/fsm.sv:10$49 in module fsm.
Marked 2 switch rules as full_case in process $proc$source/opcode_decoder.sv:0$48 in module opcode_decoder.
Marked 1 switch rules as full_case in process $proc$source/opcode_decoder.sv:8$46 in module opcode_decoder.
Marked 1 switch rules as full_case in process $proc$source/digit_decoder.sv:0$43 in module digit_decoder.
Marked 1 switch rules as full_case in process $proc$source/digit_decoder.sv:9$41 in module digit_decoder.
Marked 2 switch rules as full_case in process $proc$source/key_encoder.sv:0$40 in module key_encoder.
Marked 1 switch rules as full_case in process $proc$source/key_encoder.sv:0$35 in module key_encoder.
Marked 1 switch rules as full_case in process $proc$source/key_encoder.sv:8$33 in module key_encoder.
Marked 5 switch rules as full_case in process $proc$ice40/ice40hx8k.sv:131$16 in module reset_on_start.
Marked 1 switch rules as full_case in process $proc$ice40/ice40hx8k.sv:104$9 in module ice40hx8k.
Marked 1 switch rules as full_case in process $proc$ice40/ice40hx8k.sv:98$7 in module ice40hx8k.
Marked 1 switch rules as full_case in process $proc$ice40/ice40hx8k.sv:14$1 in module ice40hx8k.
Removed a total of 0 dead cases.

16.3.3. Executing PROC_PRUNE pass (remove redundant assignments in processes).
Removed 34 redundant assignments.
Promoted 93 assignments to connections.

16.3.4. Executing PROC_INIT pass (extract init attributes).
Found init rule in `\SB_DFFNES.$proc$/home/shay/a/ece270/bin/../share/yosys/ice40/cells_sim.v:0$414'.
  Set init value: \Q = 1'0
Found init rule in `\SB_DFFNESS.$proc$/home/shay/a/ece270/bin/../share/yosys/ice40/cells_sim.v:0$410'.
  Set init value: \Q = 1'0
Found init rule in `\SB_DFFNER.$proc$/home/shay/a/ece270/bin/../share/yosys/ice40/cells_sim.v:0$403'.
  Set init value: \Q = 1'0
Found init rule in `\SB_DFFNESR.$proc$/home/shay/a/ece270/bin/../share/yosys/ice40/cells_sim.v:0$399'.
  Set init value: \Q = 1'0
Found init rule in `\SB_DFFNS.$proc$/home/shay/a/ece270/bin/../share/yosys/ice40/cells_sim.v:0$392'.
  Set init value: \Q = 1'0
Found init rule in `\SB_DFFNSS.$proc$/home/shay/a/ece270/bin/../share/yosys/ice40/cells_sim.v:0$389'.
  Set init value: \Q = 1'0
Found init rule in `\SB_DFFNR.$proc$/home/shay/a/ece270/bin/../share/yosys/ice40/cells_sim.v:0$386'.
  Set init value: \Q = 1'0
Found init rule in `\SB_DFFNSR.$proc$/home/shay/a/ece270/bin/../share/yosys/ice40/cells_sim.v:0$383'.
  Set init value: \Q = 1'0
Found init rule in `\SB_DFFNE.$proc$/home/shay/a/ece270/bin/../share/yosys/ice40/cells_sim.v:0$380'.
  Set init value: \Q = 1'0
Found init rule in `\SB_DFFN.$proc$/home/shay/a/ece270/bin/../share/yosys/ice40/cells_sim.v:0$378'.
  Set init value: \Q = 1'0
Found init rule in `\SB_DFFES.$proc$/home/shay/a/ece270/bin/../share/yosys/ice40/cells_sim.v:0$376'.
  Set init value: \Q = 1'0
Found init rule in `\SB_DFFESS.$proc$/home/shay/a/ece270/bin/../share/yosys/ice40/cells_sim.v:0$372'.
  Set init value: \Q = 1'0
Found init rule in `\SB_DFFER.$proc$/home/shay/a/ece270/bin/../share/yosys/ice40/cells_sim.v:0$365'.
  Set init value: \Q = 1'0
Found init rule in `\SB_DFFESR.$proc$/home/shay/a/ece270/bin/../share/yosys/ice40/cells_sim.v:0$361'.
  Set init value: \Q = 1'0
Found init rule in `\SB_DFFS.$proc$/home/shay/a/ece270/bin/../share/yosys/ice40/cells_sim.v:0$354'.
  Set init value: \Q = 1'0
Found init rule in `\SB_DFFSS.$proc$/home/shay/a/ece270/bin/../share/yosys/ice40/cells_sim.v:0$351'.
  Set init value: \Q = 1'0
Found init rule in `\SB_DFFR.$proc$/home/shay/a/ece270/bin/../share/yosys/ice40/cells_sim.v:0$348'.
  Set init value: \Q = 1'0
Found init rule in `\SB_DFFSR.$proc$/home/shay/a/ece270/bin/../share/yosys/ice40/cells_sim.v:0$345'.
  Set init value: \Q = 1'0
Found init rule in `\SB_DFFE.$proc$/home/shay/a/ece270/bin/../share/yosys/ice40/cells_sim.v:0$342'.
  Set init value: \Q = 1'0
Found init rule in `\SB_DFF.$proc$/home/shay/a/ece270/bin/../share/yosys/ice40/cells_sim.v:0$340'.
  Set init value: \Q = 1'0
Found init rule in `$paramod\uart_tx\DATA_WIDTH=s32'00000000000000000000000000001000.$proc$ice40/uart/uart_tx.v:71$598'.
  Set init value: \bit_cnt = 4'0000
Found init rule in `$paramod\uart_tx\DATA_WIDTH=s32'00000000000000000000000000001000.$proc$ice40/uart/uart_tx.v:70$597'.
  Set init value: \prescale_reg = 19'0000000000000000000
Found init rule in `$paramod\uart_tx\DATA_WIDTH=s32'00000000000000000000000000001000.$proc$ice40/uart/uart_tx.v:69$596'.
  Set init value: \data_reg = 9'000000000
Found init rule in `$paramod\uart_tx\DATA_WIDTH=s32'00000000000000000000000000001000.$proc$ice40/uart/uart_tx.v:67$595'.
  Set init value: \busy_reg = 1'0
Found init rule in `$paramod\uart_tx\DATA_WIDTH=s32'00000000000000000000000000001000.$proc$ice40/uart/uart_tx.v:65$594'.
  Set init value: \txd_reg = 1'1
Found init rule in `$paramod\uart_tx\DATA_WIDTH=s32'00000000000000000000000000001000.$proc$ice40/uart/uart_tx.v:63$593'.
  Set init value: \input_axis_tready_reg = 1'0
Found init rule in `$paramod\uart_rx\DATA_WIDTH=s32'00000000000000000000000000001000.$proc$ice40/uart/uart_rx.v:77$578'.
  Set init value: \bit_cnt = 4'0000
Found init rule in `$paramod\uart_rx\DATA_WIDTH=s32'00000000000000000000000000001000.$proc$ice40/uart/uart_rx.v:76$577'.
  Set init value: \prescale_reg = 19'0000000000000000000
Found init rule in `$paramod\uart_rx\DATA_WIDTH=s32'00000000000000000000000000001000.$proc$ice40/uart/uart_rx.v:75$576'.
  Set init value: \data_reg = 8'00000000
Found init rule in `$paramod\uart_rx\DATA_WIDTH=s32'00000000000000000000000000001000.$proc$ice40/uart/uart_rx.v:73$575'.
  Set init value: \frame_error_reg = 1'0
Found init rule in `$paramod\uart_rx\DATA_WIDTH=s32'00000000000000000000000000001000.$proc$ice40/uart/uart_rx.v:72$574'.
  Set init value: \overrun_error_reg = 1'0
Found init rule in `$paramod\uart_rx\DATA_WIDTH=s32'00000000000000000000000000001000.$proc$ice40/uart/uart_rx.v:71$573'.
  Set init value: \busy_reg = 1'0
Found init rule in `$paramod\uart_rx\DATA_WIDTH=s32'00000000000000000000000000001000.$proc$ice40/uart/uart_rx.v:69$572'.
  Set init value: \rxd_reg = 1'1
Found init rule in `$paramod\uart_rx\DATA_WIDTH=s32'00000000000000000000000000001000.$proc$ice40/uart/uart_rx.v:67$571'.
  Set init value: \output_axis_tvalid_reg = 1'0
Found init rule in `$paramod\uart_rx\DATA_WIDTH=s32'00000000000000000000000000001000.$proc$ice40/uart/uart_rx.v:66$570'.
  Set init value: \output_axis_tdata_reg = 8'00000000
Found init rule in `\reset_on_start.$proc$ice40/ice40hx8k.sv:129$23'.
  Set init value: \startup = 3'000
Found init rule in `\ice40hx8k.$proc$ice40/ice40hx8k.sv:13$14'.
  Set init value: \hz100 = 1'0
Found init rule in `\ice40hx8k.$proc$ice40/ice40hx8k.sv:12$13'.
  Set init value: \ctr = 16'0000000000000000

16.3.5. Executing PROC_ARST pass (detect async resets in processes).
Found async reset \S in `\SB_DFFNES.$proc$/home/shay/a/ece270/bin/../share/yosys/ice40/cells_sim.v:1414$411'.
Found async reset \R in `\SB_DFFNER.$proc$/home/shay/a/ece270/bin/../share/yosys/ice40/cells_sim.v:1273$400'.
Found async reset \S in `\SB_DFFNS.$proc$/home/shay/a/ece270/bin/../share/yosys/ice40/cells_sim.v:1138$390'.
Found async reset \R in `\SB_DFFNR.$proc$/home/shay/a/ece270/bin/../share/yosys/ice40/cells_sim.v:1017$384'.
Found async reset \S in `\SB_DFFES.$proc$/home/shay/a/ece270/bin/../share/yosys/ice40/cells_sim.v:803$373'.
Found async reset \R in `\SB_DFFER.$proc$/home/shay/a/ece270/bin/../share/yosys/ice40/cells_sim.v:662$362'.
Found async reset \S in `\SB_DFFS.$proc$/home/shay/a/ece270/bin/../share/yosys/ice40/cells_sim.v:527$352'.
Found async reset \R in `\SB_DFFR.$proc$/home/shay/a/ece270/bin/../share/yosys/ice40/cells_sim.v:406$346'.
Found async reset \nrst in `\alu.$proc$source/alu.sv:26$82'.
Found async reset \nrst in `\reg_file.$proc$source/reg_file.sv:10$79'.
Found async reset \nrst in `\read_fsm.$proc$source/read_fsm.sv:14$72'.
Found async reset \nrst in `\new_operand_buffer.$proc$source/new_operand_buffer.sv:15$68'.
Found async reset \nrst in `\register_decoder.$proc$source/register_decoder.sv:10$60'.
Found async reset \nrst in `\fsm.$proc$source/fsm.sv:10$49'.
Found async reset \nrst in `\opcode_decoder.$proc$source/opcode_decoder.sv:8$46'.
Found async reset \nrst in `\digit_decoder.$proc$source/digit_decoder.sv:9$41'.
Found async reset \nrst in `\key_encoder.$proc$source/key_encoder.sv:8$33'.
Found async reset \manual in `\reset_on_start.$proc$ice40/ice40hx8k.sv:131$16'.
Found async reset \rxready in `\ice40hx8k.$proc$ice40/ice40hx8k.sv:104$9'.
Found async reset \txready in `\ice40hx8k.$proc$ice40/ice40hx8k.sv:98$7'.

16.3.6. Executing PROC_ROM pass (convert switches to ROMs).
Converted 2 switches.
<suppressed ~76 debug messages>

16.3.7. Executing PROC_MUX pass (convert decision trees to multiplexers).
Creating decoders for process `\SB_DFFNES.$proc$/home/shay/a/ece270/bin/../share/yosys/ice40/cells_sim.v:0$414'.
Creating decoders for process `\SB_DFFNES.$proc$/home/shay/a/ece270/bin/../share/yosys/ice40/cells_sim.v:1414$411'.
     1/1: $0\Q[0:0]
Creating decoders for process `\SB_DFFNESS.$proc$/home/shay/a/ece270/bin/../share/yosys/ice40/cells_sim.v:0$410'.
Creating decoders for process `\SB_DFFNESS.$proc$/home/shay/a/ece270/bin/../share/yosys/ice40/cells_sim.v:1353$404'.
     1/1: $0\Q[0:0]
Creating decoders for process `\SB_DFFNER.$proc$/home/shay/a/ece270/bin/../share/yosys/ice40/cells_sim.v:0$403'.
Creating decoders for process `\SB_DFFNER.$proc$/home/shay/a/ece270/bin/../share/yosys/ice40/cells_sim.v:1273$400'.
     1/1: $0\Q[0:0]
Creating decoders for process `\SB_DFFNESR.$proc$/home/shay/a/ece270/bin/../share/yosys/ice40/cells_sim.v:0$399'.
Creating decoders for process `\SB_DFFNESR.$proc$/home/shay/a/ece270/bin/../share/yosys/ice40/cells_sim.v:1212$393'.
     1/1: $0\Q[0:0]
Creating decoders for process `\SB_DFFNS.$proc$/home/shay/a/ece270/bin/../share/yosys/ice40/cells_sim.v:0$392'.
Creating decoders for process `\SB_DFFNS.$proc$/home/shay/a/ece270/bin/../share/yosys/ice40/cells_sim.v:1138$390'.
     1/1: $0\Q[0:0]
Creating decoders for process `\SB_DFFNSS.$proc$/home/shay/a/ece270/bin/../share/yosys/ice40/cells_sim.v:0$389'.
Creating decoders for process `\SB_DFFNSS.$proc$/home/shay/a/ece270/bin/../share/yosys/ice40/cells_sim.v:1088$387'.
     1/1: $0\Q[0:0]
Creating decoders for process `\SB_DFFNR.$proc$/home/shay/a/ece270/bin/../share/yosys/ice40/cells_sim.v:0$386'.
Creating decoders for process `\SB_DFFNR.$proc$/home/shay/a/ece270/bin/../share/yosys/ice40/cells_sim.v:1017$384'.
     1/1: $0\Q[0:0]
Creating decoders for process `\SB_DFFNSR.$proc$/home/shay/a/ece270/bin/../share/yosys/ice40/cells_sim.v:0$383'.
Creating decoders for process `\SB_DFFNSR.$proc$/home/shay/a/ece270/bin/../share/yosys/ice40/cells_sim.v:967$381'.
     1/1: $0\Q[0:0]
Creating decoders for process `\SB_DFFNE.$proc$/home/shay/a/ece270/bin/../share/yosys/ice40/cells_sim.v:0$380'.
Creating decoders for process `\SB_DFFNE.$proc$/home/shay/a/ece270/bin/../share/yosys/ice40/cells_sim.v:922$379'.
     1/1: $0\Q[0:0]
Creating decoders for process `\SB_DFFN.$proc$/home/shay/a/ece270/bin/../share/yosys/ice40/cells_sim.v:0$378'.
Creating decoders for process `\SB_DFFN.$proc$/home/shay/a/ece270/bin/../share/yosys/ice40/cells_sim.v:882$377'.
Creating decoders for process `\SB_DFFES.$proc$/home/shay/a/ece270/bin/../share/yosys/ice40/cells_sim.v:0$376'.
Creating decoders for process `\SB_DFFES.$proc$/home/shay/a/ece270/bin/../share/yosys/ice40/cells_sim.v:803$373'.
     1/1: $0\Q[0:0]
Creating decoders for process `\SB_DFFESS.$proc$/home/shay/a/ece270/bin/../share/yosys/ice40/cells_sim.v:0$372'.
Creating decoders for process `\SB_DFFESS.$proc$/home/shay/a/ece270/bin/../share/yosys/ice40/cells_sim.v:742$366'.
     1/1: $0\Q[0:0]
Creating decoders for process `\SB_DFFER.$proc$/home/shay/a/ece270/bin/../share/yosys/ice40/cells_sim.v:0$365'.
Creating decoders for process `\SB_DFFER.$proc$/home/shay/a/ece270/bin/../share/yosys/ice40/cells_sim.v:662$362'.
     1/1: $0\Q[0:0]
Creating decoders for process `\SB_DFFESR.$proc$/home/shay/a/ece270/bin/../share/yosys/ice40/cells_sim.v:0$361'.
Creating decoders for process `\SB_DFFESR.$proc$/home/shay/a/ece270/bin/../share/yosys/ice40/cells_sim.v:601$355'.
     1/1: $0\Q[0:0]
Creating decoders for process `\SB_DFFS.$proc$/home/shay/a/ece270/bin/../share/yosys/ice40/cells_sim.v:0$354'.
Creating decoders for process `\SB_DFFS.$proc$/home/shay/a/ece270/bin/../share/yosys/ice40/cells_sim.v:527$352'.
     1/1: $0\Q[0:0]
Creating decoders for process `\SB_DFFSS.$proc$/home/shay/a/ece270/bin/../share/yosys/ice40/cells_sim.v:0$351'.
Creating decoders for process `\SB_DFFSS.$proc$/home/shay/a/ece270/bin/../share/yosys/ice40/cells_sim.v:477$349'.
     1/1: $0\Q[0:0]
Creating decoders for process `\SB_DFFR.$proc$/home/shay/a/ece270/bin/../share/yosys/ice40/cells_sim.v:0$348'.
Creating decoders for process `\SB_DFFR.$proc$/home/shay/a/ece270/bin/../share/yosys/ice40/cells_sim.v:406$346'.
     1/1: $0\Q[0:0]
Creating decoders for process `\SB_DFFSR.$proc$/home/shay/a/ece270/bin/../share/yosys/ice40/cells_sim.v:0$345'.
Creating decoders for process `\SB_DFFSR.$proc$/home/shay/a/ece270/bin/../share/yosys/ice40/cells_sim.v:356$343'.
     1/1: $0\Q[0:0]
Creating decoders for process `\SB_DFFE.$proc$/home/shay/a/ece270/bin/../share/yosys/ice40/cells_sim.v:0$342'.
Creating decoders for process `\SB_DFFE.$proc$/home/shay/a/ece270/bin/../share/yosys/ice40/cells_sim.v:311$341'.
     1/1: $0\Q[0:0]
Creating decoders for process `\SB_DFF.$proc$/home/shay/a/ece270/bin/../share/yosys/ice40/cells_sim.v:0$340'.
Creating decoders for process `\SB_DFF.$proc$/home/shay/a/ece270/bin/../share/yosys/ice40/cells_sim.v:271$339'.
Creating decoders for process `$paramod\uart_tx\DATA_WIDTH=s32'00000000000000000000000000001000.$proc$ice40/uart/uart_tx.v:71$598'.
Creating decoders for process `$paramod\uart_tx\DATA_WIDTH=s32'00000000000000000000000000001000.$proc$ice40/uart/uart_tx.v:70$597'.
Creating decoders for process `$paramod\uart_tx\DATA_WIDTH=s32'00000000000000000000000000001000.$proc$ice40/uart/uart_tx.v:69$596'.
Creating decoders for process `$paramod\uart_tx\DATA_WIDTH=s32'00000000000000000000000000001000.$proc$ice40/uart/uart_tx.v:67$595'.
Creating decoders for process `$paramod\uart_tx\DATA_WIDTH=s32'00000000000000000000000000001000.$proc$ice40/uart/uart_tx.v:65$594'.
Creating decoders for process `$paramod\uart_tx\DATA_WIDTH=s32'00000000000000000000000000001000.$proc$ice40/uart/uart_tx.v:63$593'.
Creating decoders for process `$paramod\uart_tx\DATA_WIDTH=s32'00000000000000000000000000001000.$proc$ice40/uart/uart_tx.v:78$579'.
     1/6: $0\data_reg[8:0]
     2/6: $0\prescale_reg[18:0]
     3/6: $0\txd_reg[0:0]
     4/6: $0\busy_reg[0:0]
     5/6: $0\bit_cnt[3:0]
     6/6: $0\input_axis_tready_reg[0:0]
Creating decoders for process `$paramod\uart_rx\DATA_WIDTH=s32'00000000000000000000000000001000.$proc$ice40/uart/uart_rx.v:77$578'.
Creating decoders for process `$paramod\uart_rx\DATA_WIDTH=s32'00000000000000000000000000001000.$proc$ice40/uart/uart_rx.v:76$577'.
Creating decoders for process `$paramod\uart_rx\DATA_WIDTH=s32'00000000000000000000000000001000.$proc$ice40/uart/uart_rx.v:75$576'.
Creating decoders for process `$paramod\uart_rx\DATA_WIDTH=s32'00000000000000000000000000001000.$proc$ice40/uart/uart_rx.v:73$575'.
Creating decoders for process `$paramod\uart_rx\DATA_WIDTH=s32'00000000000000000000000000001000.$proc$ice40/uart/uart_rx.v:72$574'.
Creating decoders for process `$paramod\uart_rx\DATA_WIDTH=s32'00000000000000000000000000001000.$proc$ice40/uart/uart_rx.v:71$573'.
Creating decoders for process `$paramod\uart_rx\DATA_WIDTH=s32'00000000000000000000000000001000.$proc$ice40/uart/uart_rx.v:69$572'.
Creating decoders for process `$paramod\uart_rx\DATA_WIDTH=s32'00000000000000000000000000001000.$proc$ice40/uart/uart_rx.v:67$571'.
Creating decoders for process `$paramod\uart_rx\DATA_WIDTH=s32'00000000000000000000000000001000.$proc$ice40/uart/uart_rx.v:66$570'.
Creating decoders for process `$paramod\uart_rx\DATA_WIDTH=s32'00000000000000000000000000001000.$proc$ice40/uart/uart_rx.v:86$551'.
     1/9: $0\frame_error_reg[0:0]
     2/9: $0\overrun_error_reg[0:0]
     3/9: $0\rxd_reg[0:0]
     4/9: $0\output_axis_tvalid_reg[0:0]
     5/9: $0\output_axis_tdata_reg[7:0]
     6/9: $0\bit_cnt[3:0]
     7/9: $0\prescale_reg[18:0]
     8/9: $0\data_reg[7:0]
     9/9: $0\busy_reg[0:0]
Creating decoders for process `\ssdec.$proc$source/ssdec.sv:0$122'.
     1/1: $1\segments[6:0]
Creating decoders for process `\ssdec.$proc$source/ssdec.sv:0$121'.
     1/1: $1\segments[13:7]
Creating decoders for process `\alu.$proc$source/alu.sv:0$84'.
     1/35: $1\new_result[8:0] [8]
     2/35: $1\int_sum_msd[3:0]
     3/35: $1\int_sum_lsd[3:0]
     4/35: $2\new_result[7:0] [7:4]
     5/35: $2\new_result[7:0] [3:0]
     6/35: $2\final_convert_carry[0:0]
     7/35: $2\convert_c_out[0:0]
     8/35: $2\carry_convert[3:0]
     9/35: $2\final_logic_convert[0:0]
    10/35: $2\max_logic_convert[0:0]
    11/35: $2\new_op2[8:0] [8]
    12/35: $2\new_op2[8:0] [3:0]
    13/35: $2\new_op2[8:0] [7:4]
    14/35: $1\result[8:0]
    15/35: $1\convert_c_out[0:0]
    16/35: $1\final_convert_carry[0:0]
    17/35: $1\final_logic_convert[0:0]
    18/35: $1\max_logic_convert[0:0]
    19/35: $1\int_msd_c[0:0]
    20/35: $1\carry_convert[3:0]
    21/35: $1\new_result[8:0] [7:0]
    22/35: $1\MSD_c_out[0:0]
    23/35: $1\MSD_final_c_out[0:0]
    24/35: $1\carry_msd[3:0]
    25/35: $1\final_logic_msd[0:0]
    26/35: $1\max_logic_msd[0:0]
    27/35: $1\int_lsd_c[0:0]
    28/35: $1\new_op1[7:4]
    29/35: $1\LSD_c_out[0:0]
    30/35: $1\LSD_final_c_out[0:0]
    31/35: $1\carry_lsd[3:0]
    32/35: $1\final_logic_lsd[0:0]
    33/35: $1\max_logic_lsd[0:0]
    34/35: $2\result[8:0]
    35/35: $1\new_op2[8:0]
Creating decoders for process `\alu.$proc$source/alu.sv:26$82'.
     1/5: $0\buff_opcode[2:0]
     2/5: $0\op2[8:0]
     3/5: $0\next_op2[8:0]
     4/5: $0\next_op1[8:0]
     5/5: $0\op1[8:0]
Creating decoders for process `\reg_file.$proc$source/reg_file.sv:0$81'.
     1/5: $1\next_reg_val[8:0]
     2/5: $1\next_reg1[8:0]
     3/5: $1\next_reg4[8:0]
     4/5: $1\next_reg3[8:0]
     5/5: $1\next_reg2[8:0]
Creating decoders for process `\reg_file.$proc$source/reg_file.sv:10$79'.
     1/5: $0\reg_val[8:0]
     2/5: $0\reg4[8:0]
     3/5: $0\reg3[8:0]
     4/5: $0\reg2[8:0]
     5/5: $0\reg1[8:0]
Creating decoders for process `\read_fsm.$proc$source/read_fsm.sv:0$78'.
     1/4: $1\assign_op1[0:0]
     2/4: $1\reg_sel[2:0]
     3/4: $1\assign_op2[0:0]
     4/4: $1\alu_en[0:0]
Creating decoders for process `\read_fsm.$proc$source/read_fsm.sv:0$74'.
     1/5: $5\next_state[2:0]
     2/5: $4\next_state[2:0]
     3/5: $3\next_state[2:0]
     4/5: $2\next_state[2:0]
     5/5: $1\next_state[2:0]
Creating decoders for process `\read_fsm.$proc$source/read_fsm.sv:14$72'.
     1/1: $0\state[2:0]
Creating decoders for process `\new_operand_buffer.$proc$source/new_operand_buffer.sv:0$71'.
     1/3: $3\next_ssdec[7:0]
     2/3: $2\next_ssdec[7:0]
     3/3: $1\next_ssdec[7:0]
Creating decoders for process `\new_operand_buffer.$proc$source/new_operand_buffer.sv:0$70'.
     1/2: $2\next_op1[8:0]
     2/2: $1\next_op1[8:0]
Creating decoders for process `\new_operand_buffer.$proc$source/new_operand_buffer.sv:15$68'.
     1/3: $0\sign[0:0]
     2/3: $0\ssdec[7:0]
     3/3: $0\op1[8:0]
Creating decoders for process `\register_decoder.$proc$source/register_decoder.sv:0$67'.
     1/2: $2\next_reg_num[2:0]
     2/2: $1\next_reg_num[2:0]
Creating decoders for process `\register_decoder.$proc$source/register_decoder.sv:0$62'.
     1/1: $1\is_reg[0:0]
Creating decoders for process `\register_decoder.$proc$source/register_decoder.sv:10$60'.
     1/4: $0\reg_num[2:0]
     2/4: $0\reg_i[3:0]
     3/4: $0\reg_sync[3:0]
     4/4: $0\reg_async[3:0]
Creating decoders for process `\fsm.$proc$source/fsm.sv:0$54'.
     1/9: $3\result_ready[0:0]
     2/9: $3\enter[0:0]
     3/9: $3\store_dig[0:0]
     4/9: $2\result_ready[0:0]
     5/9: $2\enter[0:0]
     6/9: $2\store_dig[0:0]
     7/9: $1\result_ready[0:0]
     8/9: $1\enter[0:0]
     9/9: $1\store_dig[0:0]
Creating decoders for process `\fsm.$proc$source/fsm.sv:0$51'.
     1/5: $5\next_state[2:0]
     2/5: $4\next_state[2:0]
     3/5: $3\next_state[2:0]
     4/5: $2\next_state[2:0]
     5/5: $1\next_state[2:0]
Creating decoders for process `\fsm.$proc$source/fsm.sv:10$49'.
     1/1: $0\state[2:0]
Creating decoders for process `\opcode_decoder.$proc$source/opcode_decoder.sv:0$48'.
     1/8: $2\is_enter[0:0]
     2/8: $2\is_result[0:0]
     3/8: $2\is_op[0:0]
     4/8: $2\next_out[2:0]
     5/8: $1\next_out[2:0]
     6/8: $1\is_op[0:0]
     7/8: $1\is_result[0:0]
     8/8: $1\is_enter[0:0]
Creating decoders for process `\opcode_decoder.$proc$source/opcode_decoder.sv:8$46'.
     1/1: $0\out[2:0]
Creating decoders for process `\digit_decoder.$proc$source/digit_decoder.sv:0$43'.
     1/2: $1\isdig[0:0]
     2/2: $1\next_digitCode[3:0]
Creating decoders for process `\digit_decoder.$proc$source/digit_decoder.sv:9$41'.
     1/1: $0\digitCode[3:0]
Creating decoders for process `\key_encoder.$proc$source/key_encoder.sv:0$40'.
     1/2: $2\keycode[3:0]
     2/2: $1\keycode[3:0]
Creating decoders for process `\key_encoder.$proc$source/key_encoder.sv:0$35'.
     1/1: $1\keystrobe[0:0]
Creating decoders for process `\key_encoder.$proc$source/key_encoder.sv:8$33'.
     1/3: $0\key_pad_i_13[12:0]
     2/3: $0\key_pad_sync_13[12:0]
     3/3: $0\key_pad_async_13[12:0]
Creating decoders for process `\reset_on_start.$proc$ice40/ice40hx8k.sv:129$23'.
Creating decoders for process `\reset_on_start.$proc$ice40/ice40hx8k.sv:131$16'.
     1/1: $0\startup[2:0]
Creating decoders for process `\ice40hx8k.$proc$ice40/ice40hx8k.sv:13$14'.
Creating decoders for process `\ice40hx8k.$proc$ice40/ice40hx8k.sv:12$13'.
Creating decoders for process `\ice40hx8k.$proc$ice40/ice40hx8k.sv:104$9'.
     1/1: $0\recv[0:0]
Creating decoders for process `\ice40hx8k.$proc$ice40/ice40hx8k.sv:98$7'.
     1/1: $0\xmit[0:0]
Creating decoders for process `\ice40hx8k.$proc$ice40/ice40hx8k.sv:14$1'.
     1/2: $0\ctr[15:0]
     2/2: $0\hz100[0:0]

16.3.8. Executing PROC_DLATCH pass (convert process syncs to latches).
No latch inferred for signal `\ssdec.\segments [6:0]' from process `\ssdec.$proc$source/ssdec.sv:0$122'.
No latch inferred for signal `\ssdec.\segments [13:7]' from process `\ssdec.$proc$source/ssdec.sv:0$121'.
No latch inferred for signal `\alu.\result' from process `\alu.$proc$source/alu.sv:0$84'.
No latch inferred for signal `\alu.\next_op1' from process `\alu.$proc$source/alu.sv:0$84'.
No latch inferred for signal `\alu.\int_sum_lsd' from process `\alu.$proc$source/alu.sv:0$84'.
No latch inferred for signal `\alu.\int_sum_msd' from process `\alu.$proc$source/alu.sv:0$84'.
No latch inferred for signal `\alu.\int_lsd_c' from process `\alu.$proc$source/alu.sv:0$84'.
No latch inferred for signal `\alu.\int_msd_c' from process `\alu.$proc$source/alu.sv:0$84'.
No latch inferred for signal `\alu.\final_logic_lsd' from process `\alu.$proc$source/alu.sv:0$84'.
No latch inferred for signal `\alu.\final_logic_msd' from process `\alu.$proc$source/alu.sv:0$84'.
No latch inferred for signal `\alu.\carry_lsd' from process `\alu.$proc$source/alu.sv:0$84'.
No latch inferred for signal `\alu.\carry_msd' from process `\alu.$proc$source/alu.sv:0$84'.
No latch inferred for signal `\alu.\carry_convert' from process `\alu.$proc$source/alu.sv:0$84'.
No latch inferred for signal `\alu.\max_logic_lsd' from process `\alu.$proc$source/alu.sv:0$84'.
No latch inferred for signal `\alu.\max_logic_msd' from process `\alu.$proc$source/alu.sv:0$84'.
No latch inferred for signal `\alu.\new_op1' from process `\alu.$proc$source/alu.sv:0$84'.
No latch inferred for signal `\alu.\new_op2' from process `\alu.$proc$source/alu.sv:0$84'.
No latch inferred for signal `\alu.\LSD_c_out' from process `\alu.$proc$source/alu.sv:0$84'.
No latch inferred for signal `\alu.\MSD_final_c_out' from process `\alu.$proc$source/alu.sv:0$84'.
No latch inferred for signal `\alu.\LSD_final_c_out' from process `\alu.$proc$source/alu.sv:0$84'.
No latch inferred for signal `\alu.\MSD_c_out' from process `\alu.$proc$source/alu.sv:0$84'.
No latch inferred for signal `\alu.\new_result' from process `\alu.$proc$source/alu.sv:0$84'.
No latch inferred for signal `\alu.\first_convert_carry' from process `\alu.$proc$source/alu.sv:0$84'.
No latch inferred for signal `\alu.\max_logic_convert' from process `\alu.$proc$source/alu.sv:0$84'.
No latch inferred for signal `\alu.\final_logic_convert' from process `\alu.$proc$source/alu.sv:0$84'.
No latch inferred for signal `\alu.\final_convert_carry' from process `\alu.$proc$source/alu.sv:0$84'.
No latch inferred for signal `\alu.\convert_c_out' from process `\alu.$proc$source/alu.sv:0$84'.
No latch inferred for signal `\alu.\next_op2' from process `\alu.$proc$source/alu.sv:0$84'.
No latch inferred for signal `\alu.\next_opcode' from process `\alu.$proc$source/alu.sv:0$84'.
No latch inferred for signal `\reg_file.\next_reg1' from process `\reg_file.$proc$source/reg_file.sv:0$81'.
No latch inferred for signal `\reg_file.\next_reg2' from process `\reg_file.$proc$source/reg_file.sv:0$81'.
No latch inferred for signal `\reg_file.\next_reg3' from process `\reg_file.$proc$source/reg_file.sv:0$81'.
No latch inferred for signal `\reg_file.\next_reg4' from process `\reg_file.$proc$source/reg_file.sv:0$81'.
No latch inferred for signal `\reg_file.\next_reg_val' from process `\reg_file.$proc$source/reg_file.sv:0$81'.
No latch inferred for signal `\read_fsm.\alu_en' from process `\read_fsm.$proc$source/read_fsm.sv:0$78'.
No latch inferred for signal `\read_fsm.\reg_sel' from process `\read_fsm.$proc$source/read_fsm.sv:0$78'.
No latch inferred for signal `\read_fsm.\assign_op1' from process `\read_fsm.$proc$source/read_fsm.sv:0$78'.
No latch inferred for signal `\read_fsm.\assign_op2' from process `\read_fsm.$proc$source/read_fsm.sv:0$78'.
No latch inferred for signal `\read_fsm.\next_state' from process `\read_fsm.$proc$source/read_fsm.sv:0$74'.
No latch inferred for signal `\new_operand_buffer.\next_ssdec' from process `\new_operand_buffer.$proc$source/new_operand_buffer.sv:0$71'.
No latch inferred for signal `\new_operand_buffer.\next_op1' from process `\new_operand_buffer.$proc$source/new_operand_buffer.sv:0$70'.
No latch inferred for signal `\new_operand_buffer.\next_sign' from process `\new_operand_buffer.$proc$source/new_operand_buffer.sv:0$70'.
No latch inferred for signal `\register_decoder.\next_reg_num' from process `\register_decoder.$proc$source/register_decoder.sv:0$67'.
No latch inferred for signal `\register_decoder.\is_reg' from process `\register_decoder.$proc$source/register_decoder.sv:0$62'.
No latch inferred for signal `\fsm.\store_dig' from process `\fsm.$proc$source/fsm.sv:0$54'.
No latch inferred for signal `\fsm.\enter' from process `\fsm.$proc$source/fsm.sv:0$54'.
No latch inferred for signal `\fsm.\result_ready' from process `\fsm.$proc$source/fsm.sv:0$54'.
No latch inferred for signal `\fsm.\next_state' from process `\fsm.$proc$source/fsm.sv:0$51'.
No latch inferred for signal `\opcode_decoder.\is_enter' from process `\opcode_decoder.$proc$source/opcode_decoder.sv:0$48'.
No latch inferred for signal `\opcode_decoder.\is_result' from process `\opcode_decoder.$proc$source/opcode_decoder.sv:0$48'.
No latch inferred for signal `\opcode_decoder.\is_op' from process `\opcode_decoder.$proc$source/opcode_decoder.sv:0$48'.
No latch inferred for signal `\opcode_decoder.\next_out' from process `\opcode_decoder.$proc$source/opcode_decoder.sv:0$48'.
No latch inferred for signal `\digit_decoder.\isdig' from process `\digit_decoder.$proc$source/digit_decoder.sv:0$43'.
No latch inferred for signal `\digit_decoder.\next_digitCode' from process `\digit_decoder.$proc$source/digit_decoder.sv:0$43'.
No latch inferred for signal `\key_encoder.\keycode' from process `\key_encoder.$proc$source/key_encoder.sv:0$40'.
No latch inferred for signal `\key_encoder.\keystrobe' from process `\key_encoder.$proc$source/key_encoder.sv:0$35'.

16.3.9. Executing PROC_DFF pass (convert process syncs to FFs).
Creating register for signal `\SB_DFFNES.\Q' using process `\SB_DFFNES.$proc$/home/shay/a/ece270/bin/../share/yosys/ice40/cells_sim.v:1414$411'.
  created $adff cell `$procdff$1363' with negative edge clock and positive level reset.
Creating register for signal `\SB_DFFNESS.\Q' using process `\SB_DFFNESS.$proc$/home/shay/a/ece270/bin/../share/yosys/ice40/cells_sim.v:1353$404'.
  created $dff cell `$procdff$1364' with negative edge clock.
Creating register for signal `\SB_DFFNER.\Q' using process `\SB_DFFNER.$proc$/home/shay/a/ece270/bin/../share/yosys/ice40/cells_sim.v:1273$400'.
  created $adff cell `$procdff$1365' with negative edge clock and positive level reset.
Creating register for signal `\SB_DFFNESR.\Q' using process `\SB_DFFNESR.$proc$/home/shay/a/ece270/bin/../share/yosys/ice40/cells_sim.v:1212$393'.
  created $dff cell `$procdff$1366' with negative edge clock.
Creating register for signal `\SB_DFFNS.\Q' using process `\SB_DFFNS.$proc$/home/shay/a/ece270/bin/../share/yosys/ice40/cells_sim.v:1138$390'.
  created $adff cell `$procdff$1367' with negative edge clock and positive level reset.
Creating register for signal `\SB_DFFNSS.\Q' using process `\SB_DFFNSS.$proc$/home/shay/a/ece270/bin/../share/yosys/ice40/cells_sim.v:1088$387'.
  created $dff cell `$procdff$1368' with negative edge clock.
Creating register for signal `\SB_DFFNR.\Q' using process `\SB_DFFNR.$proc$/home/shay/a/ece270/bin/../share/yosys/ice40/cells_sim.v:1017$384'.
  created $adff cell `$procdff$1369' with negative edge clock and positive level reset.
Creating register for signal `\SB_DFFNSR.\Q' using process `\SB_DFFNSR.$proc$/home/shay/a/ece270/bin/../share/yosys/ice40/cells_sim.v:967$381'.
  created $dff cell `$procdff$1370' with negative edge clock.
Creating register for signal `\SB_DFFNE.\Q' using process `\SB_DFFNE.$proc$/home/shay/a/ece270/bin/../share/yosys/ice40/cells_sim.v:922$379'.
  created $dff cell `$procdff$1371' with negative edge clock.
Creating register for signal `\SB_DFFN.\Q' using process `\SB_DFFN.$proc$/home/shay/a/ece270/bin/../share/yosys/ice40/cells_sim.v:882$377'.
  created $dff cell `$procdff$1372' with negative edge clock.
Creating register for signal `\SB_DFFES.\Q' using process `\SB_DFFES.$proc$/home/shay/a/ece270/bin/../share/yosys/ice40/cells_sim.v:803$373'.
  created $adff cell `$procdff$1373' with positive edge clock and positive level reset.
Creating register for signal `\SB_DFFESS.\Q' using process `\SB_DFFESS.$proc$/home/shay/a/ece270/bin/../share/yosys/ice40/cells_sim.v:742$366'.
  created $dff cell `$procdff$1374' with positive edge clock.
Creating register for signal `\SB_DFFER.\Q' using process `\SB_DFFER.$proc$/home/shay/a/ece270/bin/../share/yosys/ice40/cells_sim.v:662$362'.
  created $adff cell `$procdff$1375' with positive edge clock and positive level reset.
Creating register for signal `\SB_DFFESR.\Q' using process `\SB_DFFESR.$proc$/home/shay/a/ece270/bin/../share/yosys/ice40/cells_sim.v:601$355'.
  created $dff cell `$procdff$1376' with positive edge clock.
Creating register for signal `\SB_DFFS.\Q' using process `\SB_DFFS.$proc$/home/shay/a/ece270/bin/../share/yosys/ice40/cells_sim.v:527$352'.
  created $adff cell `$procdff$1377' with positive edge clock and positive level reset.
Creating register for signal `\SB_DFFSS.\Q' using process `\SB_DFFSS.$proc$/home/shay/a/ece270/bin/../share/yosys/ice40/cells_sim.v:477$349'.
  created $dff cell `$procdff$1378' with positive edge clock.
Creating register for signal `\SB_DFFR.\Q' using process `\SB_DFFR.$proc$/home/shay/a/ece270/bin/../share/yosys/ice40/cells_sim.v:406$346'.
  created $adff cell `$procdff$1379' with positive edge clock and positive level reset.
Creating register for signal `\SB_DFFSR.\Q' using process `\SB_DFFSR.$proc$/home/shay/a/ece270/bin/../share/yosys/ice40/cells_sim.v:356$343'.
  created $dff cell `$procdff$1380' with positive edge clock.
Creating register for signal `\SB_DFFE.\Q' using process `\SB_DFFE.$proc$/home/shay/a/ece270/bin/../share/yosys/ice40/cells_sim.v:311$341'.
  created $dff cell `$procdff$1381' with positive edge clock.
Creating register for signal `\SB_DFF.\Q' using process `\SB_DFF.$proc$/home/shay/a/ece270/bin/../share/yosys/ice40/cells_sim.v:271$339'.
  created $dff cell `$procdff$1382' with positive edge clock.
Creating register for signal `$paramod\uart_tx\DATA_WIDTH=s32'00000000000000000000000000001000.\input_axis_tready_reg' using process `$paramod\uart_tx\DATA_WIDTH=s32'00000000000000000000000000001000.$proc$ice40/uart/uart_tx.v:78$579'.
  created $dff cell `$procdff$1383' with positive edge clock.
Creating register for signal `$paramod\uart_tx\DATA_WIDTH=s32'00000000000000000000000000001000.\txd_reg' using process `$paramod\uart_tx\DATA_WIDTH=s32'00000000000000000000000000001000.$proc$ice40/uart/uart_tx.v:78$579'.
  created $dff cell `$procdff$1384' with positive edge clock.
Creating register for signal `$paramod\uart_tx\DATA_WIDTH=s32'00000000000000000000000000001000.\busy_reg' using process `$paramod\uart_tx\DATA_WIDTH=s32'00000000000000000000000000001000.$proc$ice40/uart/uart_tx.v:78$579'.
  created $dff cell `$procdff$1385' with positive edge clock.
Creating register for signal `$paramod\uart_tx\DATA_WIDTH=s32'00000000000000000000000000001000.\data_reg' using process `$paramod\uart_tx\DATA_WIDTH=s32'00000000000000000000000000001000.$proc$ice40/uart/uart_tx.v:78$579'.
  created $dff cell `$procdff$1386' with positive edge clock.
Creating register for signal `$paramod\uart_tx\DATA_WIDTH=s32'00000000000000000000000000001000.\prescale_reg' using process `$paramod\uart_tx\DATA_WIDTH=s32'00000000000000000000000000001000.$proc$ice40/uart/uart_tx.v:78$579'.
  created $dff cell `$procdff$1387' with positive edge clock.
Creating register for signal `$paramod\uart_tx\DATA_WIDTH=s32'00000000000000000000000000001000.\bit_cnt' using process `$paramod\uart_tx\DATA_WIDTH=s32'00000000000000000000000000001000.$proc$ice40/uart/uart_tx.v:78$579'.
  created $dff cell `$procdff$1388' with positive edge clock.
Creating register for signal `$paramod\uart_rx\DATA_WIDTH=s32'00000000000000000000000000001000.\busy_reg' using process `$paramod\uart_rx\DATA_WIDTH=s32'00000000000000000000000000001000.$proc$ice40/uart/uart_rx.v:86$551'.
  created $dff cell `$procdff$1389' with positive edge clock.
Creating register for signal `$paramod\uart_rx\DATA_WIDTH=s32'00000000000000000000000000001000.\data_reg' using process `$paramod\uart_rx\DATA_WIDTH=s32'00000000000000000000000000001000.$proc$ice40/uart/uart_rx.v:86$551'.
  created $dff cell `$procdff$1390' with positive edge clock.
Creating register for signal `$paramod\uart_rx\DATA_WIDTH=s32'00000000000000000000000000001000.\prescale_reg' using process `$paramod\uart_rx\DATA_WIDTH=s32'00000000000000000000000000001000.$proc$ice40/uart/uart_rx.v:86$551'.
  created $dff cell `$procdff$1391' with positive edge clock.
Creating register for signal `$paramod\uart_rx\DATA_WIDTH=s32'00000000000000000000000000001000.\bit_cnt' using process `$paramod\uart_rx\DATA_WIDTH=s32'00000000000000000000000000001000.$proc$ice40/uart/uart_rx.v:86$551'.
  created $dff cell `$procdff$1392' with positive edge clock.
Creating register for signal `$paramod\uart_rx\DATA_WIDTH=s32'00000000000000000000000000001000.\output_axis_tdata_reg' using process `$paramod\uart_rx\DATA_WIDTH=s32'00000000000000000000000000001000.$proc$ice40/uart/uart_rx.v:86$551'.
  created $dff cell `$procdff$1393' with positive edge clock.
Creating register for signal `$paramod\uart_rx\DATA_WIDTH=s32'00000000000000000000000000001000.\output_axis_tvalid_reg' using process `$paramod\uart_rx\DATA_WIDTH=s32'00000000000000000000000000001000.$proc$ice40/uart/uart_rx.v:86$551'.
  created $dff cell `$procdff$1394' with positive edge clock.
Creating register for signal `$paramod\uart_rx\DATA_WIDTH=s32'00000000000000000000000000001000.\rxd_reg' using process `$paramod\uart_rx\DATA_WIDTH=s32'00000000000000000000000000001000.$proc$ice40/uart/uart_rx.v:86$551'.
  created $dff cell `$procdff$1395' with positive edge clock.
Creating register for signal `$paramod\uart_rx\DATA_WIDTH=s32'00000000000000000000000000001000.\overrun_error_reg' using process `$paramod\uart_rx\DATA_WIDTH=s32'00000000000000000000000000001000.$proc$ice40/uart/uart_rx.v:86$551'.
  created $dff cell `$procdff$1396' with positive edge clock.
Creating register for signal `$paramod\uart_rx\DATA_WIDTH=s32'00000000000000000000000000001000.\frame_error_reg' using process `$paramod\uart_rx\DATA_WIDTH=s32'00000000000000000000000000001000.$proc$ice40/uart/uart_rx.v:86$551'.
  created $dff cell `$procdff$1397' with positive edge clock.
Creating register for signal `\alu.\op1' using process `\alu.$proc$source/alu.sv:26$82'.
  created $adff cell `$procdff$1398' with positive edge clock and negative level reset.
Creating register for signal `\alu.\next_op1' using process `\alu.$proc$source/alu.sv:26$82'.
  created $dff cell `$procdff$1401' with positive edge clock.
Creating register for signal `\alu.\next_op2' using process `\alu.$proc$source/alu.sv:26$82'.
  created $dff cell `$procdff$1404' with positive edge clock.
Creating register for signal `\alu.\op2' using process `\alu.$proc$source/alu.sv:26$82'.
  created $adff cell `$procdff$1405' with positive edge clock and negative level reset.
Creating register for signal `\alu.\buff_opcode' using process `\alu.$proc$source/alu.sv:26$82'.
  created $adff cell `$procdff$1406' with positive edge clock and negative level reset.
Creating register for signal `\reg_file.\reg_val' using process `\reg_file.$proc$source/reg_file.sv:10$79'.
  created $adff cell `$procdff$1407' with positive edge clock and negative level reset.
Creating register for signal `\reg_file.\reg1' using process `\reg_file.$proc$source/reg_file.sv:10$79'.
  created $adff cell `$procdff$1408' with positive edge clock and negative level reset.
Creating register for signal `\reg_file.\reg2' using process `\reg_file.$proc$source/reg_file.sv:10$79'.
  created $adff cell `$procdff$1409' with positive edge clock and negative level reset.
Creating register for signal `\reg_file.\reg3' using process `\reg_file.$proc$source/reg_file.sv:10$79'.
  created $adff cell `$procdff$1410' with positive edge clock and negative level reset.
Creating register for signal `\reg_file.\reg4' using process `\reg_file.$proc$source/reg_file.sv:10$79'.
  created $adff cell `$procdff$1411' with positive edge clock and negative level reset.
Creating register for signal `\read_fsm.\state' using process `\read_fsm.$proc$source/read_fsm.sv:14$72'.
  created $adff cell `$procdff$1412' with positive edge clock and negative level reset.
Creating register for signal `\new_operand_buffer.\sign' using process `\new_operand_buffer.$proc$source/new_operand_buffer.sv:15$68'.
  created $adff cell `$procdff$1413' with positive edge clock and negative level reset.
Creating register for signal `\new_operand_buffer.\op1' using process `\new_operand_buffer.$proc$source/new_operand_buffer.sv:15$68'.
  created $adff cell `$procdff$1414' with positive edge clock and negative level reset.
Creating register for signal `\new_operand_buffer.\ssdec' using process `\new_operand_buffer.$proc$source/new_operand_buffer.sv:15$68'.
  created $adff cell `$procdff$1415' with positive edge clock and negative level reset.
Creating register for signal `\register_decoder.\reg_num' using process `\register_decoder.$proc$source/register_decoder.sv:10$60'.
  created $adff cell `$procdff$1416' with positive edge clock and negative level reset.
Creating register for signal `\register_decoder.\reg_async' using process `\register_decoder.$proc$source/register_decoder.sv:10$60'.
  created $adff cell `$procdff$1417' with positive edge clock and negative level reset.
Creating register for signal `\register_decoder.\reg_sync' using process `\register_decoder.$proc$source/register_decoder.sv:10$60'.
  created $adff cell `$procdff$1418' with positive edge clock and negative level reset.
Creating register for signal `\register_decoder.\reg_i' using process `\register_decoder.$proc$source/register_decoder.sv:10$60'.
  created $adff cell `$procdff$1419' with positive edge clock and negative level reset.
Creating register for signal `\fsm.\state' using process `\fsm.$proc$source/fsm.sv:10$49'.
  created $adff cell `$procdff$1420' with positive edge clock and negative level reset.
Creating register for signal `\opcode_decoder.\out' using process `\opcode_decoder.$proc$source/opcode_decoder.sv:8$46'.
  created $adff cell `$procdff$1421' with positive edge clock and negative level reset.
Creating register for signal `\digit_decoder.\digitCode' using process `\digit_decoder.$proc$source/digit_decoder.sv:9$41'.
  created $adff cell `$procdff$1422' with positive edge clock and negative level reset.
Creating register for signal `\key_encoder.\key_pad_async_13' using process `\key_encoder.$proc$source/key_encoder.sv:8$33'.
  created $adff cell `$procdff$1423' with positive edge clock and negative level reset.
Creating register for signal `\key_encoder.\key_pad_sync_13' using process `\key_encoder.$proc$source/key_encoder.sv:8$33'.
  created $adff cell `$procdff$1424' with positive edge clock and negative level reset.
Creating register for signal `\key_encoder.\key_pad_i_13' using process `\key_encoder.$proc$source/key_encoder.sv:8$33'.
  created $adff cell `$procdff$1425' with positive edge clock and negative level reset.
Creating register for signal `\reset_on_start.\startup' using process `\reset_on_start.$proc$ice40/ice40hx8k.sv:131$16'.
  created $adff cell `$procdff$1426' with positive edge clock and positive level reset.
Creating register for signal `\ice40hx8k.\recv' using process `\ice40hx8k.$proc$ice40/ice40hx8k.sv:104$9'.
  created $adff cell `$procdff$1427' with positive edge clock and negative level reset.
Creating register for signal `\ice40hx8k.\xmit' using process `\ice40hx8k.$proc$ice40/ice40hx8k.sv:98$7'.
  created $adff cell `$procdff$1428' with positive edge clock and negative level reset.
Creating register for signal `\ice40hx8k.\ctr' using process `\ice40hx8k.$proc$ice40/ice40hx8k.sv:14$1'.
  created $dff cell `$procdff$1429' with positive edge clock.
Creating register for signal `\ice40hx8k.\hz100' using process `\ice40hx8k.$proc$ice40/ice40hx8k.sv:14$1'.
  created $dff cell `$procdff$1430' with positive edge clock.

16.3.10. Executing PROC_MEMWR pass (convert process memory writes to cells).

16.3.11. Executing PROC_CLEAN pass (remove empty switches from decision trees).
Removing empty process `SB_DFFNES.$proc$/home/shay/a/ece270/bin/../share/yosys/ice40/cells_sim.v:0$414'.
Found and cleaned up 1 empty switch in `\SB_DFFNES.$proc$/home/shay/a/ece270/bin/../share/yosys/ice40/cells_sim.v:1414$411'.
Removing empty process `SB_DFFNES.$proc$/home/shay/a/ece270/bin/../share/yosys/ice40/cells_sim.v:1414$411'.
Removing empty process `SB_DFFNESS.$proc$/home/shay/a/ece270/bin/../share/yosys/ice40/cells_sim.v:0$410'.
Found and cleaned up 2 empty switches in `\SB_DFFNESS.$proc$/home/shay/a/ece270/bin/../share/yosys/ice40/cells_sim.v:1353$404'.
Removing empty process `SB_DFFNESS.$proc$/home/shay/a/ece270/bin/../share/yosys/ice40/cells_sim.v:1353$404'.
Removing empty process `SB_DFFNER.$proc$/home/shay/a/ece270/bin/../share/yosys/ice40/cells_sim.v:0$403'.
Found and cleaned up 1 empty switch in `\SB_DFFNER.$proc$/home/shay/a/ece270/bin/../share/yosys/ice40/cells_sim.v:1273$400'.
Removing empty process `SB_DFFNER.$proc$/home/shay/a/ece270/bin/../share/yosys/ice40/cells_sim.v:1273$400'.
Removing empty process `SB_DFFNESR.$proc$/home/shay/a/ece270/bin/../share/yosys/ice40/cells_sim.v:0$399'.
Found and cleaned up 2 empty switches in `\SB_DFFNESR.$proc$/home/shay/a/ece270/bin/../share/yosys/ice40/cells_sim.v:1212$393'.
Removing empty process `SB_DFFNESR.$proc$/home/shay/a/ece270/bin/../share/yosys/ice40/cells_sim.v:1212$393'.
Removing empty process `SB_DFFNS.$proc$/home/shay/a/ece270/bin/../share/yosys/ice40/cells_sim.v:0$392'.
Removing empty process `SB_DFFNS.$proc$/home/shay/a/ece270/bin/../share/yosys/ice40/cells_sim.v:1138$390'.
Removing empty process `SB_DFFNSS.$proc$/home/shay/a/ece270/bin/../share/yosys/ice40/cells_sim.v:0$389'.
Found and cleaned up 1 empty switch in `\SB_DFFNSS.$proc$/home/shay/a/ece270/bin/../share/yosys/ice40/cells_sim.v:1088$387'.
Removing empty process `SB_DFFNSS.$proc$/home/shay/a/ece270/bin/../share/yosys/ice40/cells_sim.v:1088$387'.
Removing empty process `SB_DFFNR.$proc$/home/shay/a/ece270/bin/../share/yosys/ice40/cells_sim.v:0$386'.
Removing empty process `SB_DFFNR.$proc$/home/shay/a/ece270/bin/../share/yosys/ice40/cells_sim.v:1017$384'.
Removing empty process `SB_DFFNSR.$proc$/home/shay/a/ece270/bin/../share/yosys/ice40/cells_sim.v:0$383'.
Found and cleaned up 1 empty switch in `\SB_DFFNSR.$proc$/home/shay/a/ece270/bin/../share/yosys/ice40/cells_sim.v:967$381'.
Removing empty process `SB_DFFNSR.$proc$/home/shay/a/ece270/bin/../share/yosys/ice40/cells_sim.v:967$381'.
Removing empty process `SB_DFFNE.$proc$/home/shay/a/ece270/bin/../share/yosys/ice40/cells_sim.v:0$380'.
Found and cleaned up 1 empty switch in `\SB_DFFNE.$proc$/home/shay/a/ece270/bin/../share/yosys/ice40/cells_sim.v:922$379'.
Removing empty process `SB_DFFNE.$proc$/home/shay/a/ece270/bin/../share/yosys/ice40/cells_sim.v:922$379'.
Removing empty process `SB_DFFN.$proc$/home/shay/a/ece270/bin/../share/yosys/ice40/cells_sim.v:0$378'.
Removing empty process `SB_DFFN.$proc$/home/shay/a/ece270/bin/../share/yosys/ice40/cells_sim.v:882$377'.
Removing empty process `SB_DFFES.$proc$/home/shay/a/ece270/bin/../share/yosys/ice40/cells_sim.v:0$376'.
Found and cleaned up 1 empty switch in `\SB_DFFES.$proc$/home/shay/a/ece270/bin/../share/yosys/ice40/cells_sim.v:803$373'.
Removing empty process `SB_DFFES.$proc$/home/shay/a/ece270/bin/../share/yosys/ice40/cells_sim.v:803$373'.
Removing empty process `SB_DFFESS.$proc$/home/shay/a/ece270/bin/../share/yosys/ice40/cells_sim.v:0$372'.
Found and cleaned up 2 empty switches in `\SB_DFFESS.$proc$/home/shay/a/ece270/bin/../share/yosys/ice40/cells_sim.v:742$366'.
Removing empty process `SB_DFFESS.$proc$/home/shay/a/ece270/bin/../share/yosys/ice40/cells_sim.v:742$366'.
Removing empty process `SB_DFFER.$proc$/home/shay/a/ece270/bin/../share/yosys/ice40/cells_sim.v:0$365'.
Found and cleaned up 1 empty switch in `\SB_DFFER.$proc$/home/shay/a/ece270/bin/../share/yosys/ice40/cells_sim.v:662$362'.
Removing empty process `SB_DFFER.$proc$/home/shay/a/ece270/bin/../share/yosys/ice40/cells_sim.v:662$362'.
Removing empty process `SB_DFFESR.$proc$/home/shay/a/ece270/bin/../share/yosys/ice40/cells_sim.v:0$361'.
Found and cleaned up 2 empty switches in `\SB_DFFESR.$proc$/home/shay/a/ece270/bin/../share/yosys/ice40/cells_sim.v:601$355'.
Removing empty process `SB_DFFESR.$proc$/home/shay/a/ece270/bin/../share/yosys/ice40/cells_sim.v:601$355'.
Removing empty process `SB_DFFS.$proc$/home/shay/a/ece270/bin/../share/yosys/ice40/cells_sim.v:0$354'.
Removing empty process `SB_DFFS.$proc$/home/shay/a/ece270/bin/../share/yosys/ice40/cells_sim.v:527$352'.
Removing empty process `SB_DFFSS.$proc$/home/shay/a/ece270/bin/../share/yosys/ice40/cells_sim.v:0$351'.
Found and cleaned up 1 empty switch in `\SB_DFFSS.$proc$/home/shay/a/ece270/bin/../share/yosys/ice40/cells_sim.v:477$349'.
Removing empty process `SB_DFFSS.$proc$/home/shay/a/ece270/bin/../share/yosys/ice40/cells_sim.v:477$349'.
Removing empty process `SB_DFFR.$proc$/home/shay/a/ece270/bin/../share/yosys/ice40/cells_sim.v:0$348'.
Removing empty process `SB_DFFR.$proc$/home/shay/a/ece270/bin/../share/yosys/ice40/cells_sim.v:406$346'.
Removing empty process `SB_DFFSR.$proc$/home/shay/a/ece270/bin/../share/yosys/ice40/cells_sim.v:0$345'.
Found and cleaned up 1 empty switch in `\SB_DFFSR.$proc$/home/shay/a/ece270/bin/../share/yosys/ice40/cells_sim.v:356$343'.
Removing empty process `SB_DFFSR.$proc$/home/shay/a/ece270/bin/../share/yosys/ice40/cells_sim.v:356$343'.
Removing empty process `SB_DFFE.$proc$/home/shay/a/ece270/bin/../share/yosys/ice40/cells_sim.v:0$342'.
Found and cleaned up 1 empty switch in `\SB_DFFE.$proc$/home/shay/a/ece270/bin/../share/yosys/ice40/cells_sim.v:311$341'.
Removing empty process `SB_DFFE.$proc$/home/shay/a/ece270/bin/../share/yosys/ice40/cells_sim.v:311$341'.
Removing empty process `SB_DFF.$proc$/home/shay/a/ece270/bin/../share/yosys/ice40/cells_sim.v:0$340'.
Removing empty process `SB_DFF.$proc$/home/shay/a/ece270/bin/../share/yosys/ice40/cells_sim.v:271$339'.
Removing empty process `$paramod\uart_tx\DATA_WIDTH=s32'00000000000000000000000000001000.$proc$ice40/uart/uart_tx.v:71$598'.
Removing empty process `$paramod\uart_tx\DATA_WIDTH=s32'00000000000000000000000000001000.$proc$ice40/uart/uart_tx.v:70$597'.
Removing empty process `$paramod\uart_tx\DATA_WIDTH=s32'00000000000000000000000000001000.$proc$ice40/uart/uart_tx.v:69$596'.
Removing empty process `$paramod\uart_tx\DATA_WIDTH=s32'00000000000000000000000000001000.$proc$ice40/uart/uart_tx.v:67$595'.
Removing empty process `$paramod\uart_tx\DATA_WIDTH=s32'00000000000000000000000000001000.$proc$ice40/uart/uart_tx.v:65$594'.
Removing empty process `$paramod\uart_tx\DATA_WIDTH=s32'00000000000000000000000000001000.$proc$ice40/uart/uart_tx.v:63$593'.
Found and cleaned up 6 empty switches in `$paramod\uart_tx\DATA_WIDTH=s32'00000000000000000000000000001000.$proc$ice40/uart/uart_tx.v:78$579'.
Removing empty process `$paramod\uart_tx\DATA_WIDTH=s32'00000000000000000000000000001000.$proc$ice40/uart/uart_tx.v:78$579'.
Removing empty process `$paramod\uart_rx\DATA_WIDTH=s32'00000000000000000000000000001000.$proc$ice40/uart/uart_rx.v:77$578'.
Removing empty process `$paramod\uart_rx\DATA_WIDTH=s32'00000000000000000000000000001000.$proc$ice40/uart/uart_rx.v:76$577'.
Removing empty process `$paramod\uart_rx\DATA_WIDTH=s32'00000000000000000000000000001000.$proc$ice40/uart/uart_rx.v:75$576'.
Removing empty process `$paramod\uart_rx\DATA_WIDTH=s32'00000000000000000000000000001000.$proc$ice40/uart/uart_rx.v:73$575'.
Removing empty process `$paramod\uart_rx\DATA_WIDTH=s32'00000000000000000000000000001000.$proc$ice40/uart/uart_rx.v:72$574'.
Removing empty process `$paramod\uart_rx\DATA_WIDTH=s32'00000000000000000000000000001000.$proc$ice40/uart/uart_rx.v:71$573'.
Removing empty process `$paramod\uart_rx\DATA_WIDTH=s32'00000000000000000000000000001000.$proc$ice40/uart/uart_rx.v:69$572'.
Removing empty process `$paramod\uart_rx\DATA_WIDTH=s32'00000000000000000000000000001000.$proc$ice40/uart/uart_rx.v:67$571'.
Removing empty process `$paramod\uart_rx\DATA_WIDTH=s32'00000000000000000000000000001000.$proc$ice40/uart/uart_rx.v:66$570'.
Found and cleaned up 10 empty switches in `$paramod\uart_rx\DATA_WIDTH=s32'00000000000000000000000000001000.$proc$ice40/uart/uart_rx.v:86$551'.
Removing empty process `$paramod\uart_rx\DATA_WIDTH=s32'00000000000000000000000000001000.$proc$ice40/uart/uart_rx.v:86$551'.
Found and cleaned up 1 empty switch in `\ssdec.$proc$source/ssdec.sv:0$122'.
Removing empty process `ssdec.$proc$source/ssdec.sv:0$122'.
Found and cleaned up 1 empty switch in `\ssdec.$proc$source/ssdec.sv:0$121'.
Removing empty process `ssdec.$proc$source/ssdec.sv:0$121'.
Found and cleaned up 4 empty switches in `\alu.$proc$source/alu.sv:0$84'.
Removing empty process `alu.$proc$source/alu.sv:0$84'.
Found and cleaned up 2 empty switches in `\alu.$proc$source/alu.sv:26$82'.
Removing empty process `alu.$proc$source/alu.sv:26$82'.
Found and cleaned up 2 empty switches in `\reg_file.$proc$source/reg_file.sv:0$81'.
Removing empty process `reg_file.$proc$source/reg_file.sv:0$81'.
Removing empty process `reg_file.$proc$source/reg_file.sv:10$79'.
Found and cleaned up 1 empty switch in `\read_fsm.$proc$source/read_fsm.sv:0$78'.
Removing empty process `read_fsm.$proc$source/read_fsm.sv:0$78'.
Found and cleaned up 5 empty switches in `\read_fsm.$proc$source/read_fsm.sv:0$74'.
Removing empty process `read_fsm.$proc$source/read_fsm.sv:0$74'.
Removing empty process `read_fsm.$proc$source/read_fsm.sv:14$72'.
Found and cleaned up 3 empty switches in `\new_operand_buffer.$proc$source/new_operand_buffer.sv:0$71'.
Removing empty process `new_operand_buffer.$proc$source/new_operand_buffer.sv:0$71'.
Found and cleaned up 2 empty switches in `\new_operand_buffer.$proc$source/new_operand_buffer.sv:0$70'.
Removing empty process `new_operand_buffer.$proc$source/new_operand_buffer.sv:0$70'.
Removing empty process `new_operand_buffer.$proc$source/new_operand_buffer.sv:15$68'.
Found and cleaned up 2 empty switches in `\register_decoder.$proc$source/register_decoder.sv:0$67'.
Removing empty process `register_decoder.$proc$source/register_decoder.sv:0$67'.
Found and cleaned up 1 empty switch in `\register_decoder.$proc$source/register_decoder.sv:0$62'.
Removing empty process `register_decoder.$proc$source/register_decoder.sv:0$62'.
Removing empty process `register_decoder.$proc$source/register_decoder.sv:10$60'.
Found and cleaned up 3 empty switches in `\fsm.$proc$source/fsm.sv:0$54'.
Removing empty process `fsm.$proc$source/fsm.sv:0$54'.
Found and cleaned up 5 empty switches in `\fsm.$proc$source/fsm.sv:0$51'.
Removing empty process `fsm.$proc$source/fsm.sv:0$51'.
Removing empty process `fsm.$proc$source/fsm.sv:10$49'.
Found and cleaned up 2 empty switches in `\opcode_decoder.$proc$source/opcode_decoder.sv:0$48'.
Removing empty process `opcode_decoder.$proc$source/opcode_decoder.sv:0$48'.
Removing empty process `opcode_decoder.$proc$source/opcode_decoder.sv:8$46'.
Found and cleaned up 1 empty switch in `\digit_decoder.$proc$source/digit_decoder.sv:0$43'.
Removing empty process `digit_decoder.$proc$source/digit_decoder.sv:0$43'.
Removing empty process `digit_decoder.$proc$source/digit_decoder.sv:9$41'.
Found and cleaned up 2 empty switches in `\key_encoder.$proc$source/key_encoder.sv:0$40'.
Removing empty process `key_encoder.$proc$source/key_encoder.sv:0$40'.
Found and cleaned up 1 empty switch in `\key_encoder.$proc$source/key_encoder.sv:0$35'.
Removing empty process `key_encoder.$proc$source/key_encoder.sv:0$35'.
Removing empty process `key_encoder.$proc$source/key_encoder.sv:8$33'.
Removing empty process `reset_on_start.$proc$ice40/ice40hx8k.sv:129$23'.
Found and cleaned up 5 empty switches in `\reset_on_start.$proc$ice40/ice40hx8k.sv:131$16'.
Removing empty process `reset_on_start.$proc$ice40/ice40hx8k.sv:131$16'.
Removing empty process `ice40hx8k.$proc$ice40/ice40hx8k.sv:13$14'.
Removing empty process `ice40hx8k.$proc$ice40/ice40hx8k.sv:12$13'.
Removing empty process `ice40hx8k.$proc$ice40/ice40hx8k.sv:104$9'.
Removing empty process `ice40hx8k.$proc$ice40/ice40hx8k.sv:98$7'.
Found and cleaned up 1 empty switch in `\ice40hx8k.$proc$ice40/ice40hx8k.sv:14$1'.
Removing empty process `ice40hx8k.$proc$ice40/ice40hx8k.sv:14$1'.
Cleaned up 78 empty switches.

16.3.12. Executing OPT_EXPR pass (perform const folding).
Optimizing module $paramod\uart_tx\DATA_WIDTH=s32'00000000000000000000000000001000.
<suppressed ~4 debug messages>
Optimizing module $paramod\uart_rx\DATA_WIDTH=s32'00000000000000000000000000001000.
<suppressed ~9 debug messages>
Optimizing module uart.
Optimizing module ssdec.
Optimizing module alu.
<suppressed ~5 debug messages>
Optimizing module reg_file.
Optimizing module read_fsm.
<suppressed ~2 debug messages>
Optimizing module new_operand_buffer.
Optimizing module register_decoder.
<suppressed ~1 debug messages>
Optimizing module fsm.
<suppressed ~3 debug messages>
Optimizing module opcode_decoder.
<suppressed ~1 debug messages>
Optimizing module digit_decoder.
<suppressed ~1 debug messages>
Optimizing module key_encoder.
<suppressed ~1 debug messages>
Optimizing module top.
Optimizing module reset_on_start.
<suppressed ~2 debug messages>
Optimizing module ice40hx8k.

16.4. Executing FLATTEN pass (flatten design).
Deleting now unused module $paramod\uart_tx\DATA_WIDTH=s32'00000000000000000000000000001000.
Deleting now unused module $paramod\uart_rx\DATA_WIDTH=s32'00000000000000000000000000001000.
Deleting now unused module uart.
Deleting now unused module ssdec.
Deleting now unused module alu.
Deleting now unused module reg_file.
Deleting now unused module read_fsm.
Deleting now unused module new_operand_buffer.
Deleting now unused module register_decoder.
Deleting now unused module fsm.
Deleting now unused module opcode_decoder.
Deleting now unused module digit_decoder.
Deleting now unused module key_encoder.
Deleting now unused module top.
Deleting now unused module reset_on_start.
<suppressed ~15 debug messages>

16.5. Executing TRIBUF pass.

16.6. Executing DEMINOUT pass (demote inout ports to input or output).

16.7. Executing OPT_EXPR pass (perform const folding).
Optimizing module ice40hx8k.
<suppressed ~54 debug messages>

16.8. Executing OPT_CLEAN pass (remove unused cells and wires).
Finding unused cells or wires in module \ice40hx8k..
Removed 172 unused cells and 697 unused wires.
<suppressed ~259 debug messages>

16.9. Executing CHECK pass (checking for obvious problems).
Checking module ice40hx8k...
Warning: Wire ice40hx8k.\ss7 [7] is used but has no driver.
Warning: Wire ice40hx8k.\ss7 [6] is used but has no driver.
Warning: Wire ice40hx8k.\ss7 [5] is used but has no driver.
Warning: Wire ice40hx8k.\ss7 [4] is used but has no driver.
Warning: Wire ice40hx8k.\ss7 [3] is used but has no driver.
Warning: Wire ice40hx8k.\ss7 [2] is used but has no driver.
Warning: Wire ice40hx8k.\ss7 [1] is used but has no driver.
Warning: Wire ice40hx8k.\ss7 [0] is used but has no driver.
Warning: Wire ice40hx8k.\ss6 [7] is used but has no driver.
Warning: Wire ice40hx8k.\ss6 [6] is used but has no driver.
Warning: Wire ice40hx8k.\ss6 [5] is used but has no driver.
Warning: Wire ice40hx8k.\ss6 [4] is used but has no driver.
Warning: Wire ice40hx8k.\ss6 [3] is used but has no driver.
Warning: Wire ice40hx8k.\ss6 [2] is used but has no driver.
Warning: Wire ice40hx8k.\ss6 [1] is used but has no driver.
Warning: Wire ice40hx8k.\ss6 [0] is used but has no driver.
Warning: Wire ice40hx8k.\ss5 [7] is used but has no driver.
Warning: Wire ice40hx8k.\ss5 [6] is used but has no driver.
Warning: Wire ice40hx8k.\ss5 [5] is used but has no driver.
Warning: Wire ice40hx8k.\ss5 [4] is used but has no driver.
Warning: Wire ice40hx8k.\ss5 [3] is used but has no driver.
Warning: Wire ice40hx8k.\ss5 [2] is used but has no driver.
Warning: Wire ice40hx8k.\ss5 [1] is used but has no driver.
Warning: Wire ice40hx8k.\ss5 [0] is used but has no driver.
Warning: Wire ice40hx8k.\ss4 [7] is used but has no driver.
Warning: Wire ice40hx8k.\ss4 [6] is used but has no driver.
Warning: Wire ice40hx8k.\ss4 [5] is used but has no driver.
Warning: Wire ice40hx8k.\ss4 [4] is used but has no driver.
Warning: Wire ice40hx8k.\ss4 [3] is used but has no driver.
Warning: Wire ice40hx8k.\ss4 [2] is used but has no driver.
Warning: Wire ice40hx8k.\ss4 [1] is used but has no driver.
Warning: Wire ice40hx8k.\ss4 [0] is used but has no driver.
Warning: Wire ice40hx8k.\ss3 [7] is used but has no driver.
Warning: Wire ice40hx8k.\ss3 [6] is used but has no driver.
Warning: Wire ice40hx8k.\ss3 [5] is used but has no driver.
Warning: Wire ice40hx8k.\ss3 [4] is used but has no driver.
Warning: Wire ice40hx8k.\ss3 [3] is used but has no driver.
Warning: Wire ice40hx8k.\ss3 [2] is used but has no driver.
Warning: Wire ice40hx8k.\ss3 [1] is used but has no driver.
Warning: Wire ice40hx8k.\ss3 [0] is used but has no driver.
Warning: Wire ice40hx8k.\ss2 [7] is used but has no driver.
Warning: Wire ice40hx8k.\ss2 [6] is used but has no driver.
Warning: Wire ice40hx8k.\ss2 [5] is used but has no driver.
Warning: Wire ice40hx8k.\ss2 [4] is used but has no driver.
Warning: Wire ice40hx8k.\ss2 [3] is used but has no driver.
Warning: Wire ice40hx8k.\ss2 [2] is used but has no driver.
Warning: Wire ice40hx8k.\ss2 [1] is used but has no driver.
Warning: Wire ice40hx8k.\ss2 [0] is used but has no driver.
Warning: Wire ice40hx8k.\ss1 [7] is used but has no driver.
Warning: Wire ice40hx8k.\ss0 [7] is used but has no driver.
Warning: Wire ice40hx8k.\right [7] is used but has no driver.
Warning: Wire ice40hx8k.\right [6] is used but has no driver.
Warning: Wire ice40hx8k.\right [5] is used but has no driver.
Warning: Wire ice40hx8k.\right [4] is used but has no driver.
Warning: Wire ice40hx8k.\right [3] is used but has no driver.
Warning: Wire ice40hx8k.\right [2] is used but has no driver.
Warning: Wire ice40hx8k.\right [1] is used but has no driver.
Warning: Wire ice40hx8k.\right [0] is used but has no driver.
Warning: Wire ice40hx8k.\left [7] is used but has no driver.
Warning: Wire ice40hx8k.\left [6] is used but has no driver.
Warning: Wire ice40hx8k.\left [5] is used but has no driver.
Warning: Wire ice40hx8k.\left [4] is used but has no driver.
Warning: Wire ice40hx8k.\left [3] is used but has no driver.
Warning: Wire ice40hx8k.\left [2] is used but has no driver.
Warning: Wire ice40hx8k.\left [1] is used but has no driver.
Warning: Wire ice40hx8k.\left [0] is used but has no driver.
Warning: Wire ice40hx8k.\green is used but has no driver.
Warning: Wire ice40hx8k.\blue is used but has no driver.
Warning: Wire ice40hx8k.\txclk is used but has no driver.
Warning: Wire ice40hx8k.\uart_inst.uart_tx_inst.input_axis_tdata [7] is used but has no driver.
Warning: Wire ice40hx8k.\uart_inst.uart_tx_inst.input_axis_tdata [6] is used but has no driver.
Warning: Wire ice40hx8k.\uart_inst.uart_tx_inst.input_axis_tdata [5] is used but has no driver.
Warning: Wire ice40hx8k.\uart_inst.uart_tx_inst.input_axis_tdata [4] is used but has no driver.
Warning: Wire ice40hx8k.\uart_inst.uart_tx_inst.input_axis_tdata [3] is used but has no driver.
Warning: Wire ice40hx8k.\uart_inst.uart_tx_inst.input_axis_tdata [2] is used but has no driver.
Warning: Wire ice40hx8k.\uart_inst.uart_tx_inst.input_axis_tdata [1] is used but has no driver.
Warning: Wire ice40hx8k.\uart_inst.uart_tx_inst.input_axis_tdata [0] is used but has no driver.
Warning: Wire ice40hx8k.\top_inst.u8.next_buff_opcode [2] is used but has no driver.
Warning: Wire ice40hx8k.\top_inst.u8.next_buff_opcode [1] is used but has no driver.
Warning: Wire ice40hx8k.\top_inst.u8.next_buff_opcode [0] is used but has no driver.
Warning: Wire ice40hx8k.\top_inst.r_en is used but has no driver.
Found and reported 81 problems.

16.10. Executing OPT pass (performing simple optimizations).

16.10.1. Executing OPT_EXPR pass (perform const folding).
Optimizing module ice40hx8k.

16.10.2. Executing OPT_MERGE pass (detect identical cells).
Finding identical cells in module `\ice40hx8k'.
<suppressed ~60 debug messages>
Removed a total of 20 cells.

16.10.3. Executing OPT_MUXTREE pass (detect dead branches in mux trees).
Running muxtree optimizer on module \ice40hx8k..
  Creating internal representation of mux trees.
  Evaluating internal representation of mux trees.
  Analyzing evaluation results.
    dead port 2/2 on $mux $flatten\top_inst.\u1.$procmux$1335.
    dead port 1/2 on $mux $flatten\top_inst.\u10.$procmux$1173.
    dead port 1/2 on $mux $flatten\top_inst.\u10.$procmux$1176.
    dead port 1/2 on $mux $flatten\top_inst.\u10.$procmux$1189.
    dead port 1/2 on $mux $flatten\top_inst.\u10.$procmux$1192.
    dead port 1/2 on $mux $flatten\top_inst.\u10.$procmux$1198.
    dead port 1/2 on $mux $flatten\top_inst.\u10.$procmux$1210.
    dead port 1/2 on $mux $flatten\top_inst.\u10.$procmux$1228.
    dead port 2/2 on $mux $flatten\top_inst.\u10.$procmux$1230.
    dead port 2/2 on $mux $flatten\top_inst.\u10.$procmux$1238.
    dead port 2/2 on $mux $flatten\top_inst.\u10.$procmux$1248.
    dead port 2/2 on $mux $flatten\top_inst.\u10.$procmux$1260.
    dead port 2/2 on $mux $flatten\top_inst.\u3.$procmux$1283.
    dead port 2/2 on $mux $flatten\top_inst.\u3.$procmux$1291.
    dead port 2/2 on $mux $flatten\top_inst.\u3.$procmux$1299.
    dead port 2/2 on $mux $flatten\top_inst.\u4.$procmux$1161.
    dead port 1/2 on $mux $flatten\top_inst.\u5.$procmux$1131.
    dead port 1/2 on $mux $flatten\top_inst.\u5.$procmux$1134.
    dead port 1/2 on $mux $flatten\top_inst.\u5.$procmux$1140.
    dead port 1/2 on $mux $flatten\top_inst.\u5.$procmux$1149.
    dead port 2/2 on $mux $flatten\top_inst.\u6.$procmux$1084.
    dead port 2/2 on $mux $flatten\top_inst.\u6.$procmux$1093.
    dead port 2/2 on $mux $flatten\top_inst.\u6.$procmux$1104.
    dead port 2/2 on $mux $flatten\top_inst.\u6.$procmux$1116.
    dead port 2/2 on $mux $flatten\top_inst.\u8.$procmux$1025.
Removed 25 multiplexer ports.
<suppressed ~28 debug messages>

16.10.4. Executing OPT_REDUCE pass (consolidate $*mux and $reduce_* inputs).
  Optimizing cells in module \ice40hx8k.
    New ctrl vector for $pmux cell $flatten\top_inst.\u10.$procmux$1263: { $flatten\top_inst.\u10.$procmux$1261_CMP $flatten\top_inst.\u10.$eq$source/fsm.sv:82$55_Y $flatten\top_inst.\u10.$procmux$1249_CMP $flatten\top_inst.\u10.$eq$source/fsm.sv:82$56_Y $flatten\top_inst.\u10.$procmux$1231_CMP $auto$opt_reduce.cc:134:opt_pmux$1432 }
    New ctrl vector for $pmux cell $flatten\top_inst.\u3.$procmux$1280: $auto$opt_reduce.cc:134:opt_pmux$1434
    New ctrl vector for $pmux cell $flatten\top_inst.\u3.$procmux$1287: $auto$opt_reduce.cc:134:opt_pmux$1436
  Optimizing cells in module \ice40hx8k.
Performed a total of 4 changes.

16.10.5. Executing OPT_MERGE pass (detect identical cells).
Finding identical cells in module `\ice40hx8k'.
Removed a total of 0 cells.

16.10.6. Executing OPT_DFF pass (perform DFF optimizations).
Handling D = Q on $flatten\top_inst.\u8.$procdff$1405 ($adff) from module ice40hx8k (removing D path).
Handling D = Q on $flatten\top_inst.\u8.$procdff$1398 ($adff) from module ice40hx8k (removing D path).
Setting constant 0-bit at position 0 on $flatten\top_inst.\u8.$procdff$1398 ($dlatch) from module ice40hx8k.
Setting constant 0-bit at position 1 on $flatten\top_inst.\u8.$procdff$1398 ($dlatch) from module ice40hx8k.
Setting constant 0-bit at position 2 on $flatten\top_inst.\u8.$procdff$1398 ($dlatch) from module ice40hx8k.
Setting constant 0-bit at position 3 on $flatten\top_inst.\u8.$procdff$1398 ($dlatch) from module ice40hx8k.
Setting constant 0-bit at position 4 on $flatten\top_inst.\u8.$procdff$1398 ($dlatch) from module ice40hx8k.
Setting constant 0-bit at position 5 on $flatten\top_inst.\u8.$procdff$1398 ($dlatch) from module ice40hx8k.
Setting constant 0-bit at position 6 on $flatten\top_inst.\u8.$procdff$1398 ($dlatch) from module ice40hx8k.
Setting constant 0-bit at position 7 on $flatten\top_inst.\u8.$procdff$1398 ($dlatch) from module ice40hx8k.
Setting constant 0-bit at position 8 on $flatten\top_inst.\u8.$procdff$1398 ($dlatch) from module ice40hx8k.
Setting constant 0-bit at position 0 on $flatten\top_inst.\u8.$procdff$1405 ($dlatch) from module ice40hx8k.
Setting constant 0-bit at position 1 on $flatten\top_inst.\u8.$procdff$1405 ($dlatch) from module ice40hx8k.
Setting constant 0-bit at position 2 on $flatten\top_inst.\u8.$procdff$1405 ($dlatch) from module ice40hx8k.
Setting constant 0-bit at position 3 on $flatten\top_inst.\u8.$procdff$1405 ($dlatch) from module ice40hx8k.
Setting constant 0-bit at position 4 on $flatten\top_inst.\u8.$procdff$1405 ($dlatch) from module ice40hx8k.
Setting constant 0-bit at position 5 on $flatten\top_inst.\u8.$procdff$1405 ($dlatch) from module ice40hx8k.
Setting constant 0-bit at position 6 on $flatten\top_inst.\u8.$procdff$1405 ($dlatch) from module ice40hx8k.
Setting constant 0-bit at position 7 on $flatten\top_inst.\u8.$procdff$1405 ($dlatch) from module ice40hx8k.
Setting constant 0-bit at position 8 on $flatten\top_inst.\u8.$procdff$1405 ($dlatch) from module ice40hx8k.

16.10.7. Executing OPT_CLEAN pass (remove unused cells and wires).
Finding unused cells or wires in module \ice40hx8k..
Removed 0 unused cells and 46 unused wires.
<suppressed ~1 debug messages>

16.10.8. Executing OPT_EXPR pass (perform const folding).
Optimizing module ice40hx8k.
<suppressed ~6 debug messages>

16.10.9. Rerunning OPT passes. (Maybe there is more to do..)

16.10.10. Executing OPT_MUXTREE pass (detect dead branches in mux trees).
Running muxtree optimizer on module \ice40hx8k..
  Creating internal representation of mux trees.
  Evaluating internal representation of mux trees.
  Analyzing evaluation results.
Removed 0 multiplexer ports.
<suppressed ~28 debug messages>

16.10.11. Executing OPT_REDUCE pass (consolidate $*mux and $reduce_* inputs).
  Optimizing cells in module \ice40hx8k.
Performed a total of 0 changes.

16.10.12. Executing OPT_MERGE pass (detect identical cells).
Finding identical cells in module `\ice40hx8k'.
Removed a total of 0 cells.

16.10.13. Executing OPT_DFF pass (perform DFF optimizations).

16.10.14. Executing OPT_CLEAN pass (remove unused cells and wires).
Finding unused cells or wires in module \ice40hx8k..
Removed 0 unused cells and 6 unused wires.
<suppressed ~3 debug messages>

16.10.15. Executing OPT_EXPR pass (perform const folding).
Optimizing module ice40hx8k.
<suppressed ~2 debug messages>

16.10.16. Rerunning OPT passes. (Maybe there is more to do..)

16.10.17. Executing OPT_MUXTREE pass (detect dead branches in mux trees).
Running muxtree optimizer on module \ice40hx8k..
  Creating internal representation of mux trees.
  Evaluating internal representation of mux trees.
  Analyzing evaluation results.
Removed 0 multiplexer ports.
<suppressed ~28 debug messages>

16.10.18. Executing OPT_REDUCE pass (consolidate $*mux and $reduce_* inputs).
  Optimizing cells in module \ice40hx8k.
Performed a total of 0 changes.

16.10.19. Executing OPT_MERGE pass (detect identical cells).
Finding identical cells in module `\ice40hx8k'.
Removed a total of 0 cells.

16.10.20. Executing OPT_DFF pass (perform DFF optimizations).

16.10.21. Executing OPT_CLEAN pass (remove unused cells and wires).
Finding unused cells or wires in module \ice40hx8k..
Removed 0 unused cells and 2 unused wires.
<suppressed ~1 debug messages>

16.10.22. Executing OPT_EXPR pass (perform const folding).
Optimizing module ice40hx8k.

16.10.23. Rerunning OPT passes. (Maybe there is more to do..)

16.10.24. Executing OPT_MUXTREE pass (detect dead branches in mux trees).
Running muxtree optimizer on module \ice40hx8k..
  Creating internal representation of mux trees.
  Evaluating internal representation of mux trees.
  Analyzing evaluation results.
Removed 0 multiplexer ports.
<suppressed ~28 debug messages>

16.10.25. Executing OPT_REDUCE pass (consolidate $*mux and $reduce_* inputs).
  Optimizing cells in module \ice40hx8k.
Performed a total of 0 changes.

16.10.26. Executing OPT_MERGE pass (detect identical cells).
Finding identical cells in module `\ice40hx8k'.
Removed a total of 0 cells.

16.10.27. Executing OPT_DFF pass (perform DFF optimizations).

16.10.28. Executing OPT_CLEAN pass (remove unused cells and wires).
Finding unused cells or wires in module \ice40hx8k..

16.10.29. Executing OPT_EXPR pass (perform const folding).
Optimizing module ice40hx8k.

16.10.30. Finished OPT passes. (There is nothing left to do.)

16.11. Executing FSM pass (extract and optimize FSM).

16.11.1. Executing FSM_DETECT pass (finding FSMs in design).
Not marking ice40hx8k.ros.startup as FSM state register:
    Users of register don't seem to benefit from recoding.
    Register has an initialization value.
Found FSM state register ice40hx8k.top_inst.u10.state.
Not marking ice40hx8k.top_inst.u2.digitCode as FSM state register:
    Users of register don't seem to benefit from recoding.
Not marking ice40hx8k.top_inst.u3.out as FSM state register:
    Users of register don't seem to benefit from recoding.
Not marking ice40hx8k.top_inst.u4.reg_num as FSM state register:
    Users of register don't seem to benefit from recoding.
Found FSM state register ice40hx8k.top_inst.u6.state.
Found FSM state register ice40hx8k.top_inst.u8.buff_opcode.

16.11.2. Executing FSM_EXTRACT pass (extracting FSM from design).
Extracting FSM `\top_inst.u10.state' from module `\ice40hx8k'.
  found $adff cell for state register: $flatten\top_inst.\u10.$procdff$1420
  root of input selection tree: \top_inst.u10.next_state
  found reset state: 3'000 (from async reset)
  found ctrl input: $auto$opt_reduce.cc:134:opt_pmux$1432
  found ctrl input: $flatten\top_inst.\u10.$procmux$1231_CMP
  found ctrl input: $flatten\top_inst.\u10.$eq$source/fsm.sv:82$56_Y
  found ctrl input: $flatten\top_inst.\u10.$procmux$1249_CMP
  found ctrl input: $flatten\top_inst.\u10.$eq$source/fsm.sv:82$55_Y
  found ctrl input: $flatten\top_inst.\u10.$procmux$1261_CMP
  found ctrl input: $flatten\top_inst.\u10.$logic_and$source/fsm.sv:67$52_Y
  found ctrl input: $flatten\top_inst.\u10.$logic_and$source/fsm.sv:69$53_Y
  found state code: 3'101
  found state code: 3'110
  found state code: 3'100
  found ctrl input: \top_inst.isdig
  found state code: 3'010
  found state code: 3'011
  found state code: 3'001
  found ctrl output: $flatten\top_inst.\u10.$eq$source/fsm.sv:82$55_Y
  found ctrl output: $flatten\top_inst.\u10.$eq$source/fsm.sv:82$56_Y
  found ctrl output: $flatten\top_inst.\u10.$eq$source/fsm.sv:88$58_Y
  found ctrl output: $flatten\top_inst.\u10.$eq$source/fsm.sv:94$59_Y
  found ctrl output: $flatten\top_inst.\u10.$procmux$1231_CMP
  found ctrl output: $flatten\top_inst.\u10.$procmux$1249_CMP
  found ctrl output: $flatten\top_inst.\u10.$procmux$1261_CMP
  ctrl inputs: { $auto$opt_reduce.cc:134:opt_pmux$1432 \top_inst.isdig $flatten\top_inst.\u10.$logic_and$source/fsm.sv:69$53_Y $flatten\top_inst.\u10.$logic_and$source/fsm.sv:67$52_Y }
  ctrl outputs: { $flatten\top_inst.\u10.$procmux$1261_CMP $flatten\top_inst.\u10.$procmux$1249_CMP $flatten\top_inst.\u10.$procmux$1231_CMP $flatten\top_inst.\u10.$eq$source/fsm.sv:94$59_Y $flatten\top_inst.\u10.$eq$source/fsm.sv:88$58_Y $flatten\top_inst.\u10.$eq$source/fsm.sv:82$56_Y $flatten\top_inst.\u10.$eq$source/fsm.sv:82$55_Y \top_inst.u10.next_state }
  transition:      3'000 4'-0-- ->      3'000 10'1000000000
  transition:      3'000 4'-1-- ->      3'001 10'1000000001
  transition:      3'100 4'--00 ->      3'100 10'0010000100
  transition:      3'100 4'--10 ->      3'101 10'0010000101
  transition:      3'100 4'---1 ->      3'110 10'0010000110
  transition:      3'010 4'-0-- ->      3'010 10'0100000010
  transition:      3'010 4'-1-- ->      3'011 10'0100000011
  transition:      3'110 4'---- ->      3'000 10'0000100000
  transition:      3'001 4'---- ->      3'010 10'0000001010
  transition:      3'101 4'---- ->      3'000 10'0001000000
  transition:      3'011 4'---- ->      3'100 10'0000010100
Extracting FSM `\top_inst.u6.state' from module `\ice40hx8k'.
  found $adff cell for state register: $flatten\top_inst.\u6.$procdff$1412
  root of input selection tree: \top_inst.u6.next_state
  found reset state: 3'000 (from async reset)
  found ctrl input: $flatten\top_inst.\u6.$procmux$1078_CMP
  found ctrl input: $flatten\top_inst.\u6.$procmux$1085_CMP
  found ctrl input: $flatten\top_inst.\u6.$procmux$1122_CMP
  found ctrl input: $flatten\top_inst.\u6.$procmux$1094_CMP
  found ctrl input: $flatten\top_inst.\u6.$procmux$1124_CMP
  found ctrl input: $flatten\top_inst.\u6.$procmux$1105_CMP
  found ctrl input: $flatten\top_inst.\u6.$procmux$1117_CMP
  found ctrl input: $flatten\top_inst.\u6.$procmux$1083_CMP
  found state code: 3'110
  found state code: 3'101
  found ctrl input: $flatten\top_inst.\u6.$procmux$1092_CMP
  found state code: 3'100
  found state code: 3'011
  found state code: 3'010
  found ctrl input: \top_inst.r_en
  found state code: 3'001
  found ctrl output: $flatten\top_inst.\u6.$procmux$1078_CMP
  found ctrl output: $flatten\top_inst.\u6.$procmux$1085_CMP
  found ctrl output: $flatten\top_inst.\u6.$procmux$1094_CMP
  found ctrl output: $flatten\top_inst.\u6.$procmux$1105_CMP
  found ctrl output: $flatten\top_inst.\u6.$procmux$1117_CMP
  found ctrl output: $flatten\top_inst.\u6.$procmux$1122_CMP
  found ctrl output: $flatten\top_inst.\u6.$procmux$1124_CMP
  ctrl inputs: { \top_inst.r_en $flatten\top_inst.\u6.$procmux$1092_CMP $flatten\top_inst.\u6.$procmux$1083_CMP }
  ctrl outputs: { $flatten\top_inst.\u6.$procmux$1124_CMP $flatten\top_inst.\u6.$procmux$1122_CMP $flatten\top_inst.\u6.$procmux$1117_CMP $flatten\top_inst.\u6.$procmux$1105_CMP $flatten\top_inst.\u6.$procmux$1094_CMP $flatten\top_inst.\u6.$procmux$1085_CMP $flatten\top_inst.\u6.$procmux$1078_CMP \top_inst.u6.next_state }
  transition:      3'000 3'0-- ->      3'000 10'0010000000
  transition:      3'000 3'1-- ->      3'001 10'0010000001
  transition:      3'100 3'--- ->      3'101 10'0100000101
  transition:      3'010 3'--- ->      3'011 10'1000000011
  transition:      3'110 3'--- ->      3'000 10'0000001000
  transition:      3'001 3'-0- ->      3'001 10'0001000001
  transition:      3'001 3'-1- ->      3'010 10'0001000010
  transition:      3'101 3'--0 ->      3'101 10'0000010101
  transition:      3'101 3'--1 ->      3'110 10'0000010110
  transition:      3'011 3'-0- ->      3'011 10'0000100011
  transition:      3'011 3'-1- ->      3'100 10'0000100100
Extracting FSM `\top_inst.u8.buff_opcode' from module `\ice40hx8k'.
  found $adff cell for state register: $flatten\top_inst.\u8.$procdff$1406
  root of input selection tree: \top_inst.u8.next_buff_opcode
  found reset state: 3'000 (from async reset)
  found no driver for state signal \top_inst.u8.next_buff_opcode.
  fsm extraction failed: state selection tree is not closed.

16.11.3. Executing FSM_OPT pass (simple optimizations of FSMs).
Optimizing FSM `$fsm$\top_inst.u6.state$1446' from module `\ice40hx8k'.
Optimizing FSM `$fsm$\top_inst.u10.state$1437' from module `\ice40hx8k'.
  Removing unused input signal $auto$opt_reduce.cc:134:opt_pmux$1432.

16.11.4. Executing OPT_CLEAN pass (remove unused cells and wires).
Finding unused cells or wires in module \ice40hx8k..
Removed 27 unused cells and 27 unused wires.
<suppressed ~28 debug messages>

16.11.5. Executing FSM_OPT pass (simple optimizations of FSMs).
Optimizing FSM `$fsm$\top_inst.u10.state$1437' from module `\ice40hx8k'.
  Removing unused output signal \top_inst.u10.next_state [0].
  Removing unused output signal \top_inst.u10.next_state [1].
  Removing unused output signal \top_inst.u10.next_state [2].
  Removing unused output signal $flatten\top_inst.\u10.$procmux$1231_CMP.
  Removing unused output signal $flatten\top_inst.\u10.$procmux$1249_CMP.
  Removing unused output signal $flatten\top_inst.\u10.$procmux$1261_CMP.
Optimizing FSM `$fsm$\top_inst.u6.state$1446' from module `\ice40hx8k'.
  Removing unused output signal \top_inst.u6.next_state [0].
  Removing unused output signal \top_inst.u6.next_state [1].
  Removing unused output signal \top_inst.u6.next_state [2].
  Removing unused output signal $flatten\top_inst.\u6.$procmux$1085_CMP.
  Removing unused output signal $flatten\top_inst.\u6.$procmux$1094_CMP.
  Removing unused output signal $flatten\top_inst.\u6.$procmux$1105_CMP.
  Removing unused output signal $flatten\top_inst.\u6.$procmux$1117_CMP.
  Removing unused output signal $flatten\top_inst.\u6.$procmux$1122_CMP.
  Removing unused output signal $flatten\top_inst.\u6.$procmux$1124_CMP.

16.11.6. Executing FSM_RECODE pass (re-assigning FSM state encoding).
Recoding FSM `$fsm$\top_inst.u10.state$1437' from module `\ice40hx8k' using `auto' encoding:
  mapping auto encoding to `one-hot` for this FSM.
  000 -> ------1
  100 -> -----1-
  010 -> ----1--
  110 -> ---1---
  001 -> --1----
  101 -> -1-----
  011 -> 1------
Recoding FSM `$fsm$\top_inst.u6.state$1446' from module `\ice40hx8k' using `auto' encoding:
  mapping auto encoding to `one-hot` for this FSM.
  000 -> ------1
  100 -> -----1-
  010 -> ----1--
  110 -> ---1---
  001 -> --1----
  101 -> -1-----
  011 -> 1------

16.11.7. Executing FSM_INFO pass (dumping all available information on FSM cells).

FSM `$fsm$\top_inst.u10.state$1437' from module `ice40hx8k':
-------------------------------------

  Information on FSM $fsm$\top_inst.u10.state$1437 (\top_inst.u10.state):

  Number of input signals:    3
  Number of output signals:   4
  Number of state bits:       7

  Input signals:
    0: $flatten\top_inst.\u10.$logic_and$source/fsm.sv:67$52_Y
    1: $flatten\top_inst.\u10.$logic_and$source/fsm.sv:69$53_Y
    2: \top_inst.isdig

  Output signals:
    0: $flatten\top_inst.\u10.$eq$source/fsm.sv:82$55_Y
    1: $flatten\top_inst.\u10.$eq$source/fsm.sv:82$56_Y
    2: $flatten\top_inst.\u10.$eq$source/fsm.sv:88$58_Y
    3: $flatten\top_inst.\u10.$eq$source/fsm.sv:94$59_Y

  State encoding:
    0:  7'------1  <RESET STATE>
    1:  7'-----1-
    2:  7'----1--
    3:  7'---1---
    4:  7'--1----
    5:  7'-1-----
    6:  7'1------

  Transition Table (state_in, ctrl_in, state_out, ctrl_out):
      0:     0 3'0--   ->     0 4'0000
      1:     0 3'1--   ->     4 4'0000
      2:     1 3'-00   ->     1 4'0000
      3:     1 3'--1   ->     3 4'0000
      4:     1 3'-10   ->     5 4'0000
      5:     2 3'0--   ->     2 4'0000
      6:     2 3'1--   ->     6 4'0000
      7:     3 3'---   ->     0 4'0100
      8:     4 3'---   ->     2 4'0001
      9:     5 3'---   ->     0 4'1000
     10:     6 3'---   ->     1 4'0010

-------------------------------------

FSM `$fsm$\top_inst.u6.state$1446' from module `ice40hx8k':
-------------------------------------

  Information on FSM $fsm$\top_inst.u6.state$1446 (\top_inst.u6.state):

  Number of input signals:    3
  Number of output signals:   1
  Number of state bits:       7

  Input signals:
    0: $flatten\top_inst.\u6.$procmux$1083_CMP
    1: $flatten\top_inst.\u6.$procmux$1092_CMP
    2: \top_inst.r_en

  Output signals:
    0: $flatten\top_inst.\u6.$procmux$1078_CMP

  State encoding:
    0:  7'------1  <RESET STATE>
    1:  7'-----1-
    2:  7'----1--
    3:  7'---1---
    4:  7'--1----
    5:  7'-1-----
    6:  7'1------

  Transition Table (state_in, ctrl_in, state_out, ctrl_out):
      0:     0 3'0--   ->     0 1'0
      1:     0 3'1--   ->     4 1'0
      2:     1 3'---   ->     5 1'0
      3:     2 3'---   ->     6 1'0
      4:     3 3'---   ->     0 1'1
      5:     4 3'-1-   ->     2 1'0
      6:     4 3'-0-   ->     4 1'0
      7:     5 3'--1   ->     3 1'0
      8:     5 3'--0   ->     5 1'0
      9:     6 3'-1-   ->     1 1'0
     10:     6 3'-0-   ->     6 1'0

-------------------------------------

16.11.8. Executing FSM_MAP pass (mapping FSMs to basic logic).
Mapping FSM `$fsm$\top_inst.u10.state$1437' from module `\ice40hx8k'.
Mapping FSM `$fsm$\top_inst.u6.state$1446' from module `\ice40hx8k'.

16.12. Executing OPT pass (performing simple optimizations).

16.12.1. Executing OPT_EXPR pass (perform const folding).
Optimizing module ice40hx8k.
<suppressed ~14 debug messages>

16.12.2. Executing OPT_MERGE pass (detect identical cells).
Finding identical cells in module `\ice40hx8k'.
<suppressed ~6 debug messages>
Removed a total of 2 cells.

16.12.3. Executing OPT_MUXTREE pass (detect dead branches in mux trees).
Running muxtree optimizer on module \ice40hx8k..
  Creating internal representation of mux trees.
  Evaluating internal representation of mux trees.
  Analyzing evaluation results.
Removed 0 multiplexer ports.
<suppressed ~26 debug messages>

16.12.4. Executing OPT_REDUCE pass (consolidate $*mux and $reduce_* inputs).
  Optimizing cells in module \ice40hx8k.
Performed a total of 0 changes.

16.12.5. Executing OPT_MERGE pass (detect identical cells).
Finding identical cells in module `\ice40hx8k'.
Removed a total of 0 cells.

16.12.6. Executing OPT_DFF pass (perform DFF optimizations).
Adding EN signal on $procdff$1430 ($dff) from module ice40hx8k (D = $not$ice40/ice40hx8k.sv:18$3_Y, Q = \hz100).
Adding SRST signal on $procdff$1429 ($dff) from module ice40hx8k (D = $add$ice40/ice40hx8k.sv:21$4_Y [15:0], Q = \ctr, rval = 16'0000000000000000).
Adding EN signal on $flatten\uart_inst.\uart_tx_inst.$procdff$1388 ($dff) from module ice40hx8k (D = $flatten\uart_inst.\uart_tx_inst.$procmux$716_Y, Q = \uart_inst.uart_tx_inst.bit_cnt).
Adding EN signal on $flatten\uart_inst.\uart_tx_inst.$procdff$1387 ($dff) from module ice40hx8k (D = $flatten\uart_inst.\uart_tx_inst.$0\prescale_reg[18:0], Q = \uart_inst.uart_tx_inst.prescale_reg).
Adding EN signal on $flatten\uart_inst.\uart_tx_inst.$procdff$1386 ($dff) from module ice40hx8k (D = $flatten\uart_inst.\uart_tx_inst.$procmux$657_Y, Q = \uart_inst.uart_tx_inst.data_reg).
Adding EN signal on $flatten\uart_inst.\uart_tx_inst.$procdff$1384 ($dff) from module ice40hx8k (D = $flatten\uart_inst.\uart_tx_inst.$procmux$689_Y, Q = \uart_inst.uart_tx_inst.txd_reg).
Adding SRST signal on $flatten\uart_inst.\uart_tx_inst.$procdff$1383 ($dff) from module ice40hx8k (D = $flatten\uart_inst.\uart_tx_inst.$procmux$727_Y, Q = \uart_inst.uart_tx_inst.input_axis_tready_reg, rval = 1'0).
Adding EN signal on $auto$ff.cc:266:slice$1566 ($sdff) from module ice40hx8k (D = $flatten\uart_inst.\uart_tx_inst.$procmux$725_Y, Q = \uart_inst.uart_tx_inst.input_axis_tready_reg).
Adding EN signal on $flatten\top_inst.\u5.$procdff$1415 ($adff) from module ice40hx8k (D = \top_inst.u5.next_ssdec, Q = \top_inst.u5.ssdec).
Adding EN signal on $flatten\top_inst.\u5.$procdff$1414 ($adff) from module ice40hx8k (D = \top_inst.u5.next_op1 [8], Q = \top_inst.u5.op1 [8]).
Adding EN signal on $flatten\top_inst.\u3.$procdff$1421 ($adff) from module ice40hx8k (D = $flatten\top_inst.\u3.$2\next_out[2:0], Q = \top_inst.u3.out).
Adding EN signal on $flatten\top_inst.\u2.$procdff$1422 ($adff) from module ice40hx8k (D = \top_inst.u2.keycode, Q = \top_inst.u2.digitCode).
Adding EN signal on $flatten\ros.$procdff$1426 ($adff) from module ice40hx8k (D = $flatten\ros.$0\startup[2:0], Q = \ros.startup).

16.12.7. Executing OPT_CLEAN pass (remove unused cells and wires).
Finding unused cells or wires in module \ice40hx8k..
Removed 11 unused cells and 39 unused wires.
<suppressed ~16 debug messages>

16.12.8. Executing OPT_EXPR pass (perform const folding).
Optimizing module ice40hx8k.
<suppressed ~7 debug messages>

16.12.9. Rerunning OPT passes. (Maybe there is more to do..)

16.12.10. Executing OPT_MUXTREE pass (detect dead branches in mux trees).
Running muxtree optimizer on module \ice40hx8k..
  Creating internal representation of mux trees.
  Evaluating internal representation of mux trees.
  Analyzing evaluation results.
Removed 0 multiplexer ports.
<suppressed ~23 debug messages>

16.12.11. Executing OPT_REDUCE pass (consolidate $*mux and $reduce_* inputs).
  Optimizing cells in module \ice40hx8k.
Performed a total of 0 changes.

16.12.12. Executing OPT_MERGE pass (detect identical cells).
Finding identical cells in module `\ice40hx8k'.
<suppressed ~18 debug messages>
Removed a total of 6 cells.

16.12.13. Executing OPT_DFF pass (perform DFF optimizations).

16.12.14. Executing OPT_CLEAN pass (remove unused cells and wires).
Finding unused cells or wires in module \ice40hx8k..
Removed 0 unused cells and 6 unused wires.
<suppressed ~1 debug messages>

16.12.15. Executing OPT_EXPR pass (perform const folding).
Optimizing module ice40hx8k.

16.12.16. Rerunning OPT passes. (Maybe there is more to do..)

16.12.17. Executing OPT_MUXTREE pass (detect dead branches in mux trees).
Running muxtree optimizer on module \ice40hx8k..
  Creating internal representation of mux trees.
  Evaluating internal representation of mux trees.
  Analyzing evaluation results.
Removed 0 multiplexer ports.
<suppressed ~23 debug messages>

16.12.18. Executing OPT_REDUCE pass (consolidate $*mux and $reduce_* inputs).
  Optimizing cells in module \ice40hx8k.
Performed a total of 0 changes.

16.12.19. Executing OPT_MERGE pass (detect identical cells).
Finding identical cells in module `\ice40hx8k'.
Removed a total of 0 cells.

16.12.20. Executing OPT_DFF pass (perform DFF optimizations).

16.12.21. Executing OPT_CLEAN pass (remove unused cells and wires).
Finding unused cells or wires in module \ice40hx8k..

16.12.22. Executing OPT_EXPR pass (perform const folding).
Optimizing module ice40hx8k.

16.12.23. Finished OPT passes. (There is nothing left to do.)

16.13. Executing WREDUCE pass (reducing word size of cells).
Removed top 28 address bits (of 32) from memory init port ice40hx8k.$flatten\top_inst.\u9.$auto$mem.cc:319:emit$602 ($flatten\top_inst.\u9.$auto$proc_rom.cc:150:do_switch$600).
Removed top 28 address bits (of 32) from memory init port ice40hx8k.$flatten\top_inst.\u9.$auto$mem.cc:319:emit$606 ($flatten\top_inst.\u9.$auto$proc_rom.cc:150:do_switch$604).
Removed top 31 bits (of 32) from port B of cell ice40hx8k.$add$ice40/ice40hx8k.sv:21$4 ($add).
Removed top 16 bits (of 32) from port Y of cell ice40hx8k.$add$ice40/ice40hx8k.sv:21$4 ($add).
Removed top 31 bits (of 32) from port B of cell ice40hx8k.$flatten\uart_inst.\uart_tx_inst.$sub$ice40/uart/uart_tx.v:88$581 ($sub).
Removed top 13 bits (of 32) from port Y of cell ice40hx8k.$flatten\uart_inst.\uart_tx_inst.$sub$ice40/uart/uart_tx.v:88$581 ($sub).
Removed top 31 bits (of 32) from port B of cell ice40hx8k.$flatten\uart_inst.\uart_tx_inst.$gt$ice40/uart/uart_tx.v:102$586 ($gt).
Removed top 31 bits (of 32) from port B of cell ice40hx8k.$flatten\uart_inst.\uart_tx_inst.$sub$ice40/uart/uart_tx.v:103$587 ($sub).
Removed top 28 bits (of 32) from port Y of cell ice40hx8k.$flatten\uart_inst.\uart_tx_inst.$sub$ice40/uart/uart_tx.v:103$587 ($sub).
Removed top 3 bits (of 4) from port B of cell ice40hx8k.$flatten\uart_inst.\uart_tx_inst.$eq$ice40/uart/uart_tx.v:106$590 ($eq).
Removed top 31 bits (of 32) from port B of cell ice40hx8k.$flatten\uart_inst.\uart_tx_inst.$gt$ice40/uart/uart_tx.v:86$580 ($gt).
Removed top 1 bits (of 3) from port B of cell ice40hx8k.$flatten\top_inst.\u8.$eq$source/alu.sv:67$85 ($eq).
Removed top 1 bits (of 4) from port A of cell ice40hx8k.$flatten\top_inst.\u8.$add$source/alu.sv:81$95 ($add).
Removed top 3 bits (of 4) from port B of cell ice40hx8k.$flatten\top_inst.\u8.$add$source/alu.sv:87$98 ($add).
Removed top 1 bits (of 4) from port A of cell ice40hx8k.$flatten\top_inst.\u8.$add$source/alu.sv:93$103 ($add).
Removed top 1 bits (of 9) from mux cell ice40hx8k.$flatten\top_inst.\u5.$procmux$1152 ($mux).
Removed top 1 bits (of 4) from port B of cell ice40hx8k.$flatten\top_inst.\u4.$procmux$1158_CMP0 ($eq).
Removed top 2 bits (of 4) from port B of cell ice40hx8k.$flatten\top_inst.\u4.$procmux$1159_CMP0 ($eq).
Removed top 3 bits (of 4) from port B of cell ice40hx8k.$flatten\top_inst.\u4.$procmux$1160_CMP0 ($eq).
Removed top 1 bits (of 13) from port B of cell ice40hx8k.$flatten\top_inst.\u1.$procmux$1323_CMP0 ($eq).
Removed top 2 bits (of 13) from port B of cell ice40hx8k.$flatten\top_inst.\u1.$procmux$1324_CMP0 ($eq).
Removed top 3 bits (of 13) from port B of cell ice40hx8k.$flatten\top_inst.\u1.$procmux$1325_CMP0 ($eq).
Removed top 4 bits (of 13) from port B of cell ice40hx8k.$flatten\top_inst.\u1.$procmux$1326_CMP0 ($eq).
Removed top 5 bits (of 13) from port B of cell ice40hx8k.$flatten\top_inst.\u1.$procmux$1327_CMP0 ($eq).
Removed top 6 bits (of 13) from port B of cell ice40hx8k.$flatten\top_inst.\u1.$procmux$1328_CMP0 ($eq).
Removed top 7 bits (of 13) from port B of cell ice40hx8k.$flatten\top_inst.\u1.$procmux$1329_CMP0 ($eq).
Removed top 8 bits (of 13) from port B of cell ice40hx8k.$flatten\top_inst.\u1.$procmux$1330_CMP0 ($eq).
Removed top 9 bits (of 13) from port B of cell ice40hx8k.$flatten\top_inst.\u1.$procmux$1331_CMP0 ($eq).
Removed top 10 bits (of 13) from port B of cell ice40hx8k.$flatten\top_inst.\u1.$procmux$1332_CMP0 ($eq).
Removed top 11 bits (of 13) from port B of cell ice40hx8k.$flatten\top_inst.\u1.$procmux$1333_CMP0 ($eq).
Removed top 12 bits (of 13) from port B of cell ice40hx8k.$flatten\top_inst.\u1.$procmux$1334_CMP0 ($eq).
Removed top 1 bits (of 9) from mux cell ice40hx8k.$flatten\top_inst.\u5.$procmux$1146 ($mux).
Removed top 16 bits (of 32) from wire ice40hx8k.$add$ice40/ice40hx8k.sv:21$4_Y.
Removed top 1 bits (of 9) from wire ice40hx8k.$flatten\top_inst.\u5.$2\next_op1[8:0].
Removed top 28 bits (of 32) from wire ice40hx8k.$flatten\uart_inst.\uart_tx_inst.$sub$ice40/uart/uart_tx.v:103$587_Y.
Removed top 13 bits (of 32) from wire ice40hx8k.$flatten\uart_inst.\uart_tx_inst.$sub$ice40/uart/uart_tx.v:88$581_Y.

16.14. Executing PEEPOPT pass (run peephole optimizers).

16.15. Executing OPT_CLEAN pass (remove unused cells and wires).
Finding unused cells or wires in module \ice40hx8k..
Removed 0 unused cells and 4 unused wires.
<suppressed ~1 debug messages>

16.16. Executing SHARE pass (SAT-based resource sharing).

16.17. Executing TECHMAP pass (map to technology primitives).

16.17.1. Executing Verilog-2005 frontend: /home/shay/a/ece270/bin/../share/yosys/cmp2lut.v
Parsing Verilog input from `/home/shay/a/ece270/bin/../share/yosys/cmp2lut.v' to AST representation.
Generating RTLIL representation for module `\_90_lut_cmp_'.
Successfully finished Verilog frontend.

16.17.2. Continuing TECHMAP pass.
Using template $paramod$106e7676feb63f00b8f79ebab3ff16b0f4c109cb\_90_lut_cmp_ for cells of type $gt.
Using template $paramod$fd3a338331ce77d5c60504e1108b754e9b73ee37\_90_lut_cmp_ for cells of type $lt.
No more expansions possible.
<suppressed ~92 debug messages>

16.18. Executing OPT_EXPR pass (perform const folding).
Optimizing module ice40hx8k.

16.19. Executing OPT_CLEAN pass (remove unused cells and wires).
Finding unused cells or wires in module \ice40hx8k..
Removed 0 unused cells and 6 unused wires.
<suppressed ~1 debug messages>

16.20. Executing ALUMACC pass (create $alu and $macc cells).
Extracting $alu and $macc cells in module ice40hx8k:
  creating $macc model for $add$ice40/ice40hx8k.sv:21$4 ($add).
  creating $macc model for $flatten\top_inst.\u8.$add$source/alu.sv:81$95 ($add).
  creating $macc model for $flatten\top_inst.\u8.$add$source/alu.sv:87$98 ($add).
  creating $macc model for $flatten\top_inst.\u8.$add$source/alu.sv:93$103 ($add).
  creating $macc model for $flatten\top_inst.\u8.$add$source/alu.sv:95$106 ($add).
  creating $macc model for $flatten\uart_inst.\uart_tx_inst.$sub$ice40/uart/uart_tx.v:103$587 ($sub).
  creating $macc model for $flatten\uart_inst.\uart_tx_inst.$sub$ice40/uart/uart_tx.v:88$581 ($sub).
  creating $alu model for $macc $flatten\uart_inst.\uart_tx_inst.$sub$ice40/uart/uart_tx.v:88$581.
  creating $alu model for $macc $flatten\uart_inst.\uart_tx_inst.$sub$ice40/uart/uart_tx.v:103$587.
  creating $alu model for $macc $flatten\top_inst.\u8.$add$source/alu.sv:95$106.
  creating $alu model for $macc $flatten\top_inst.\u8.$add$source/alu.sv:93$103.
  creating $alu model for $macc $flatten\top_inst.\u8.$add$source/alu.sv:87$98.
  creating $alu model for $macc $flatten\top_inst.\u8.$add$source/alu.sv:81$95.
  creating $alu model for $macc $add$ice40/ice40hx8k.sv:21$4.
  creating $alu model for $flatten\uart_inst.\uart_tx_inst.$gt$ice40/uart/uart_tx.v:86$580 ($gt): new $alu
  creating $alu cell for $flatten\uart_inst.\uart_tx_inst.$gt$ice40/uart/uart_tx.v:86$580: $auto$alumacc.cc:485:replace_alu$1594
  creating $alu cell for $add$ice40/ice40hx8k.sv:21$4: $auto$alumacc.cc:485:replace_alu$1599
  creating $alu cell for $flatten\top_inst.\u8.$add$source/alu.sv:81$95: $auto$alumacc.cc:485:replace_alu$1602
  creating $alu cell for $flatten\top_inst.\u8.$add$source/alu.sv:87$98: $auto$alumacc.cc:485:replace_alu$1605
  creating $alu cell for $flatten\top_inst.\u8.$add$source/alu.sv:93$103: $auto$alumacc.cc:485:replace_alu$1608
  creating $alu cell for $flatten\top_inst.\u8.$add$source/alu.sv:95$106: $auto$alumacc.cc:485:replace_alu$1611
  creating $alu cell for $flatten\uart_inst.\uart_tx_inst.$sub$ice40/uart/uart_tx.v:103$587: $auto$alumacc.cc:485:replace_alu$1614
  creating $alu cell for $flatten\uart_inst.\uart_tx_inst.$sub$ice40/uart/uart_tx.v:88$581: $auto$alumacc.cc:485:replace_alu$1617
  created 8 $alu and 0 $macc cells.

16.21. Executing OPT pass (performing simple optimizations).

16.21.1. Executing OPT_EXPR pass (perform const folding).
Optimizing module ice40hx8k.
<suppressed ~3 debug messages>

16.21.2. Executing OPT_MERGE pass (detect identical cells).
Finding identical cells in module `\ice40hx8k'.
Removed a total of 0 cells.

16.21.3. Executing OPT_MUXTREE pass (detect dead branches in mux trees).
Running muxtree optimizer on module \ice40hx8k..
  Creating internal representation of mux trees.
  Evaluating internal representation of mux trees.
  Analyzing evaluation results.
Removed 0 multiplexer ports.
<suppressed ~23 debug messages>

16.21.4. Executing OPT_REDUCE pass (consolidate $*mux and $reduce_* inputs).
  Optimizing cells in module \ice40hx8k.
Performed a total of 0 changes.

16.21.5. Executing OPT_MERGE pass (detect identical cells).
Finding identical cells in module `\ice40hx8k'.
Removed a total of 0 cells.

16.21.6. Executing OPT_DFF pass (perform DFF optimizations).

16.21.7. Executing OPT_CLEAN pass (remove unused cells and wires).
Finding unused cells or wires in module \ice40hx8k..
Removed 0 unused cells and 2 unused wires.
<suppressed ~1 debug messages>

16.21.8. Executing OPT_EXPR pass (perform const folding).
Optimizing module ice40hx8k.

16.21.9. Rerunning OPT passes. (Maybe there is more to do..)

16.21.10. Executing OPT_MUXTREE pass (detect dead branches in mux trees).
Running muxtree optimizer on module \ice40hx8k..
  Creating internal representation of mux trees.
  Evaluating internal representation of mux trees.
  Analyzing evaluation results.
Removed 0 multiplexer ports.
<suppressed ~23 debug messages>

16.21.11. Executing OPT_REDUCE pass (consolidate $*mux and $reduce_* inputs).
  Optimizing cells in module \ice40hx8k.
Performed a total of 0 changes.

16.21.12. Executing OPT_MERGE pass (detect identical cells).
Finding identical cells in module `\ice40hx8k'.
Removed a total of 0 cells.

16.21.13. Executing OPT_DFF pass (perform DFF optimizations).

16.21.14. Executing OPT_CLEAN pass (remove unused cells and wires).
Finding unused cells or wires in module \ice40hx8k..

16.21.15. Executing OPT_EXPR pass (perform const folding).
Optimizing module ice40hx8k.

16.21.16. Finished OPT passes. (There is nothing left to do.)

16.22. Executing MEMORY pass.

16.22.1. Executing OPT_MEM pass (optimize memories).
Performed a total of 0 transformations.

16.22.2. Executing OPT_MEM_PRIORITY pass (removing unnecessary memory write priority relations).
Performed a total of 0 transformations.

16.22.3. Executing OPT_MEM_FEEDBACK pass (finding memory read-to-write feedback paths).

16.22.4. Executing MEMORY_BMUX2ROM pass (converting muxes to ROMs).

16.22.5. Executing MEMORY_DFF pass (merging $dff cells to $memrd).
Checking read port `$flatten\top_inst.\u9.$auto$proc_rom.cc:150:do_switch$600'[0] in module `\ice40hx8k': no output FF found.
Checking read port `$flatten\top_inst.\u9.$auto$proc_rom.cc:150:do_switch$604'[0] in module `\ice40hx8k': no output FF found.
Checking read port address `$flatten\top_inst.\u9.$auto$proc_rom.cc:150:do_switch$600'[0] in module `\ice40hx8k': address FF has async set and/or reset, not supported.
Checking read port address `$flatten\top_inst.\u9.$auto$proc_rom.cc:150:do_switch$604'[0] in module `\ice40hx8k': address FF has async set and/or reset, not supported.

16.22.6. Executing OPT_CLEAN pass (remove unused cells and wires).
Finding unused cells or wires in module \ice40hx8k..

16.22.7. Executing MEMORY_SHARE pass (consolidating $memrd/$memwr cells).

16.22.8. Executing OPT_MEM_WIDEN pass (optimize memories where all ports are wide).
Performed a total of 0 transformations.

16.22.9. Executing OPT_CLEAN pass (remove unused cells and wires).
Finding unused cells or wires in module \ice40hx8k..

16.22.10. Executing MEMORY_COLLECT pass (generating $mem cells).

16.23. Executing OPT_CLEAN pass (remove unused cells and wires).
Finding unused cells or wires in module \ice40hx8k..

16.24. Executing MEMORY_LIBMAP pass (mapping memories to cells).
using FF mapping for memory ice40hx8k.$flatten\top_inst.\u9.$auto$proc_rom.cc:150:do_switch$600
using FF mapping for memory ice40hx8k.$flatten\top_inst.\u9.$auto$proc_rom.cc:150:do_switch$604
<suppressed ~12 debug messages>

16.25. Executing TECHMAP pass (map to technology primitives).

16.25.1. Executing Verilog-2005 frontend: /home/shay/a/ece270/bin/../share/yosys/ice40/brams_map.v
Parsing Verilog input from `/home/shay/a/ece270/bin/../share/yosys/ice40/brams_map.v' to AST representation.
Generating RTLIL representation for module `\$__ICE40_RAM4K_'.
Successfully finished Verilog frontend.

16.25.2. Executing Verilog-2005 frontend: /home/shay/a/ece270/bin/../share/yosys/ice40/spram_map.v
Parsing Verilog input from `/home/shay/a/ece270/bin/../share/yosys/ice40/spram_map.v' to AST representation.
Generating RTLIL representation for module `\$__ICE40_SPRAM_'.
Successfully finished Verilog frontend.

16.25.3. Continuing TECHMAP pass.
No more expansions possible.
<suppressed ~4 debug messages>

16.26. Executing ICE40_BRAMINIT pass.

16.27. Executing OPT pass (performing simple optimizations).

16.27.1. Executing OPT_EXPR pass (perform const folding).
Optimizing module ice40hx8k.
<suppressed ~96 debug messages>

16.27.2. Executing OPT_MERGE pass (detect identical cells).
Finding identical cells in module `\ice40hx8k'.
Removed a total of 0 cells.

16.27.3. Executing OPT_DFF pass (perform DFF optimizations).
Handling const CLK on $procdff$1428 ($adff) from module ice40hx8k (removing D path).
Adding SRST signal on $auto$ff.cc:266:slice$1557 ($dffe) from module ice40hx8k (D = $flatten\uart_inst.\uart_tx_inst.$procmux$684_Y, Q = \uart_inst.uart_tx_inst.txd_reg, rval = 1'0).
Adding SRST signal on $auto$ff.cc:266:slice$1548 ($dffe) from module ice40hx8k (D = $flatten\uart_inst.\uart_tx_inst.$procmux$652_Y [8], Q = \uart_inst.uart_tx_inst.data_reg [8], rval = 1'1).
Adding SRST signal on $auto$ff.cc:266:slice$1532 ($dffe) from module ice40hx8k (D = $flatten\uart_inst.\uart_tx_inst.$procmux$711_Y, Q = \uart_inst.uart_tx_inst.bit_cnt, rval = 4'1001).
Setting constant 0-bit at position 0 on $procdff$1428 ($dlatch) from module ice40hx8k.
Setting constant 0-bit at position 0 on $flatten\top_inst.\u8.$procdff$1406 ($adff) from module ice40hx8k.
Setting constant 0-bit at position 1 on $flatten\top_inst.\u8.$procdff$1406 ($adff) from module ice40hx8k.
Setting constant 0-bit at position 2 on $flatten\top_inst.\u8.$procdff$1406 ($adff) from module ice40hx8k.

16.27.4. Executing OPT_CLEAN pass (remove unused cells and wires).
Finding unused cells or wires in module \ice40hx8k..
Removed 5 unused cells and 34 unused wires.
<suppressed ~11 debug messages>

16.27.5. Rerunning OPT passes. (Removed registers in this run.)

16.27.6. Executing OPT_EXPR pass (perform const folding).
Optimizing module ice40hx8k.
<suppressed ~52 debug messages>

16.27.7. Executing OPT_MERGE pass (detect identical cells).
Finding identical cells in module `\ice40hx8k'.
Removed a total of 0 cells.

16.27.8. Executing OPT_DFF pass (perform DFF optimizations).
Setting constant 0-bit at position 0 on $flatten\top_inst.\u5.$procdff$1413 ($adff) from module ice40hx8k.

16.27.9. Executing OPT_CLEAN pass (remove unused cells and wires).
Finding unused cells or wires in module \ice40hx8k..
Removed 24 unused cells and 63 unused wires.
<suppressed ~39 debug messages>

16.27.10. Rerunning OPT passes. (Removed registers in this run.)

16.27.11. Executing OPT_EXPR pass (perform const folding).
Optimizing module ice40hx8k.

16.27.12. Executing OPT_MERGE pass (detect identical cells).
Finding identical cells in module `\ice40hx8k'.
Removed a total of 0 cells.

16.27.13. Executing OPT_DFF pass (perform DFF optimizations).

16.27.14. Executing OPT_CLEAN pass (remove unused cells and wires).
Finding unused cells or wires in module \ice40hx8k..

16.27.15. Finished fast OPT passes.

16.28. Executing MEMORY_MAP pass (converting memories to logic and flip-flops).
Mapping memory $flatten\top_inst.\u9.$auto$proc_rom.cc:150:do_switch$600 in module \ice40hx8k:
  created 16 $dff cells and 0 static cells of width 7.
  read interface: 0 $dff and 15 $mux cells.
  write interface: 0 write mux blocks.
Mapping memory $flatten\top_inst.\u9.$auto$proc_rom.cc:150:do_switch$604 in module \ice40hx8k:
  created 16 $dff cells and 0 static cells of width 7.
  read interface: 0 $dff and 15 $mux cells.
  write interface: 0 write mux blocks.

16.29. Executing OPT pass (performing simple optimizations).

16.29.1. Executing OPT_EXPR pass (perform const folding).
Optimizing module ice40hx8k.
<suppressed ~8 debug messages>

16.29.2. Executing OPT_MERGE pass (detect identical cells).
Finding identical cells in module `\ice40hx8k'.
Removed a total of 0 cells.

16.29.3. Executing OPT_MUXTREE pass (detect dead branches in mux trees).
Running muxtree optimizer on module \ice40hx8k..
  Creating internal representation of mux trees.
  Evaluating internal representation of mux trees.
  Analyzing evaluation results.
Removed 0 multiplexer ports.
<suppressed ~12 debug messages>

16.29.4. Executing OPT_REDUCE pass (consolidate $*mux and $reduce_* inputs).
  Optimizing cells in module \ice40hx8k.
    Consolidated identical input bits for $mux cell $memory$flatten\top_inst.\u9.$auto$proc_rom.cc:150:do_switch$604$rdmux[0][3][0]$1730:
      Old ports: A=7'0111111, B=7'0000110, Y=$memory$flatten\top_inst.\u9.$auto$proc_rom.cc:150:do_switch$604$rdmux[0][2][0]$a$1719
      New ports: A=1'1, B=1'0, Y=$memory$flatten\top_inst.\u9.$auto$proc_rom.cc:150:do_switch$604$rdmux[0][2][0]$a$1719 [0]
      New connections: $memory$flatten\top_inst.\u9.$auto$proc_rom.cc:150:do_switch$604$rdmux[0][2][0]$a$1719 [6:1] = { 1'0 $memory$flatten\top_inst.\u9.$auto$proc_rom.cc:150:do_switch$604$rdmux[0][2][0]$a$1719 [0] $memory$flatten\top_inst.\u9.$auto$proc_rom.cc:150:do_switch$604$rdmux[0][2][0]$a$1719 [0] $memory$flatten\top_inst.\u9.$auto$proc_rom.cc:150:do_switch$604$rdmux[0][2][0]$a$1719 [0] 2'11 }
    Consolidated identical input bits for $mux cell $memory$flatten\top_inst.\u9.$auto$proc_rom.cc:150:do_switch$604$rdmux[0][3][4]$1742:
      Old ports: A=7'1111111, B=7'1101111, Y=$memory$flatten\top_inst.\u9.$auto$proc_rom.cc:150:do_switch$604$rdmux[0][2][2]$a$1725
      New ports: A=1'1, B=1'0, Y=$memory$flatten\top_inst.\u9.$auto$proc_rom.cc:150:do_switch$604$rdmux[0][2][2]$a$1725 [4]
      New connections: { $memory$flatten\top_inst.\u9.$auto$proc_rom.cc:150:do_switch$604$rdmux[0][2][2]$a$1725 [6:5] $memory$flatten\top_inst.\u9.$auto$proc_rom.cc:150:do_switch$604$rdmux[0][2][2]$a$1725 [3:0] } = 6'111111
    Consolidated identical input bits for $mux cell $memory$flatten\top_inst.\u9.$auto$proc_rom.cc:150:do_switch$600$rdmux[0][3][4]$1697:
      Old ports: A=7'1111111, B=7'1101111, Y=$memory$flatten\top_inst.\u9.$auto$proc_rom.cc:150:do_switch$600$rdmux[0][2][2]$a$1680
      New ports: A=1'1, B=1'0, Y=$memory$flatten\top_inst.\u9.$auto$proc_rom.cc:150:do_switch$600$rdmux[0][2][2]$a$1680 [4]
      New connections: { $memory$flatten\top_inst.\u9.$auto$proc_rom.cc:150:do_switch$600$rdmux[0][2][2]$a$1680 [6:5] $memory$flatten\top_inst.\u9.$auto$proc_rom.cc:150:do_switch$600$rdmux[0][2][2]$a$1680 [3:0] } = 6'111111
    Consolidated identical input bits for $mux cell $memory$flatten\top_inst.\u9.$auto$proc_rom.cc:150:do_switch$600$rdmux[0][3][3]$1694:
      Old ports: A=7'1111101, B=7'0000111, Y=$memory$flatten\top_inst.\u9.$auto$proc_rom.cc:150:do_switch$600$rdmux[0][2][1]$b$1678
      New ports: A=2'10, B=2'01, Y={ $memory$flatten\top_inst.\u9.$auto$proc_rom.cc:150:do_switch$600$rdmux[0][2][1]$b$1678 [3] $memory$flatten\top_inst.\u9.$auto$proc_rom.cc:150:do_switch$600$rdmux[0][2][1]$b$1678 [1] }
      New connections: { $memory$flatten\top_inst.\u9.$auto$proc_rom.cc:150:do_switch$600$rdmux[0][2][1]$b$1678 [6:4] $memory$flatten\top_inst.\u9.$auto$proc_rom.cc:150:do_switch$600$rdmux[0][2][1]$b$1678 [2] $memory$flatten\top_inst.\u9.$auto$proc_rom.cc:150:do_switch$600$rdmux[0][2][1]$b$1678 [0] } = { $memory$flatten\top_inst.\u9.$auto$proc_rom.cc:150:do_switch$600$rdmux[0][2][1]$b$1678 [3] $memory$flatten\top_inst.\u9.$auto$proc_rom.cc:150:do_switch$600$rdmux[0][2][1]$b$1678 [3] $memory$flatten\top_inst.\u9.$auto$proc_rom.cc:150:do_switch$600$rdmux[0][2][1]$b$1678 [3] 2'11 }
    Consolidated identical input bits for $mux cell $memory$flatten\top_inst.\u9.$auto$proc_rom.cc:150:do_switch$600$rdmux[0][3][2]$1691:
      Old ports: A=7'1100110, B=7'1101101, Y=$memory$flatten\top_inst.\u9.$auto$proc_rom.cc:150:do_switch$600$rdmux[0][2][1]$a$1677
      New ports: A=2'10, B=2'01, Y=$memory$flatten\top_inst.\u9.$auto$proc_rom.cc:150:do_switch$600$rdmux[0][2][1]$a$1677 [1:0]
      New connections: $memory$flatten\top_inst.\u9.$auto$proc_rom.cc:150:do_switch$600$rdmux[0][2][1]$a$1677 [6:2] = { 3'110 $memory$flatten\top_inst.\u9.$auto$proc_rom.cc:150:do_switch$600$rdmux[0][2][1]$a$1677 [0] 1'1 }
    Consolidated identical input bits for $mux cell $memory$flatten\top_inst.\u9.$auto$proc_rom.cc:150:do_switch$600$rdmux[0][3][1]$1688:
      Old ports: A=7'1011011, B=7'1001111, Y=$memory$flatten\top_inst.\u9.$auto$proc_rom.cc:150:do_switch$600$rdmux[0][2][0]$b$1675
      New ports: A=2'10, B=2'01, Y={ $memory$flatten\top_inst.\u9.$auto$proc_rom.cc:150:do_switch$600$rdmux[0][2][0]$b$1675 [4] $memory$flatten\top_inst.\u9.$auto$proc_rom.cc:150:do_switch$600$rdmux[0][2][0]$b$1675 [2] }
      New connections: { $memory$flatten\top_inst.\u9.$auto$proc_rom.cc:150:do_switch$600$rdmux[0][2][0]$b$1675 [6:5] $memory$flatten\top_inst.\u9.$auto$proc_rom.cc:150:do_switch$600$rdmux[0][2][0]$b$1675 [3] $memory$flatten\top_inst.\u9.$auto$proc_rom.cc:150:do_switch$600$rdmux[0][2][0]$b$1675 [1:0] } = 5'10111
    Consolidated identical input bits for $mux cell $memory$flatten\top_inst.\u9.$auto$proc_rom.cc:150:do_switch$600$rdmux[0][3][0]$1685:
      Old ports: A=7'0111111, B=7'0000110, Y=$memory$flatten\top_inst.\u9.$auto$proc_rom.cc:150:do_switch$600$rdmux[0][2][0]$a$1674
      New ports: A=1'1, B=1'0, Y=$memory$flatten\top_inst.\u9.$auto$proc_rom.cc:150:do_switch$600$rdmux[0][2][0]$a$1674 [0]
      New connections: $memory$flatten\top_inst.\u9.$auto$proc_rom.cc:150:do_switch$600$rdmux[0][2][0]$a$1674 [6:1] = { 1'0 $memory$flatten\top_inst.\u9.$auto$proc_rom.cc:150:do_switch$600$rdmux[0][2][0]$a$1674 [0] $memory$flatten\top_inst.\u9.$auto$proc_rom.cc:150:do_switch$600$rdmux[0][2][0]$a$1674 [0] $memory$flatten\top_inst.\u9.$auto$proc_rom.cc:150:do_switch$600$rdmux[0][2][0]$a$1674 [0] 2'11 }
    Consolidated identical input bits for $mux cell $memory$flatten\top_inst.\u9.$auto$proc_rom.cc:150:do_switch$604$rdmux[0][3][2]$1736:
      Old ports: A=7'1100110, B=7'1101101, Y=$memory$flatten\top_inst.\u9.$auto$proc_rom.cc:150:do_switch$604$rdmux[0][2][1]$a$1722
      New ports: A=2'10, B=2'01, Y=$memory$flatten\top_inst.\u9.$auto$proc_rom.cc:150:do_switch$604$rdmux[0][2][1]$a$1722 [1:0]
      New connections: $memory$flatten\top_inst.\u9.$auto$proc_rom.cc:150:do_switch$604$rdmux[0][2][1]$a$1722 [6:2] = { 3'110 $memory$flatten\top_inst.\u9.$auto$proc_rom.cc:150:do_switch$604$rdmux[0][2][1]$a$1722 [0] 1'1 }
    Consolidated identical input bits for $mux cell $flatten\ros.$procmux$1346:
      Old ports: A=3'001, B=3'111, Y=$flatten\ros.$procmux$1346_Y
      New ports: A=1'0, B=1'1, Y=$flatten\ros.$procmux$1346_Y [1]
      New connections: { $flatten\ros.$procmux$1346_Y [2] $flatten\ros.$procmux$1346_Y [0] } = { $flatten\ros.$procmux$1346_Y [1] 1'1 }
    Consolidated identical input bits for $mux cell $memory$flatten\top_inst.\u9.$auto$proc_rom.cc:150:do_switch$604$rdmux[0][3][1]$1733:
      Old ports: A=7'1011011, B=7'1001111, Y=$memory$flatten\top_inst.\u9.$auto$proc_rom.cc:150:do_switch$604$rdmux[0][2][0]$b$1720
      New ports: A=2'10, B=2'01, Y={ $memory$flatten\top_inst.\u9.$auto$proc_rom.cc:150:do_switch$604$rdmux[0][2][0]$b$1720 [4] $memory$flatten\top_inst.\u9.$auto$proc_rom.cc:150:do_switch$604$rdmux[0][2][0]$b$1720 [2] }
      New connections: { $memory$flatten\top_inst.\u9.$auto$proc_rom.cc:150:do_switch$604$rdmux[0][2][0]$b$1720 [6:5] $memory$flatten\top_inst.\u9.$auto$proc_rom.cc:150:do_switch$604$rdmux[0][2][0]$b$1720 [3] $memory$flatten\top_inst.\u9.$auto$proc_rom.cc:150:do_switch$604$rdmux[0][2][0]$b$1720 [1:0] } = 5'10111
    Consolidated identical input bits for $mux cell $memory$flatten\top_inst.\u9.$auto$proc_rom.cc:150:do_switch$604$rdmux[0][3][3]$1739:
      Old ports: A=7'1111101, B=7'0000111, Y=$memory$flatten\top_inst.\u9.$auto$proc_rom.cc:150:do_switch$604$rdmux[0][2][1]$b$1723
      New ports: A=2'10, B=2'01, Y={ $memory$flatten\top_inst.\u9.$auto$proc_rom.cc:150:do_switch$604$rdmux[0][2][1]$b$1723 [3] $memory$flatten\top_inst.\u9.$auto$proc_rom.cc:150:do_switch$604$rdmux[0][2][1]$b$1723 [1] }
      New connections: { $memory$flatten\top_inst.\u9.$auto$proc_rom.cc:150:do_switch$604$rdmux[0][2][1]$b$1723 [6:4] $memory$flatten\top_inst.\u9.$auto$proc_rom.cc:150:do_switch$604$rdmux[0][2][1]$b$1723 [2] $memory$flatten\top_inst.\u9.$auto$proc_rom.cc:150:do_switch$604$rdmux[0][2][1]$b$1723 [0] } = { $memory$flatten\top_inst.\u9.$auto$proc_rom.cc:150:do_switch$604$rdmux[0][2][1]$b$1723 [3] $memory$flatten\top_inst.\u9.$auto$proc_rom.cc:150:do_switch$604$rdmux[0][2][1]$b$1723 [3] $memory$flatten\top_inst.\u9.$auto$proc_rom.cc:150:do_switch$604$rdmux[0][2][1]$b$1723 [3] 2'11 }
    Consolidated identical input bits for $mux cell $flatten\uart_inst.\uart_tx_inst.$procmux$668:
      Old ports: A=19'0000000000000100000, B=19'0000000000000011111, Y=$flatten\uart_inst.\uart_tx_inst.$procmux$668_Y
      New ports: A=2'10, B=2'01, Y={ $flatten\uart_inst.\uart_tx_inst.$procmux$668_Y [5] $flatten\uart_inst.\uart_tx_inst.$procmux$668_Y [0] }
      New connections: { $flatten\uart_inst.\uart_tx_inst.$procmux$668_Y [18:6] $flatten\uart_inst.\uart_tx_inst.$procmux$668_Y [4:1] } = { 13'0000000000000 $flatten\uart_inst.\uart_tx_inst.$procmux$668_Y [0] $flatten\uart_inst.\uart_tx_inst.$procmux$668_Y [0] $flatten\uart_inst.\uart_tx_inst.$procmux$668_Y [0] $flatten\uart_inst.\uart_tx_inst.$procmux$668_Y [0] }
  Optimizing cells in module \ice40hx8k.
    Consolidated identical input bits for $mux cell $memory$flatten\top_inst.\u9.$auto$proc_rom.cc:150:do_switch$604$rdmux[0][2][2]$1724:
      Old ports: A=$memory$flatten\top_inst.\u9.$auto$proc_rom.cc:150:do_switch$604$rdmux[0][2][2]$a$1725, B=7'0000000, Y=$memory$flatten\top_inst.\u9.$auto$proc_rom.cc:150:do_switch$604$rdmux[0][1][1]$a$1716
      New ports: A={ $memory$flatten\top_inst.\u9.$auto$proc_rom.cc:150:do_switch$604$rdmux[0][2][2]$a$1725 [4] 1'1 }, B=2'00, Y={ $memory$flatten\top_inst.\u9.$auto$proc_rom.cc:150:do_switch$604$rdmux[0][1][1]$a$1716 [4] $memory$flatten\top_inst.\u9.$auto$proc_rom.cc:150:do_switch$604$rdmux[0][1][1]$a$1716 [0] }
      New connections: { $memory$flatten\top_inst.\u9.$auto$proc_rom.cc:150:do_switch$604$rdmux[0][1][1]$a$1716 [6:5] $memory$flatten\top_inst.\u9.$auto$proc_rom.cc:150:do_switch$604$rdmux[0][1][1]$a$1716 [3:1] } = { $memory$flatten\top_inst.\u9.$auto$proc_rom.cc:150:do_switch$604$rdmux[0][1][1]$a$1716 [0] $memory$flatten\top_inst.\u9.$auto$proc_rom.cc:150:do_switch$604$rdmux[0][1][1]$a$1716 [0] $memory$flatten\top_inst.\u9.$auto$proc_rom.cc:150:do_switch$604$rdmux[0][1][1]$a$1716 [0] $memory$flatten\top_inst.\u9.$auto$proc_rom.cc:150:do_switch$604$rdmux[0][1][1]$a$1716 [0] $memory$flatten\top_inst.\u9.$auto$proc_rom.cc:150:do_switch$604$rdmux[0][1][1]$a$1716 [0] }
    Consolidated identical input bits for $mux cell $memory$flatten\top_inst.\u9.$auto$proc_rom.cc:150:do_switch$604$rdmux[0][2][1]$1721:
      Old ports: A=$memory$flatten\top_inst.\u9.$auto$proc_rom.cc:150:do_switch$604$rdmux[0][2][1]$a$1722, B=$memory$flatten\top_inst.\u9.$auto$proc_rom.cc:150:do_switch$604$rdmux[0][2][1]$b$1723, Y=$memory$flatten\top_inst.\u9.$auto$proc_rom.cc:150:do_switch$604$rdmux[0][1][0]$b$1714
      New ports: A={ 2'10 $memory$flatten\top_inst.\u9.$auto$proc_rom.cc:150:do_switch$604$rdmux[0][2][1]$a$1722 [0] $memory$flatten\top_inst.\u9.$auto$proc_rom.cc:150:do_switch$604$rdmux[0][2][1]$a$1722 [1:0] }, B={ $memory$flatten\top_inst.\u9.$auto$proc_rom.cc:150:do_switch$604$rdmux[0][2][1]$b$1723 [3] $memory$flatten\top_inst.\u9.$auto$proc_rom.cc:150:do_switch$604$rdmux[0][2][1]$b$1723 [3] $memory$flatten\top_inst.\u9.$auto$proc_rom.cc:150:do_switch$604$rdmux[0][2][1]$b$1723 [3] $memory$flatten\top_inst.\u9.$auto$proc_rom.cc:150:do_switch$604$rdmux[0][2][1]$b$1723 [1] 1'1 }, Y={ $memory$flatten\top_inst.\u9.$auto$proc_rom.cc:150:do_switch$604$rdmux[0][1][0]$b$1714 [5:3] $memory$flatten\top_inst.\u9.$auto$proc_rom.cc:150:do_switch$604$rdmux[0][1][0]$b$1714 [1:0] }
      New connections: { $memory$flatten\top_inst.\u9.$auto$proc_rom.cc:150:do_switch$604$rdmux[0][1][0]$b$1714 [6] $memory$flatten\top_inst.\u9.$auto$proc_rom.cc:150:do_switch$604$rdmux[0][1][0]$b$1714 [2] } = { $memory$flatten\top_inst.\u9.$auto$proc_rom.cc:150:do_switch$604$rdmux[0][1][0]$b$1714 [5] 1'1 }
    Consolidated identical input bits for $mux cell $memory$flatten\top_inst.\u9.$auto$proc_rom.cc:150:do_switch$604$rdmux[0][2][0]$1718:
      Old ports: A=$memory$flatten\top_inst.\u9.$auto$proc_rom.cc:150:do_switch$604$rdmux[0][2][0]$a$1719, B=$memory$flatten\top_inst.\u9.$auto$proc_rom.cc:150:do_switch$604$rdmux[0][2][0]$b$1720, Y=$memory$flatten\top_inst.\u9.$auto$proc_rom.cc:150:do_switch$604$rdmux[0][1][0]$a$1713
      New ports: A={ 1'0 $memory$flatten\top_inst.\u9.$auto$proc_rom.cc:150:do_switch$604$rdmux[0][2][0]$a$1719 [0] $memory$flatten\top_inst.\u9.$auto$proc_rom.cc:150:do_switch$604$rdmux[0][2][0]$a$1719 [0] 1'1 $memory$flatten\top_inst.\u9.$auto$proc_rom.cc:150:do_switch$604$rdmux[0][2][0]$a$1719 [0] }, B={ 2'10 $memory$flatten\top_inst.\u9.$auto$proc_rom.cc:150:do_switch$604$rdmux[0][2][0]$b$1720 [4] $memory$flatten\top_inst.\u9.$auto$proc_rom.cc:150:do_switch$604$rdmux[0][2][0]$b$1720 [2] 1'1 }, Y={ $memory$flatten\top_inst.\u9.$auto$proc_rom.cc:150:do_switch$604$rdmux[0][1][0]$a$1713 [6:4] $memory$flatten\top_inst.\u9.$auto$proc_rom.cc:150:do_switch$604$rdmux[0][1][0]$a$1713 [2] $memory$flatten\top_inst.\u9.$auto$proc_rom.cc:150:do_switch$604$rdmux[0][1][0]$a$1713 [0] }
      New connections: { $memory$flatten\top_inst.\u9.$auto$proc_rom.cc:150:do_switch$604$rdmux[0][1][0]$a$1713 [3] $memory$flatten\top_inst.\u9.$auto$proc_rom.cc:150:do_switch$604$rdmux[0][1][0]$a$1713 [1] } = { $memory$flatten\top_inst.\u9.$auto$proc_rom.cc:150:do_switch$604$rdmux[0][1][0]$a$1713 [0] 1'1 }
    Consolidated identical input bits for $mux cell $memory$flatten\top_inst.\u9.$auto$proc_rom.cc:150:do_switch$600$rdmux[0][2][2]$1679:
      Old ports: A=$memory$flatten\top_inst.\u9.$auto$proc_rom.cc:150:do_switch$600$rdmux[0][2][2]$a$1680, B=7'0000000, Y=$memory$flatten\top_inst.\u9.$auto$proc_rom.cc:150:do_switch$600$rdmux[0][1][1]$a$1671
      New ports: A={ $memory$flatten\top_inst.\u9.$auto$proc_rom.cc:150:do_switch$600$rdmux[0][2][2]$a$1680 [4] 1'1 }, B=2'00, Y={ $memory$flatten\top_inst.\u9.$auto$proc_rom.cc:150:do_switch$600$rdmux[0][1][1]$a$1671 [4] $memory$flatten\top_inst.\u9.$auto$proc_rom.cc:150:do_switch$600$rdmux[0][1][1]$a$1671 [0] }
      New connections: { $memory$flatten\top_inst.\u9.$auto$proc_rom.cc:150:do_switch$600$rdmux[0][1][1]$a$1671 [6:5] $memory$flatten\top_inst.\u9.$auto$proc_rom.cc:150:do_switch$600$rdmux[0][1][1]$a$1671 [3:1] } = { $memory$flatten\top_inst.\u9.$auto$proc_rom.cc:150:do_switch$600$rdmux[0][1][1]$a$1671 [0] $memory$flatten\top_inst.\u9.$auto$proc_rom.cc:150:do_switch$600$rdmux[0][1][1]$a$1671 [0] $memory$flatten\top_inst.\u9.$auto$proc_rom.cc:150:do_switch$600$rdmux[0][1][1]$a$1671 [0] $memory$flatten\top_inst.\u9.$auto$proc_rom.cc:150:do_switch$600$rdmux[0][1][1]$a$1671 [0] $memory$flatten\top_inst.\u9.$auto$proc_rom.cc:150:do_switch$600$rdmux[0][1][1]$a$1671 [0] }
    Consolidated identical input bits for $mux cell $memory$flatten\top_inst.\u9.$auto$proc_rom.cc:150:do_switch$600$rdmux[0][2][1]$1676:
      Old ports: A=$memory$flatten\top_inst.\u9.$auto$proc_rom.cc:150:do_switch$600$rdmux[0][2][1]$a$1677, B=$memory$flatten\top_inst.\u9.$auto$proc_rom.cc:150:do_switch$600$rdmux[0][2][1]$b$1678, Y=$memory$flatten\top_inst.\u9.$auto$proc_rom.cc:150:do_switch$600$rdmux[0][1][0]$b$1669
      New ports: A={ 2'10 $memory$flatten\top_inst.\u9.$auto$proc_rom.cc:150:do_switch$600$rdmux[0][2][1]$a$1677 [0] $memory$flatten\top_inst.\u9.$auto$proc_rom.cc:150:do_switch$600$rdmux[0][2][1]$a$1677 [1:0] }, B={ $memory$flatten\top_inst.\u9.$auto$proc_rom.cc:150:do_switch$600$rdmux[0][2][1]$b$1678 [3] $memory$flatten\top_inst.\u9.$auto$proc_rom.cc:150:do_switch$600$rdmux[0][2][1]$b$1678 [3] $memory$flatten\top_inst.\u9.$auto$proc_rom.cc:150:do_switch$600$rdmux[0][2][1]$b$1678 [3] $memory$flatten\top_inst.\u9.$auto$proc_rom.cc:150:do_switch$600$rdmux[0][2][1]$b$1678 [1] 1'1 }, Y={ $memory$flatten\top_inst.\u9.$auto$proc_rom.cc:150:do_switch$600$rdmux[0][1][0]$b$1669 [5:3] $memory$flatten\top_inst.\u9.$auto$proc_rom.cc:150:do_switch$600$rdmux[0][1][0]$b$1669 [1:0] }
      New connections: { $memory$flatten\top_inst.\u9.$auto$proc_rom.cc:150:do_switch$600$rdmux[0][1][0]$b$1669 [6] $memory$flatten\top_inst.\u9.$auto$proc_rom.cc:150:do_switch$600$rdmux[0][1][0]$b$1669 [2] } = { $memory$flatten\top_inst.\u9.$auto$proc_rom.cc:150:do_switch$600$rdmux[0][1][0]$b$1669 [5] 1'1 }
    Consolidated identical input bits for $mux cell $memory$flatten\top_inst.\u9.$auto$proc_rom.cc:150:do_switch$600$rdmux[0][2][0]$1673:
      Old ports: A=$memory$flatten\top_inst.\u9.$auto$proc_rom.cc:150:do_switch$600$rdmux[0][2][0]$a$1674, B=$memory$flatten\top_inst.\u9.$auto$proc_rom.cc:150:do_switch$600$rdmux[0][2][0]$b$1675, Y=$memory$flatten\top_inst.\u9.$auto$proc_rom.cc:150:do_switch$600$rdmux[0][1][0]$a$1668
      New ports: A={ 1'0 $memory$flatten\top_inst.\u9.$auto$proc_rom.cc:150:do_switch$600$rdmux[0][2][0]$a$1674 [0] $memory$flatten\top_inst.\u9.$auto$proc_rom.cc:150:do_switch$600$rdmux[0][2][0]$a$1674 [0] 1'1 $memory$flatten\top_inst.\u9.$auto$proc_rom.cc:150:do_switch$600$rdmux[0][2][0]$a$1674 [0] }, B={ 2'10 $memory$flatten\top_inst.\u9.$auto$proc_rom.cc:150:do_switch$600$rdmux[0][2][0]$b$1675 [4] $memory$flatten\top_inst.\u9.$auto$proc_rom.cc:150:do_switch$600$rdmux[0][2][0]$b$1675 [2] 1'1 }, Y={ $memory$flatten\top_inst.\u9.$auto$proc_rom.cc:150:do_switch$600$rdmux[0][1][0]$a$1668 [6:4] $memory$flatten\top_inst.\u9.$auto$proc_rom.cc:150:do_switch$600$rdmux[0][1][0]$a$1668 [2] $memory$flatten\top_inst.\u9.$auto$proc_rom.cc:150:do_switch$600$rdmux[0][1][0]$a$1668 [0] }
      New connections: { $memory$flatten\top_inst.\u9.$auto$proc_rom.cc:150:do_switch$600$rdmux[0][1][0]$a$1668 [3] $memory$flatten\top_inst.\u9.$auto$proc_rom.cc:150:do_switch$600$rdmux[0][1][0]$a$1668 [1] } = { $memory$flatten\top_inst.\u9.$auto$proc_rom.cc:150:do_switch$600$rdmux[0][1][0]$a$1668 [0] 1'1 }
    Consolidated identical input bits for $mux cell $flatten\ros.$procmux$1349:
      Old ports: A=$flatten\ros.$procmux$1346_Y, B=3'110, Y=$flatten\ros.$procmux$1349_Y
      New ports: A={ $flatten\ros.$procmux$1346_Y [1] 1'1 }, B=2'10, Y=$flatten\ros.$procmux$1349_Y [1:0]
      New connections: $flatten\ros.$procmux$1349_Y [2] = $flatten\ros.$procmux$1349_Y [1]
    Consolidated identical input bits for $mux cell $flatten\uart_inst.\uart_tx_inst.$procmux$673:
      Old ports: A=$flatten\uart_inst.\uart_tx_inst.$procmux$668_Y, B=19'0000000000000011111, Y=$flatten\uart_inst.\uart_tx_inst.$procmux$673_Y
      New ports: A={ $flatten\uart_inst.\uart_tx_inst.$procmux$668_Y [5] $flatten\uart_inst.\uart_tx_inst.$procmux$668_Y [0] }, B=2'01, Y={ $flatten\uart_inst.\uart_tx_inst.$procmux$673_Y [5] $flatten\uart_inst.\uart_tx_inst.$procmux$673_Y [0] }
      New connections: { $flatten\uart_inst.\uart_tx_inst.$procmux$673_Y [18:6] $flatten\uart_inst.\uart_tx_inst.$procmux$673_Y [4:1] } = { 13'0000000000000 $flatten\uart_inst.\uart_tx_inst.$procmux$673_Y [0] $flatten\uart_inst.\uart_tx_inst.$procmux$673_Y [0] $flatten\uart_inst.\uart_tx_inst.$procmux$673_Y [0] $flatten\uart_inst.\uart_tx_inst.$procmux$673_Y [0] }
  Optimizing cells in module \ice40hx8k.
    Consolidated identical input bits for $mux cell $memory$flatten\top_inst.\u9.$auto$proc_rom.cc:150:do_switch$604$rdmux[0][1][1]$1715:
      Old ports: A=$memory$flatten\top_inst.\u9.$auto$proc_rom.cc:150:do_switch$604$rdmux[0][1][1]$a$1716, B=7'0000000, Y=$memory$flatten\top_inst.\u9.$auto$proc_rom.cc:150:do_switch$604$rdmux[0][0][0]$b$1711
      New ports: A={ $memory$flatten\top_inst.\u9.$auto$proc_rom.cc:150:do_switch$604$rdmux[0][1][1]$a$1716 [4] $memory$flatten\top_inst.\u9.$auto$proc_rom.cc:150:do_switch$604$rdmux[0][1][1]$a$1716 [0] }, B=2'00, Y={ $memory$flatten\top_inst.\u9.$auto$proc_rom.cc:150:do_switch$604$rdmux[0][0][0]$b$1711 [4] $memory$flatten\top_inst.\u9.$auto$proc_rom.cc:150:do_switch$604$rdmux[0][0][0]$b$1711 [0] }
      New connections: { $memory$flatten\top_inst.\u9.$auto$proc_rom.cc:150:do_switch$604$rdmux[0][0][0]$b$1711 [6:5] $memory$flatten\top_inst.\u9.$auto$proc_rom.cc:150:do_switch$604$rdmux[0][0][0]$b$1711 [3:1] } = { $memory$flatten\top_inst.\u9.$auto$proc_rom.cc:150:do_switch$604$rdmux[0][0][0]$b$1711 [0] $memory$flatten\top_inst.\u9.$auto$proc_rom.cc:150:do_switch$604$rdmux[0][0][0]$b$1711 [0] $memory$flatten\top_inst.\u9.$auto$proc_rom.cc:150:do_switch$604$rdmux[0][0][0]$b$1711 [0] $memory$flatten\top_inst.\u9.$auto$proc_rom.cc:150:do_switch$604$rdmux[0][0][0]$b$1711 [0] $memory$flatten\top_inst.\u9.$auto$proc_rom.cc:150:do_switch$604$rdmux[0][0][0]$b$1711 [0] }
    Consolidated identical input bits for $mux cell $memory$flatten\top_inst.\u9.$auto$proc_rom.cc:150:do_switch$600$rdmux[0][1][1]$1670:
      Old ports: A=$memory$flatten\top_inst.\u9.$auto$proc_rom.cc:150:do_switch$600$rdmux[0][1][1]$a$1671, B=7'0000000, Y=$memory$flatten\top_inst.\u9.$auto$proc_rom.cc:150:do_switch$600$rdmux[0][0][0]$b$1666
      New ports: A={ $memory$flatten\top_inst.\u9.$auto$proc_rom.cc:150:do_switch$600$rdmux[0][1][1]$a$1671 [4] $memory$flatten\top_inst.\u9.$auto$proc_rom.cc:150:do_switch$600$rdmux[0][1][1]$a$1671 [0] }, B=2'00, Y={ $memory$flatten\top_inst.\u9.$auto$proc_rom.cc:150:do_switch$600$rdmux[0][0][0]$b$1666 [4] $memory$flatten\top_inst.\u9.$auto$proc_rom.cc:150:do_switch$600$rdmux[0][0][0]$b$1666 [0] }
      New connections: { $memory$flatten\top_inst.\u9.$auto$proc_rom.cc:150:do_switch$600$rdmux[0][0][0]$b$1666 [6:5] $memory$flatten\top_inst.\u9.$auto$proc_rom.cc:150:do_switch$600$rdmux[0][0][0]$b$1666 [3:1] } = { $memory$flatten\top_inst.\u9.$auto$proc_rom.cc:150:do_switch$600$rdmux[0][0][0]$b$1666 [0] $memory$flatten\top_inst.\u9.$auto$proc_rom.cc:150:do_switch$600$rdmux[0][0][0]$b$1666 [0] $memory$flatten\top_inst.\u9.$auto$proc_rom.cc:150:do_switch$600$rdmux[0][0][0]$b$1666 [0] $memory$flatten\top_inst.\u9.$auto$proc_rom.cc:150:do_switch$600$rdmux[0][0][0]$b$1666 [0] $memory$flatten\top_inst.\u9.$auto$proc_rom.cc:150:do_switch$600$rdmux[0][0][0]$b$1666 [0] }
  Optimizing cells in module \ice40hx8k.
Performed a total of 22 changes.

16.29.5. Executing OPT_MERGE pass (detect identical cells).
Finding identical cells in module `\ice40hx8k'.
<suppressed ~18 debug messages>
Removed a total of 6 cells.

16.29.6. Executing OPT_DFF pass (perform DFF optimizations).

16.29.7. Executing OPT_CLEAN pass (remove unused cells and wires).
Finding unused cells or wires in module \ice40hx8k..
Removed 0 unused cells and 46 unused wires.
<suppressed ~1 debug messages>

16.29.8. Executing OPT_EXPR pass (perform const folding).
Optimizing module ice40hx8k.

16.29.9. Rerunning OPT passes. (Maybe there is more to do..)

16.29.10. Executing OPT_MUXTREE pass (detect dead branches in mux trees).
Running muxtree optimizer on module \ice40hx8k..
  Creating internal representation of mux trees.
  Evaluating internal representation of mux trees.
  Analyzing evaluation results.
Removed 0 multiplexer ports.
<suppressed ~16 debug messages>

16.29.11. Executing OPT_REDUCE pass (consolidate $*mux and $reduce_* inputs).
  Optimizing cells in module \ice40hx8k.
Performed a total of 0 changes.

16.29.12. Executing OPT_MERGE pass (detect identical cells).
Finding identical cells in module `\ice40hx8k'.
Removed a total of 0 cells.

16.29.13. Executing OPT_DFF pass (perform DFF optimizations).
Adding SRST signal on $auto$ff.cc:266:slice$1541 ($dffe) from module ice40hx8k (D = $auto$wreduce.cc:455:run$1587 [18:6], Q = \uart_inst.uart_tx_inst.prescale_reg [18:6], rval = 13'0000000000000).

16.29.14. Executing OPT_CLEAN pass (remove unused cells and wires).
Finding unused cells or wires in module \ice40hx8k..

16.29.15. Executing OPT_EXPR pass (perform const folding).
Optimizing module ice40hx8k.

16.29.16. Rerunning OPT passes. (Maybe there is more to do..)

16.29.17. Executing OPT_MUXTREE pass (detect dead branches in mux trees).
Running muxtree optimizer on module \ice40hx8k..
  Creating internal representation of mux trees.
  Evaluating internal representation of mux trees.
  Analyzing evaluation results.
Removed 0 multiplexer ports.
<suppressed ~16 debug messages>

16.29.18. Executing OPT_REDUCE pass (consolidate $*mux and $reduce_* inputs).
  Optimizing cells in module \ice40hx8k.
Performed a total of 0 changes.

16.29.19. Executing OPT_MERGE pass (detect identical cells).
Finding identical cells in module `\ice40hx8k'.
Removed a total of 0 cells.

16.29.20. Executing OPT_DFF pass (perform DFF optimizations).

16.29.21. Executing OPT_CLEAN pass (remove unused cells and wires).
Finding unused cells or wires in module \ice40hx8k..

16.29.22. Executing OPT_EXPR pass (perform const folding).
Optimizing module ice40hx8k.

16.29.23. Finished OPT passes. (There is nothing left to do.)

16.30. Executing ICE40_WRAPCARRY pass (wrap carries).

16.31. Executing TECHMAP pass (map to technology primitives).

16.31.1. Executing Verilog-2005 frontend: /home/shay/a/ece270/bin/../share/yosys/techmap.v
Parsing Verilog input from `/home/shay/a/ece270/bin/../share/yosys/techmap.v' to AST representation.
Generating RTLIL representation for module `\_90_simplemap_bool_ops'.
Generating RTLIL representation for module `\_90_simplemap_reduce_ops'.
Generating RTLIL representation for module `\_90_simplemap_logic_ops'.
Generating RTLIL representation for module `\_90_simplemap_compare_ops'.
Generating RTLIL representation for module `\_90_simplemap_various'.
Generating RTLIL representation for module `\_90_simplemap_registers'.
Generating RTLIL representation for module `\_90_shift_ops_shr_shl_sshl_sshr'.
Generating RTLIL representation for module `\_90_shift_shiftx'.
Generating RTLIL representation for module `\_90_fa'.
Generating RTLIL representation for module `\_90_lcu'.
Generating RTLIL representation for module `\_90_alu'.
Generating RTLIL representation for module `\_90_macc'.
Generating RTLIL representation for module `\_90_alumacc'.
Generating RTLIL representation for module `\$__div_mod_u'.
Generating RTLIL representation for module `\$__div_mod_trunc'.
Generating RTLIL representation for module `\_90_div'.
Generating RTLIL representation for module `\_90_mod'.
Generating RTLIL representation for module `\$__div_mod_floor'.
Generating RTLIL representation for module `\_90_divfloor'.
Generating RTLIL representation for module `\_90_modfloor'.
Generating RTLIL representation for module `\_90_pow'.
Generating RTLIL representation for module `\_90_pmux'.
Generating RTLIL representation for module `\_90_demux'.
Generating RTLIL representation for module `\_90_lut'.
Successfully finished Verilog frontend.

16.31.2. Executing Verilog-2005 frontend: /home/shay/a/ece270/bin/../share/yosys/ice40/arith_map.v
Parsing Verilog input from `/home/shay/a/ece270/bin/../share/yosys/ice40/arith_map.v' to AST representation.
Generating RTLIL representation for module `\_80_ice40_alu'.
Successfully finished Verilog frontend.

16.31.3. Continuing TECHMAP pass.
Using extmapper simplemap for cells of type $eq.
Using extmapper simplemap for cells of type $not.
Using extmapper simplemap for cells of type $mux.
Using extmapper simplemap for cells of type $logic_and.
Using extmapper simplemap for cells of type $sdff.
Using extmapper simplemap for cells of type $logic_not.
Using template $paramod$3826c06832e910ed7e3a5e37dc9a6adea7917f5a\_80_ice40_alu for cells of type $alu.
Using extmapper simplemap for cells of type $sdffce.
Using extmapper simplemap for cells of type $adffe.
Using template $paramod$2af30114e9bd4ccb04dad757b3f0a8f6bf0615b0\_80_ice40_alu for cells of type $alu.
Using extmapper simplemap for cells of type $or.
Using extmapper simplemap for cells of type $reduce_or.
Using extmapper simplemap for cells of type $and.
Using extmapper simplemap for cells of type $reduce_and.
Using extmapper simplemap for cells of type $reduce_bool.
Using extmapper simplemap for cells of type $lut.
Using extmapper simplemap for cells of type $ne.
Using extmapper simplemap for cells of type $adff.
Using extmapper simplemap for cells of type $dffe.
Using template $paramod$8742280fdebca84e1c87f2a86ed84f62d558f4cc\_80_ice40_alu for cells of type $alu.
Using extmapper simplemap for cells of type $logic_or.
Using template $paramod$20b1d0597707d55efcb9664e40f63985956d7680\_80_ice40_alu for cells of type $alu.
Using template $paramod$9398518f3a66906c93ac7eaad9a961f31111e0c1\_90_pmux for cells of type $pmux.
Using extmapper simplemap for cells of type $pos.
Using extmapper simplemap for cells of type $xor.
No more expansions possible.
<suppressed ~326 debug messages>

16.32. Executing OPT pass (performing simple optimizations).

16.32.1. Executing OPT_EXPR pass (perform const folding).
Optimizing module ice40hx8k.
<suppressed ~514 debug messages>

16.32.2. Executing OPT_MERGE pass (detect identical cells).
Finding identical cells in module `\ice40hx8k'.
<suppressed ~468 debug messages>
Removed a total of 156 cells.

16.32.3. Executing OPT_DFF pass (perform DFF optimizations).

16.32.4. Executing OPT_CLEAN pass (remove unused cells and wires).
Finding unused cells or wires in module \ice40hx8k..
Removed 26 unused cells and 224 unused wires.
<suppressed ~27 debug messages>

16.32.5. Finished fast OPT passes.

16.33. Executing ICE40_OPT pass (performing simple optimizations).

16.33.1. Running ICE40 specific optimizations.
Optimized $__ICE40_CARRY_WRAPPER cell back to logic (without SB_CARRY) ice40hx8k.$auto$alumacc.cc:485:replace_alu$1594.slice[0].carry: CO=$auto$alumacc.cc:485:replace_alu$1594.BB [0]
Optimized $__ICE40_CARRY_WRAPPER cell back to logic (without SB_CARRY) ice40hx8k.$auto$alumacc.cc:485:replace_alu$1599.slice[0].carry: CO=\ctr [0]
Optimized $__ICE40_CARRY_WRAPPER cell back to logic (without SB_CARRY) ice40hx8k.$auto$alumacc.cc:485:replace_alu$1614.slice[0].carry: CO=\uart_inst.uart_tx_inst.bit_cnt [0]
Optimized $__ICE40_CARRY_WRAPPER cell back to logic (without SB_CARRY) ice40hx8k.$auto$alumacc.cc:485:replace_alu$1617.slice[0].carry: CO=\uart_inst.uart_tx_inst.prescale_reg [0]

16.33.2. Executing OPT_EXPR pass (perform const folding).
Optimizing module ice40hx8k.
<suppressed ~10 debug messages>

16.33.3. Executing OPT_MERGE pass (detect identical cells).
Finding identical cells in module `\ice40hx8k'.
Removed a total of 0 cells.

16.33.4. Executing OPT_DFF pass (perform DFF optimizations).

16.33.5. Executing OPT_CLEAN pass (remove unused cells and wires).
Finding unused cells or wires in module \ice40hx8k..
Removed 1 unused cells and 3 unused wires.
<suppressed ~2 debug messages>

16.33.6. Rerunning OPT passes. (Removed registers in this run.)

16.33.7. Running ICE40 specific optimizations.

16.33.8. Executing OPT_EXPR pass (perform const folding).
Optimizing module ice40hx8k.

16.33.9. Executing OPT_MERGE pass (detect identical cells).
Finding identical cells in module `\ice40hx8k'.
Removed a total of 0 cells.

16.33.10. Executing OPT_DFF pass (perform DFF optimizations).

16.33.11. Executing OPT_CLEAN pass (remove unused cells and wires).
Finding unused cells or wires in module \ice40hx8k..

16.33.12. Finished OPT passes. (There is nothing left to do.)

16.34. Executing DFFLEGALIZE pass (convert FFs to types supported by the target).

16.35. Executing TECHMAP pass (map to technology primitives).

16.35.1. Executing Verilog-2005 frontend: /home/shay/a/ece270/bin/../share/yosys/ice40/ff_map.v
Parsing Verilog input from `/home/shay/a/ece270/bin/../share/yosys/ice40/ff_map.v' to AST representation.
Generating RTLIL representation for module `\$_DFF_N_'.
Generating RTLIL representation for module `\$_DFF_P_'.
Generating RTLIL representation for module `\$_DFFE_NP_'.
Generating RTLIL representation for module `\$_DFFE_PP_'.
Generating RTLIL representation for module `\$_DFF_NP0_'.
Generating RTLIL representation for module `\$_DFF_NP1_'.
Generating RTLIL representation for module `\$_DFF_PP0_'.
Generating RTLIL representation for module `\$_DFF_PP1_'.
Generating RTLIL representation for module `\$_DFFE_NP0P_'.
Generating RTLIL representation for module `\$_DFFE_NP1P_'.
Generating RTLIL representation for module `\$_DFFE_PP0P_'.
Generating RTLIL representation for module `\$_DFFE_PP1P_'.
Generating RTLIL representation for module `\$_SDFF_NP0_'.
Generating RTLIL representation for module `\$_SDFF_NP1_'.
Generating RTLIL representation for module `\$_SDFF_PP0_'.
Generating RTLIL representation for module `\$_SDFF_PP1_'.
Generating RTLIL representation for module `\$_SDFFCE_NP0P_'.
Generating RTLIL representation for module `\$_SDFFCE_NP1P_'.
Generating RTLIL representation for module `\$_SDFFCE_PP0P_'.
Generating RTLIL representation for module `\$_SDFFCE_PP1P_'.
Successfully finished Verilog frontend.

16.35.2. Continuing TECHMAP pass.
Using template \$_SDFF_PP0_ for cells of type $_SDFF_PP0_.
Using template \$_DFFE_PP_ for cells of type $_DFFE_PP_.
Using template \$_DFF_PP0_ for cells of type $_DFF_PP0_.
Using template \$_DFFE_PP0P_ for cells of type $_DFFE_PP0P_.
Using template \$_SDFFCE_PP1P_ for cells of type $_SDFFCE_PP1P_.
Using template \$_SDFFCE_PP0P_ for cells of type $_SDFFCE_PP0P_.
Using template \$_DFF_PP1_ for cells of type $_DFF_PP1_.
No more expansions possible.
<suppressed ~153 debug messages>

16.36. Executing OPT_EXPR pass (perform const folding).
Optimizing module ice40hx8k.

16.37. Executing SIMPLEMAP pass (map simple cells to gate primitives).
Mapping ice40hx8k.$auto$alumacc.cc:485:replace_alu$1599.slice[0].carry ($lut).
Mapping ice40hx8k.$auto$alumacc.cc:485:replace_alu$1614.slice[0].carry ($lut).
Mapping ice40hx8k.$auto$alumacc.cc:485:replace_alu$1617.slice[0].carry ($lut).

16.38. Executing ICE40_OPT pass (performing simple optimizations).

16.38.1. Running ICE40 specific optimizations.

16.38.2. Executing OPT_EXPR pass (perform const folding).
Optimizing module ice40hx8k.
<suppressed ~68 debug messages>

16.38.3. Executing OPT_MERGE pass (detect identical cells).
Finding identical cells in module `\ice40hx8k'.
<suppressed ~78 debug messages>
Removed a total of 26 cells.

16.38.4. Executing OPT_DFF pass (perform DFF optimizations).

16.38.5. Executing OPT_CLEAN pass (remove unused cells and wires).
Finding unused cells or wires in module \ice40hx8k..
Removed 0 unused cells and 724 unused wires.
<suppressed ~1 debug messages>

16.38.6. Rerunning OPT passes. (Removed registers in this run.)

16.38.7. Running ICE40 specific optimizations.

16.38.8. Executing OPT_EXPR pass (perform const folding).
Optimizing module ice40hx8k.

16.38.9. Executing OPT_MERGE pass (detect identical cells).
Finding identical cells in module `\ice40hx8k'.
Removed a total of 0 cells.

16.38.10. Executing OPT_DFF pass (perform DFF optimizations).

16.38.11. Executing OPT_CLEAN pass (remove unused cells and wires).
Finding unused cells or wires in module \ice40hx8k..

16.38.12. Finished OPT passes. (There is nothing left to do.)

16.39. Executing TECHMAP pass (map to technology primitives).

16.39.1. Executing Verilog-2005 frontend: /home/shay/a/ece270/bin/../share/yosys/ice40/latches_map.v
Parsing Verilog input from `/home/shay/a/ece270/bin/../share/yosys/ice40/latches_map.v' to AST representation.
Generating RTLIL representation for module `\$_DLATCH_N_'.
Generating RTLIL representation for module `\$_DLATCH_P_'.
Successfully finished Verilog frontend.

16.39.2. Continuing TECHMAP pass.
No more expansions possible.
<suppressed ~4 debug messages>

16.40. Executing ABC pass (technology mapping using ABC).

16.40.1. Extracting gate netlist of module `\ice40hx8k' to `<abc-temp-dir>/input.blif'..
Extracted 375 gates and 492 wires to a netlist network with 115 inputs and 84 outputs.

16.40.1.1. Executing ABC.
Running ABC command: "<yosys-exe-dir>/yosys-abc" -s -f <abc-temp-dir>/abc.script 2>&1
ABC: ABC command line: "source <abc-temp-dir>/abc.script".
ABC: 
ABC: + read_blif <abc-temp-dir>/input.blif 
ABC: + read_lut <abc-temp-dir>/lutdefs.txt 
ABC: + strash 
ABC: + &get -n 
ABC: + &fraig -x 
ABC: + &put 
ABC: + scorr 
ABC: Warning: The network is combinational (run "fraig" or "fraig_sweep").
ABC: + dc2 
ABC: + dretime 
ABC: + strash 
ABC: + dch -f 
ABC: + if 
ABC: + mfs2 
ABC: + lutpack -S 1 
ABC: + dress <abc-temp-dir>/input.blif 
ABC: Total number of equiv classes                =     110.
ABC: Participating nodes from both networks       =     245.
ABC: Participating nodes from the first network   =     109. (  80.15 % of nodes)
ABC: Participating nodes from the second network  =     136. ( 100.00 % of nodes)
ABC: Node pairs (any polarity)                    =     109. (  80.15 % of names can be moved)
ABC: Node pairs (same polarity)                   =      95. (  69.85 % of names can be moved)
ABC: Total runtime =     0.03 sec
ABC: + write_blif <abc-temp-dir>/output.blif 

16.40.1.2. Re-integrating ABC results.
ABC RESULTS:              $lut cells:      135
ABC RESULTS:        internal signals:      293
ABC RESULTS:           input signals:      115
ABC RESULTS:          output signals:       84
Removing temp directory.

16.41. Executing ICE40_WRAPCARRY pass (wrap carries).

16.42. Executing TECHMAP pass (map to technology primitives).

16.42.1. Executing Verilog-2005 frontend: /home/shay/a/ece270/bin/../share/yosys/ice40/ff_map.v
Parsing Verilog input from `/home/shay/a/ece270/bin/../share/yosys/ice40/ff_map.v' to AST representation.
Generating RTLIL representation for module `\$_DFF_N_'.
Generating RTLIL representation for module `\$_DFF_P_'.
Generating RTLIL representation for module `\$_DFFE_NP_'.
Generating RTLIL representation for module `\$_DFFE_PP_'.
Generating RTLIL representation for module `\$_DFF_NP0_'.
Generating RTLIL representation for module `\$_DFF_NP1_'.
Generating RTLIL representation for module `\$_DFF_PP0_'.
Generating RTLIL representation for module `\$_DFF_PP1_'.
Generating RTLIL representation for module `\$_DFFE_NP0P_'.
Generating RTLIL representation for module `\$_DFFE_NP1P_'.
Generating RTLIL representation for module `\$_DFFE_PP0P_'.
Generating RTLIL representation for module `\$_DFFE_PP1P_'.
Generating RTLIL representation for module `\$_SDFF_NP0_'.
Generating RTLIL representation for module `\$_SDFF_NP1_'.
Generating RTLIL representation for module `\$_SDFF_PP0_'.
Generating RTLIL representation for module `\$_SDFF_PP1_'.
Generating RTLIL representation for module `\$_SDFFCE_NP0P_'.
Generating RTLIL representation for module `\$_SDFFCE_NP1P_'.
Generating RTLIL representation for module `\$_SDFFCE_PP0P_'.
Generating RTLIL representation for module `\$_SDFFCE_PP1P_'.
Successfully finished Verilog frontend.

16.42.2. Continuing TECHMAP pass.
No more expansions possible.
<suppressed ~22 debug messages>
Removed 29 unused cells and 399 unused wires.

16.43. Executing OPT_LUT pass (optimize LUTs).
Discovering LUTs.
Number of LUTs:      167
  1-LUT               23
  2-LUT               30
  3-LUT               61
  4-LUT               53
  with \SB_CARRY    (#0)   33
  with \SB_CARRY    (#1)   34

Eliminating LUTs.
Number of LUTs:      167
  1-LUT               23
  2-LUT               30
  3-LUT               61
  4-LUT               53
  with \SB_CARRY    (#0)   33
  with \SB_CARRY    (#1)   34

Combining LUTs.
Number of LUTs:      167
  1-LUT               23
  2-LUT               30
  3-LUT               61
  4-LUT               53
  with \SB_CARRY    (#0)   33
  with \SB_CARRY    (#1)   34

Eliminated 0 LUTs.
Combined 0 LUTs.
<suppressed ~641 debug messages>

16.44. Executing TECHMAP pass (map to technology primitives).

16.44.1. Executing Verilog-2005 frontend: /home/shay/a/ece270/bin/../share/yosys/ice40/cells_map.v
Parsing Verilog input from `/home/shay/a/ece270/bin/../share/yosys/ice40/cells_map.v' to AST representation.
Generating RTLIL representation for module `\$lut'.
Successfully finished Verilog frontend.

16.44.2. Continuing TECHMAP pass.
Using template $paramod$fd904e9e35cfd343a9df248824bd3f1408724879\$lut for cells of type $lut.
Using template $paramod$658b9ed803f0d3d335616d3858b53e0a2522f1e8\$lut for cells of type $lut.
Using template $paramod\$lut\WIDTH=32'00000000000000000000000000000010\LUT=4'0100 for cells of type $lut.
Using template $paramod\$lut\WIDTH=32'00000000000000000000000000000010\LUT=4'0001 for cells of type $lut.
Using template $paramod\$lut\WIDTH=32'00000000000000000000000000000011\LUT=8'01001111 for cells of type $lut.
Using template $paramod\$lut\WIDTH=32'00000000000000000000000000000011\LUT=8'00000001 for cells of type $lut.
Using template $paramod$608f40069c27841a5b3bdf03643a34bdc8974072\$lut for cells of type $lut.
Using template $paramod$65638f8febbdd45770f403709fe5a3c8c1481fab\$lut for cells of type $lut.
Using template $paramod$fb5ee0bdef1c4e74aaf1fd8efae98b46a2f5e564\$lut for cells of type $lut.
Using template $paramod$571404c0889eaf57f492cb5e37f8acb5df5852f9\$lut for cells of type $lut.
Using template $paramod$8b5cfd51a136f15086c81819c3ac4e80128b684d\$lut for cells of type $lut.
Using template $paramod$6d6beead1425af15cf78b27fd9b11b41b5d4bce8\$lut for cells of type $lut.
Using template $paramod$9c9e14a51f082901c37518c9a35d78dd45431d88\$lut for cells of type $lut.
Using template $paramod$6e238df02989b317f10820a22773676e71120644\$lut for cells of type $lut.
Using template $paramod\$lut\WIDTH=32'00000000000000000000000000000011\LUT=8'01000000 for cells of type $lut.
Using template $paramod\$lut\WIDTH=32'00000000000000000000000000000011\LUT=8'01110001 for cells of type $lut.
Using template $paramod\$lut\WIDTH=32'00000000000000000000000000000001\LUT=2'01 for cells of type $lut.
Using template $paramod\$lut\WIDTH=32'00000000000000000000000000000011\LUT=8'00010000 for cells of type $lut.
Using template $paramod\$lut\WIDTH=32'00000000000000000000000000000011\LUT=8'10000000 for cells of type $lut.
Using template $paramod$bba54c1ef87367812b4c15f4aed5ac70773df775\$lut for cells of type $lut.
Using template $paramod$97e449d15b607612c49291044eca4e2c8b59088e\$lut for cells of type $lut.
Using template $paramod$332a399730bfc61adea04021a76b1c4e4030f37d\$lut for cells of type $lut.
Using template $paramod$4b2297966ddb718657b80566604f97685ffc0120\$lut for cells of type $lut.
Using template $paramod\$lut\WIDTH=32'00000000000000000000000000000010\LUT=4'1000 for cells of type $lut.
Using template $paramod$94ac66a11090dca84889e55fcf03297912a5b7ec\$lut for cells of type $lut.
Using template $paramod\$lut\WIDTH=32'00000000000000000000000000000011\LUT=8'01110000 for cells of type $lut.
Using template $paramod$a670b08a47dd8a34f954c50cd06e9996d77e8467\$lut for cells of type $lut.
Using template $paramod\$lut\WIDTH=32'00000000000000000000000000000010\LUT=4'0111 for cells of type $lut.
Using template $paramod$ab8bb87959c5d7cfa27886cee1355b38e054a61a\$lut for cells of type $lut.
Using template $paramod\$lut\WIDTH=32'00000000000000000000000000000011\LUT=8'00011111 for cells of type $lut.
Using template $paramod$965f8f2fa1a796a6c51222eabb50fbd26e97d98b\$lut for cells of type $lut.
Using template $paramod\$lut\WIDTH=32'00000000000000000000000000000011\LUT=8'11110100 for cells of type $lut.
Using template $paramod$b431bfd938e35871dd0b7668e1503c7e8b9d491c\$lut for cells of type $lut.
Using template $paramod\$lut\WIDTH=32'00000000000000000000000000000011\LUT=8'11110001 for cells of type $lut.
Using template $paramod\$lut\WIDTH=32'00000000000000000000000000000011\LUT=8'01100000 for cells of type $lut.
Using template $paramod$bcfbb1999aac824cac244afc5c10183ec65c9885\$lut for cells of type $lut.
Using template $paramod\$lut\WIDTH=32'00000000000000000000000000000011\LUT=8'11111000 for cells of type $lut.
Using template $paramod$38f9bf4dd2329347b8471f0a98443dd323386889\$lut for cells of type $lut.
Using template $paramod$429a63bed507721f90b8fd36d5e79f6511ffc6ca\$lut for cells of type $lut.
Using template $paramod$1282beb52fbf06cc092828b592fc29f62fa095a2\$lut for cells of type $lut.
Using template $paramod$0c14750196ebfdae8d1c3eeba14de53d03b6c178\$lut for cells of type $lut.
Using template $paramod\$lut\WIDTH=32'00000000000000000000000000000010\LUT=4'1110 for cells of type $lut.
Using template $paramod\$lut\WIDTH=32'00000000000000000000000000000011\LUT=8'10111110 for cells of type $lut.
Using template $paramod$6a7ffbb4f199bc5ae4b6f118b18a370831f092b0\$lut for cells of type $lut.
Using template $paramod$3fcec9898263ca468182f63c9bd5a1ae07e3214f\$lut for cells of type $lut.
Using template $paramod\$lut\WIDTH=32'00000000000000000000000000000011\LUT=8'11100000 for cells of type $lut.
Using template $paramod\$lut\WIDTH=32'00000000000000000000000000000011\LUT=8'11010000 for cells of type $lut.
Using template $paramod$703a13a751e631ef123f38f7d2125aeabec0f94c\$lut for cells of type $lut.
No more expansions possible.
<suppressed ~794 debug messages>
Removed 0 unused cells and 358 unused wires.

16.45. Executing AUTONAME pass.
Renamed 4423 objects in module ice40hx8k (37 iterations).
<suppressed ~407 debug messages>

16.46. Executing HIERARCHY pass (managing design hierarchy).

16.46.1. Analyzing design hierarchy..
Top module:  \ice40hx8k

16.46.2. Analyzing design hierarchy..
Top module:  \ice40hx8k
Removed 0 unused modules.

16.47. Printing statistics.

=== ice40hx8k ===

   Number of wires:                192
   Number of wire bits:            934
   Number of public wires:         192
   Number of public wire bits:     934
   Number of memories:               0
   Number of memory bits:            0
   Number of processes:              0
   Number of cells:                346
     SB_CARRY                       51
     SB_DFFE                        15
     SB_DFFER                       15
     SB_DFFESR                      15
     SB_DFFESS                       4
     SB_DFFR                        61
     SB_DFFS                         1
     SB_DFFSR                       16
     SB_LUT4                       167
     SB_PLL40_CORE                   1

16.48. Executing CHECK pass (checking for obvious problems).
Checking module ice40hx8k...
Found and reported 0 problems.

16.49. Executing JSON backend.

Warnings: 83 unique messages, 83 total
End of script. Logfile hash: 2ef8b8e3f7, CPU: user 0.87s system 0.01s, MEM: 31.04 MB peak
Yosys 0.27 (git sha1 5f88c218b, gcc 11.3.0-1ubuntu1~22.04 -fPIC -O3)
Time spent: 25% 27x read_verilog (0 sec), 18% 1x abc (0 sec), ...
